=begin
    Loresong Unlocking (RECALL) Assistance
    Handy script to assist with recall info
	
    SYNTAX - ;totalrecall <OPTION>
	
    OPTION Selections Include:
         CHANCE - Description of test RECALLs and chance to succeed
         ROLLS  - Numeric values for roll descriptions
         BONUS  - Shows RECALL loresong unlock success bonus formula

       todo: none
     author: Naamit
       name: totalrecall
       tags: totalrecall, recall, loresinging, bard, lkp, unlocking, murderverse, murder, murderverses
    version: 1.2

    changelog:
        1.2  (2020-12-9)
            - Fixed math and regex for commageddon. Also added formula to output
        1.1  (2020-12-05)
            - Initial release, based on Tysong's ;tears script
            - Fixed typo in output
=end

#Arrays of Roll Results and Descriptions [33, 82]-Needed [40, 6]-Roll
r_need = [["97% (Will only fail on a fumble.)", "You can only fail if you are horribly unlucky.                                    "],
		  ["90%-96% Chance                   ", "easily enough, barring bad luck.                                                  "],
		  ["75%-89% Chance                   ", "The odds are on your side                                                         "],
		  ["55%-74% Chance                   ", "You are more likely than not to succeed.                                          "],
		  ["35%-54% Chance                   ", "will be difficult, but possible.                                                  "],
		  ["15%-34% Chance                   ", "will be very difficult.                                                           "],
		  ["2%-14% Chance                    ", "will be nearly impossible.                                                        "],
		  ["1% Chance (Roll 100)             ", "You will likely need a miracle                                                    "],
		  ["Only rolling over 100 has a shot.", "is completely beyond your abilities.                                              "]]

r_result = [["You make an outstanding attempt!        ", "90+   "],
			["You make an excellent attempt!          ", "80+   "],
			["You make a good attempt!                ", "70+   "],
			["You make a decent attempt.              ", "60+   "],
			["You make an okay attempt.               ", "50+   "],
			["You make a passable attempt.            ", "40+   "],
			["You make a questionable attempt.        ", "30+   "],
			["You make a poor attempt!                ", "20+   "],
			["You make a very poor attempt!           ", "10+   "],
			["You make a horribly poor attempt!       ", "2+    "],
			["You make an astoundingly inept attempt! ", "1     "],
			["Something doesn't seem right...         ", "Fumble"]]

def rowout(msg_arr, mbold = false)
        out = '| '
        msg_arr.each { |m|
                out += '%-12.12s | ' % m
        }
        if mbold == true
                _respond "#{monsterbold_start}#{out}#{monsterbold_end}"
        else
                _respond out
        end
end

def rowout2(msg_arr, mbold = false)
        out = '| '
        msg_arr.each { |m|
                out += '%-16.16s | ' % m
        }
        if mbold == true
                _respond "#{monsterbold_start}#{out}#{monsterbold_end}"
        else
                _respond out
        end
end

if variable[0].nil?
	respond "You need to give an option. See below:"
	respond ""
	respond "   ;totalrecall bonus  - Shows recall success bonus formula"
	respond "   ;totalrecall chance - Description Of Test RECALLs And Chance To Succeed"
	respond "   ;totalrecall rolls  - Numeric Values For Roll Descriptions"
	respond

elsif script.vars[0] =~ /chance/
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "|                                  Description Of Test RECALL And Chance To Succeed                                       |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	respond "| Chance To Get A Successful RECALL  |                       Messaging On Test RECALL                                     |"
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	r_need.each{|rchan, rmes|
	respond "| #{rchan}  | #{rmes} |"}
	respond "|-------------------------------------------------------------------------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /rolls/
	respond "|-------------------------------------------------------|"
	respond "|          Numeric Values For Roll Descriptions         |"
	respond "|-------------------------------------------------------|"
	respond "|          Roll Result Description         | Roll Value |"
	respond "|-------------------------------------------------------|"
	r_result.each{|rdesc, rval|
	respond "| #{rdesc} |    #{rval}  |"}
	respond "|-------------------------------------------------------|"
	exit
elsif script.vars[0] =~ /bonus/
	magicitemuse = 0
	elementalmanacontrol = 0
	mentalmanacontrol = 0
	telepathy = 0
	bardranks = 0
	level = 0
	influence = 0
	aura = 0

	put "skills"
	loop {
	    line = get
    	if line =~ /^  Magic Item Use\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
	        magicitemuse = $1.to_i
	    elsif line =~ /^  Elemental Mana Control\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
        	elementalmanacontrol = $1.to_i
	    elsif line =~ /^  Mental Mana Control\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
        	mentalmanacontrol = $1.to_i
    	elsif line =~ /^  Mental Lore - Telepathy\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(?:\d+)(?:\s+)(\d+)$/
	        telepathy = $1.to_i
	    elsif line =~ /^  Bard\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\.\|(?:\s+)(\d+)$/
	        bardranks = $1.to_i
	    elsif line =~ /\(Use SKILLS BASE to display unmodified ranks and goals\)/
        	break
    	end
	}
	put "info"
	loop {
	    line = get
	    if line =~ /^Gender: (?:\w+)(?:\s+)Age: (?:[\d,]+)(?:\s+)Expr: (?:[\d,]+)(?:\s+)Level:(?:\s+)(\d+)$/
        	level = $1.to_i
    	elsif line =~ /^        Aura \(AUR\):(?:\s+)(?:\d+) \((?:\d+|-\d+)\)(?:\s+)\.\.\.(?:\s+)(?:\d+) \((\d+|-\d+)\)$/
	        aura = $1.to_i
	    elsif line =~ /^   Influence \(INF\):(?:\s+)(?:\d+) \((?:\d+|-\d+)\)(?:\s+)\.\.\.(?:\s+)(?:\d+) \((\d+|-\d+)\)$/
        	influence = $1.to_i
        	break
    	end
	}

    respond "Total RECALL Success Formula"
    respond "---------------------------"
    respond "  #{(level).to_s.rjust(3)} : Level"
    respond "+ #{(aura).to_s.rjust(3)} : AUR Bonus"
    respond "+ #{(influence).to_s.rjust(3)} : INF Bonus"
    respond "+ #{((magicitemuse/2).truncate).to_s.rjust(3)} : trunc(MIU ranks/2)"
    respond "+ #{((elementalmanacontrol/2).truncate).to_s.rjust(3)} : trunc(EMC ranks/2)"
    respond "+ #{((mentalmanacontrol/2).truncate).to_s.rjust(3)} : trunc(MMC ranks/2)"
    respond "+ #{(telepathy).to_s.rjust(3)} : Telepathy Ranks"
    respond "+ #{((bardranks > level)? (level * 2) + (bardranks - level) : bardranks * 2).to_s.rjust(3)} : Bard Spells (to level *2)+(over level)"
    respond "==========================="
    respond "Total of #{level + (aura) + (influence) + (magicitemuse/2).truncate + (elementalmanacontrol/2).truncate + (mentalmanacontrol/2).truncate + (telepathy) + ((bardranks > level)? (level * 2) + (bardranks - level) : bardranks * 2).truncate}"
	exit
end
