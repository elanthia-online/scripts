=begin
  Better money parser for Gemstone commands

  examples:
    shop withdraw 30m
    shop sell 5.34m
    withdraw 5k silver
    give Tony 3m
    exchange right with Tony for 3m silver

  required: Lich 4.3.12
   version: 1.0.2
    author: Ondreian

  changelong:
    1.0.2: fix ignore regex for speech commands
    1.0.1: add support for CHAT and THINK esp commands
=end

class MoneyChanger
  FACTORS = {
    k: 1_000,
    m: 1_000_000,
    b: 1_000_000_000,
  }

  NUM    = "number"
  FACTOR = "factor"
  MONEY  = /(?<number>[\d]+|[\d]*([,|.][\d]*))(?<factor>#{FACTORS.keys.join("|")})/i
  IGNORE = %w(whisper say ' think chat)
  IGNORE_REGEX = Regexp.union(IGNORE.map { |cmd| Regexp.new("^<c>%s" % cmd) })

  def self.debug(msg)
    respond "[#{self.name}] >>> #{msg}"
  end

  def self.match(str)
    if (data = MONEY.match(str))
      {
        number: data[NUM].to_f,
        factor: FACTORS[data[FACTOR].downcase.to_sym]
      }
    end
  end

  def self.attach!
    before_dying { UpstreamHook.remove(self.name) }

    UpstreamHook.add(self.name, proc { |cmd|
      MoneyChanger.parse cmd
    })
  end

  def self.verb(cmd)
    cmd.gsub("<c>", "")
       .split.first
  end

  def self.parse(cmd)
    return cmd if cmd =~ IGNORE_REGEX
    if (verb(cmd)[0] != $lich_char && !IGNORE.include?(verb(cmd))) && (data = self.match(cmd))
      cmd = cmd.gsub(MONEY, (data[:number] * data[:factor]).to_i.to_s)
    end
    cmd
  end
end

MoneyChanger.attach!

loop { sleep 1 }
