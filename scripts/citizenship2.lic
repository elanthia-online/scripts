=begin
  Generic citizenship script for all towns. Will purchase items that
  cost approximately 50-100 silver until the character has citizenship.

  Usage:
    ;citizenship2 help
    ;citizenship2 <town>

  Notes :
    - Citizenship2 supports all towns.
    - May require approx. 8 hours and 100k (hard-coded failsafe to halt at 250k)
    - There is a limit to the number of silver per hour which credits citizenship
    - Reducing pause time may waste silvers without reducing citizenship time

            author: elanthia-online
      contributors: Naamit, Oweodry
              game: Gemstone
              tags: citizenship
           version: 1.0.0

  Version Control:
    Major_change.feature_addition.bugfix
  v1.0.0 (2024-04-09)
    - fix for Ta'Illistim Charcuterie Weyr changes

=end
=begin
  - 20230604 - Rubocop cleanup
  - 20230410 - Updated IMT clerk description, clarified 250k withdrawal limit feature in error messaging
  - 20210828 - Updated IMT clerk room number by request
  - 20210518 - Added Kraken's Fall
  - 20201217 - Xfr Elanthia Online git (KF update pending upon real room ID update)
=end

# Without pauses, requires: ~400k in bank, ~8hrs

# ---------- Initialization (start) ------------------------------------------ #

# Location dependent info
towndata = {	# "" => { "town" => "", "bank" => , "clerk" => , "npc" => "" , "book" => "" },
  "fwi" => { "town" => "Isle of the Four Winds", "bank" => 3672, "clerk" => 16696, "npc" => "clerk", },
  "imt" => { "town" => "Icemule Trace", "bank" => 3370, "clerk" => 29541, "npc" => "giantwoman", },
  "wl"  => { "town" => "Wehnimer's Landing", "bank" => 400, "clerk" => 398, "npc" => "clerk", },
  "sol" => { "town" => "Solhaven", "bank" => 5710, "clerk" => 12824, "npc" => "sailor", },
  "kd"  => { "town" => "Kharam-Dzu", "bank" => 1838, "clerk" => 12541, "npc" => "clerk", },
  "kf"  => { "town" => "Kraken's Fall", "bank" => 28870, "clerk" => 28975, "npc" => "clerk", },
  "ti"  => { "town" => "Ta'Illistim", "bank" => 11, "clerk" => 18146, "npc" => "clerk", },
  "cy"  => { "town" => "Cysaegir", "bank" => 4686, "clerk" => 17133, "npc" => "clerk", },
  "tv"  => { "town" => "Ta'Vaalor", "bank" => 10325, "clerk" => 10320, "npc" => "clerk", },
  "zl"  => { "town" => "Zul Logoth", "bank" => 9472, "clerk" => 16903, "npc" => "clerk", },
  "rr"  => { "town" => "River's Rest", "bank" => 10911, "clerk" => 10895, "npc" => "clerk", },
}

# Time to pause between buying things (edit this value if you want)
pausetime = 55
$citizenship_total_withdrawn = 0

# Generic go2 function
def go_place(location)
  start_script "go2", ["#{location}", "_disable_confirm_"]
  wait_until { !running? "go2" }; pause 0.25
end

# Withdraw
def do_bank(data)
  go_place(data["bank"])
  multifput "deposit all", "withdraw 50000 note"
  $citizenship_total_withdrawn += 50000
  if $citizenship_total_withdrawn > 250000
    echo "### Failsafe: Over 250k has been withdrawn from your bank account this session"
    echo "###           Exiting just in case something has gone wrong"
    exit
  end
end

# Current citizenship
def check_citizenship
  pause 0.5; clear
  fput "citizenship"
  citstring = matchtimeout(1, /You.*citizenship/i)
  return citstring
end

# Check citizen status at clerk
def do_clerk(data)
  go_place(data["clerk"])
  fput "ask #{data["npc"]} about status"
  fput "ask #{data["npc"]} about citizenship"
  citstring = matchtimeout(1, /You.*citizenship/i)
  if (citstring =~ /you do seem to be eligible for full citizenship/i)
    fput "write book"
    echo "********************************************************"
    echo "**************** Citizenship Aquired! ******************"
    echo "********************************************************"
  elsif citstring =~ /already have citizenship/i
    echo "### You're already a citizen somewhere!"
    fput "citizenship"
    exit
  end
end

# ---------- Initialization (end) -------------------------------------------- #

# ---------- Arguments (start) ----------------------------------------------- #

# Four Winds Isle
if script.vars.find { |var| var =~ /fwi/i }
  town = "fwi"
  def do_buying
    noun = "bread"
    go_place("12283"); multifput "order 5", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Icemule Trace
elsif script.vars.find { |var| var =~ /imt/i }
  town = "imt"
  def do_buying
    noun = "griddlecake"
    go_place("3449"); multifput "order 7", "take #{noun} on ##{GameObj.room_desc.find { |obj| obj.noun == "bar" }.id}"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Landing
elsif script.vars.find { |var| var =~ /wl/i }
  town = "wl"
  def do_buying
    noun = "sandwich"
    go_place("3809"); multifput "order 13", "take #{noun} on ##{GameObj.room_desc.find { |obj| obj.noun == "bar" }.id}"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Solhaven
elsif script.vars.find { |var| var =~ /sol/i }
  town = "sol"
  def do_buying
    noun = "cake"
    go_place("12808"); multifput "order 5", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Kharam Dhu
elsif script.vars.find { |var| var =~ /kd/i }
  town = "kd"
  def do_buying
    noun = "pie"
    go_place("12535"); multifput "order 3", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Kraken's Fall
elsif script.vars.find { |var| var =~ /kf/i }
  town = "kf"
  def do_buying
    noun = "cherries"
    go_place("28951"); multifput "order 9", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Ta'Illistim
elsif script.vars.find { |var| var =~ /ti/i }
  town = "ti"
  def do_buying
    noun = "bacon"
    go_place("18679"); multifput "order 1", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Cysaegir
elsif script.vars.find { |var| var =~ /cy/i }
  town = "cy"
  def do_buying
    noun = "spiculum"
    go_place("4668"); multifput "order 10", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "drop my #{noun}"; waitrt?; pause 0.5
    end
  end
# Ta'Vaalor
elsif script.vars.find { |var| var =~ /tv/i }
  town = "tv"
  def do_buying
    noun = "bread"
    go_place("10368"); multifput "order 16", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "gobble my #{noun}"; waitrt?; pause 0.5
    end
  end
# Zul Logoth
elsif script.vars.find { |var| var =~ /zl/i }
  town = "zl"
  def do_buying
    noun = "almond"
    go_place("9501"); multifput "order 10", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      put "eat my #{noun}"; waitrt?; pause 0.5
    end
  end

# River's Rest
elsif script.vars.find { |var| var =~ /rr/i }
  town = "rr"
  def do_buying
    noun = "honeycomb"
    go_place("11005"); multifput "order 27", "buy"; pause 0.5
    while checkright =~ /#{noun}/ or checkleft =~ /#{noun}/
      fput "eat my #{noun}"; waitrt?; pause 0.5
    end
  end

# Help text
else
  respond("\n\tThis script iteratively buys 50-100 silver items to obtain citizenship.
	It will purchase 1 item per minute and check with the town clerk every
	10 minutes. Budget approximately 100k and 8hrs. This script will exit if
	more than 250k is withdrawn from your bank account.")
  respond("\n\tSyntax: ;#{script.name} <town code>\n\n")
  locations = ["\tCode\t-\tTown"]
  towndata.keys.each { |k| locations.push("\t#{k}\t-\t#{towndata[k]["town"]}") }
  locations.each { |loc| respond(loc) }; respond("\n")
  exit
end

# ---------- Arguments (end) ------------------------------------------------- #

# ---------- Main (start) ---------------------------------------------------- #

start_time = Time.now
empty_hands

# Main loop
while check_citizenship !~ /You currently have full citizenship.* #{towndata[town]["town"]}/i
  if checkright !~ /note/ and checkleft !~ /note/ then do_bank(towndata[town]); end
  10.times { do_buying; pause pausetime }
  do_clerk(towndata[town])
end

fill_hands
echo "### Full citizenship in #{towndata[town]["town"]}!"
echo "### Started: #{start_time}"
echo "### Finished: #{Time.now}"

# ---------- Main (end) ------------------------------------------------------ #
