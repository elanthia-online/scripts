=begin
  tourniquet.lic - Deal with Bleeding using society abilities/powers

          author: elanthia-online
    contributors: Dissonance
            game: Gemstone
            tags: health, bleeding, society
         version: 1.0.0

  Changelog
    v1.0.0 - 2025-04-30
      - Created
=end


module Tourniquet

  def self.stop_healing
    # heal until 95% for now
    # put to function to allow for future changes that can be a bit smarter
    # about healing and using resources (i.e. don't use healing if it's just
    # going to be a minimum heal because 5% isn't a lot of health)
    # something like:
    #   (Char.health > (Char.max_health-20)) || percent_health > 95
    Char.percent_health >= 95
  end

  def self.check_society_ability
    case Society.member
    when /voln/i
      Spell["Symbol of Restoration"].known?
    when /sunfist/i
      Spell["Sigil of Mending"].known?
    when /council/i
      Spell["Sign of Staunching"].known? || Spell["Sign of Clotting"].known?
    else
      false
    end
  end

  def self.use_staunching_or_clotting
    if Spell["Sign of Staunching"].known?
      return unless Spell["Sign of Staunching"].affordable?
      return if Effects::Buffs.active?("Sigil of Determination")

      Spell["Sign of Staunching"].cast
    elsif Spell["Sign of Clotting"].known?
      return unless Spell["Sign of Clotting"].affordable?
      return if Effects::Buffs.active?("Sign of Clotting")
      
      Spell["Sign of Clotting"].cast
    end
  end

  def self.voln_favor_cost_affordable?()
    return Resources.voln_favor > 900 # broke out for future use so we can properly calculate favor cost instead of estimating it
    # 900 is approximate favor cost for a level 100
  end

  def self.use_restoration
    return unless Spell["Symbol of Restoration"].known?
    unless voln_favor_cost_affordable?  # favor doesn't regen quickly, so we're just going to exit if we don't have enough
      Lich::Messaging.msg("error", "Not enough favor to use Symbol of Restoration.")
      exit
    end

    if Char.percent_health < 65
      Spell["Symbol of Restoration"].cast until (stop_healing || !voln_favor_cost_affordable?)
    end
  end

  def self.use_mending_and_health
    return unless Spell["Sigil of Mending"].known?
    return unless Spell["Sigil of Mending"].affordable?
    return if Effects::Buffs.active?("Sigil of Mending")
  
    Spell["Sigil of Mending"].cast

    if Char.percent_health < 65
      Spell["Sign of Staunching"].cast until stop_healing
    end
  end

  def self.wait_for_bloodloss( check_bleeding: true, check_poison: false, check_disease: false )
    # wait until we are bleeding or other health loss
    # this is a bit of a hack, but it works for now
    wait_until { (check_bleeding && checkbleeding) || (check_poison && checkpoison) || (check_disease && checkdisease) }
    Lich::Messaging.msg("warn", "You're losing blood...")
  end
end

unless check_society_ability
  Lich::Messaging.msg("error", "You do not have access to an applicable society ability to deal with bleeding or bloodloss.")
  exit
end

loop
  Lich::Messaging.msg("info", "Now watching for health loss...")
  case Society.member
  when /voln/i # member of voln?
    wait_for_bloodloss( check_bleeding: true, check_poison: true, check_disease: true )
    use_restoration
  when /sunfist/i # member of sunfist?
    wait_for_bloodloss( check_bleeding: true, check_poison: true, check_disease: true )
    use_mending_and_health
  when /council/i # member of council?
    wait_for_bloodloss( check_bleeding: true, check_poison: false, check_disease: false )
    use_staunching_or_clotting
  else
    Lich::Messaging.msg("error", "This shouldn't happen.  Please provide the following info to Elanthia Online:  Script Failed: #{Society.member.downcase}")
  end
end
