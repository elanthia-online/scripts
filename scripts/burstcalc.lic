=begin
    Calculates your spellburst potential for hunting Wyneb, OTF, and Nelemar.
    *** WARNING! ***
    This script is a GUIDE, in no way intended or expected to be accurate, be happy it exists and STFU.
    *** WARNING ***
    
    Script uses XML information to determine worn spells.
    It is as close as I can get to a spellburst formula with our(my) current information.
    It is fairly accurate up until about HALF YOUR LEVEL in wearable mana, and then it becomes increasingly less accurate.
    If you have information that will improve the accuracy of the script, I'll gladly modify accordingly.

    SYNTAX - ;burstcalc

        author: elanthia-online
  contributers: Tysong, Gibreficul, Tillmen, Mogonis
          game: Gemstone
          tags: burst, mana burst, burst calc
       version: 1.3

    changelog:
        1.3 (2021-04-07)
            Initial attempt to add Monk compatibility
        1.2 (2021-03-12)
            Added display of unknown spells to output
        1.1 (2021-03-12)
            Fix for unknown XMLData.active_spells giving NilClass error
        1.0 (2017-10-27)
            Initial release from Gibreficul
=end
=begin
    Thanks Mogonis who got help from Tillmen in cleaning up the output display.
    Thanks also to Seth (because I forget your character name) for getting it back to me when I lost my most up-to-date scripts.
=end

quiet_exit
level = Char.level
miu = Skills.magicitemuse
as = Skills.arcanesymbols
hp = Skills.harnesspower
sa = Skills.spellaiming
emc = Skills.emc
smc = Skills.smc
mmc = Skills.mmc
ela = Skills.elair
ele = Skills.elearth
elf = Skills.elfire
elw = Skills.elwater
slb = Skills.slblessings
slr = Skills.slreligion
sls = Skills.slsummoning
sld = Skills.sldemonology
sln = Skills.slnecromancy
mld = Skills.mldivination
mlm = Skills.mlmanipulation
mlte = Skills.mltelepathy
mltc = Skills.mltransference
mltm = Skills.mltransformation
safespells = [201, 210, 212, 214, 216, 307, 310, 311, 316, 412, 413, 501, 504, 607, 703, 706, 713, 715, 716, 1001, 1005, 1015, 1016, 1117, 1120, 1125, 1203, 1211, 1219, 1225, 1605, 1609, 1617, 1618]
prime_stats = as + miu + sa + hp
second_stats = emc + mmc + smc + ela + ele + elf + elw + slb + slr + sls + sld + sln + mld + mlm + mlte + mltc + mltm
burst_factor = (225.0 / level)
first_limit = Char.level / 2.0
burst_mana = (100 * (prime_stats + (second_stats / 2.0)) / burst_factor).round / 100.0
disclaimer = false
echo burst_mana
if burst_mana > first_limit
#	echo "OVER LIMIT"
	disclaimer = true
	burst_mana = first_limit + ((burst_mana - first_limit) / (550 / Char.level))
end
$outside_spells = []
$unknown_spells = []
XMLData.active_spells.each{ |a, b|
    if !(Spell[a].known? || Spell[a].num > 1700 || Spell[a].num.nil? || safespells.include?(Spell[a].num))
        $outside_spells.push(Spell[a].num)
    elsif !(Spell[a].known? || Spell[a].num > 1700 || safespells.include?(Spell[a].num))
        $unknown_spells.push(a)
    end
}
respond ""
respond "  Outside spells: [#{$outside_spells.sort.join(", ")}]"
respond "  Unknown spells: [#{$unknown_spells.sort.join(", ")}] - Not Able to Factor At This Time" if !$unknown_spells.empty?
x = 0
$outside_spells.delete(nil)
$outside_spells.each{|spell|
	if Spell[spell].circle.to_i == 1
		if Char.prof =~ /warrior|rogue|sorcerer|paladin|empath|cleric|ranger|monk/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 100 >= 9
	elsif Spell[spell].circle.to_i == 2
		if Char.prof =~ /empath|cleric/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 200 >= 9
	elsif Spell[spell].circle.to_i == 3
		groupspells = [307, 310]
		next if groupspells.include?(Spell[spell].num)
		if Char.prof =~ /cleric/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 300 >= 9

	elsif Spell[spell].circle.to_i == 4
		if Char.prof =~ /warrior|rogue|sorcerer|bard|wizard/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 400 >= 9
	elsif Spell[spell].circle.to_i == 5
		if Char.prof =~ /wizard/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 500 >= 9
	elsif Spell[spell].circle.to_i == 6
		if Char.prof =~ /ranger/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 600 >= 9
	elsif Spell[spell].circle.to_i == 7
		if Char.prof =~ /sorcerer/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 700 >= 9
	elsif Spell[spell].circle.to_i == 9
		if Char.prof =~ /wizard/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 900 >= 9
	elsif Spell[spell].circle.to_i == 10
		next
		if Char.prof =~ /bard/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
	elsif Spell[spell].circle.to_i == 11
		next if Spell[spell].num == 1125
		if Char.prof =~ /empath/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if spell - 1100 >= 9
	elsif Spell[spell].circle.to_i == 12
		if Char.prof =~ /monk/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if Spell[spell].num - 1200 >= 9
	elsif Spell[spell].circle.to_i == 16
		groupspells = [1605, 1609, 1618, 1617]
		next if groupspells.include?(Spell[spell].num)
		if Char.prof =~ /paladin/i
			x += (eval(Spell[spell].cost) / 2.0)
		else
			x += eval(Spell[spell].cost)
		end
		x += 0.5 if spell - 1600 >= 9
	end
}
[601, 503, 509, 911, 215, 211, 219, 618, 313, 913, 513].each{|item|;x += 0.5 if $outside_spells.include?(item)}
burst_mana = (burst_mana*2).to_i/2.00
respond ""
respond "    Limit:   %.2f" % burst_mana
respond "    Current: %.2f" % x
respond ""
if x > burst_mana
	respond "  You are OVER by %.2f mana" % (x-burst_mana)
else
	respond "  You are UNDER by %.2f mana" % (burst_mana-x)
end
respond ""
respond "Your wearable mana exceeds half your level.  Formula used may over-estimate wearable mana, use with caution." if disclaimer
respond "" if disclaimer
