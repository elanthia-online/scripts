=begin
  Stormfront performance is negatively affected by links, but it handles highlights just fine.

  linktothefast wraps all links with XML that says to use the link-colored preset, so you still get the benefits of
  link colors even while links are turned off.  Then you can turn links off (default: Alt+L) to gain better performance
  in StormFront and just toggle them on if needed.

  ;autostart add --global linktothefast

        author: elanthia-online
  contributors: LostRanger
          game: gs
          tags: utility
       version: 0.1.6
        source: https://github.com/elanthia-online/scripts

  Version Control:
    Major_change.feature_addition.bugfix
    0.1.6 (2023-10-05)
      Fix nested <d> and <a> xml components
    0.1.5 (2023-06-04)
      Remove $SAFE references
    0.1.4 (2019-09-27)
      Fix assorted issues when multiple linkables are within a preset, like when people talk to animals.
    0.1.3 (2019-09-27)
      Now prompts for trust on Ruby installs BEFORE breaking things.
    0.1.2 (2019-09-25)
      Now prompts for trust on Ruby installs that need it.
      Handles cases where multiple links existed within one preset (i.e. directed speech)
    0.1.1 (2019-09-25)
      Approximately 94% less broken
      Supports recolor.
    0.1.0 (2019-09-25)
      Initial release
=end

=begin
HERE THERE BE DRAGONS

Welcome, curious source-diver!

This script does a few things unconventionally.  The way it modifies output could potentially break other scripts that
are relying on DownstreamHook if they hook after LinkToTheFast does.  To prevent this and ensure we always run last, we
take the unconventional step of modifying DownstreamHook itself.

This is NOT the recommended way of doing things normally, and you should NOT use this script as a general example on
how to modify output from the game.  Also, the implementation route here may not work particularly well if multiple
scripts try to do it.

Otherwise, enjoy!

--LostRanger
=end

# Remove all of our patches when we die.
before_dying do
  class << DownstreamHook
    undef_method :run
    alias_method :run, :original_run
  end
end

class << DownstreamHook
  alias_method :original_run, :run

  def run(server_string)
    # Follow Lich's normal DownstreamHook.run
    server_string = original_run(server_string)
    return server_string unless server_string

    server_string = server_string.dup
    # First, add presets around all links.  If this does nothing, bail.
    return server_string unless (server_string.gsub(/(<[a](?: [^>]*)?>.*?<\/[a]>)/, "<preset id='link'>\\1</preset>") || server_string.gsub(/(<[d](?: [^>]*)?>.*?<\/[d]>)/, "<preset id='link'>\\1</preset>"))
    server_string.gsub!(/(<[a](?: [^>]*)?>.*?<\/[a]>)/, "<preset id='link'>\\1</preset>")
    server_string.gsub!(/(<[d](?: [^>]*)?>.*?<\/[d]>)/, "<preset id='link'>\\1</preset>")

    # Strip any of our freshly-added presets that occur during monsterbold, because in SF, bolded links use the
    # bold formatting rather than a mix of the two and that ceases to be true if a preset is applied.
    server_string.gsub!(/<pushBold\s*\/>.*?<popBold\s*\/>/) do |s|
      s.gsub(/<preset id='link'>(.*?)<\/preset>/, "\\1")
    end

    # Do the above for regular bold text too, which SF supports.
    server_string.gsub!(/<b\s*>.*?<\/b\s*>/) do |s|
      s.gsub(/<preset id='link'>(.*?)<\/preset>/, "\\1")
    end

    # Recolor and speech use presets.  We use presets.  Links within a preset normally follow the preset color,
    # so we need to strip any links we add within a preset...
    #
    # For performance reasons, and since we're unlikely to have 32 nested presets unless a script is misbehaving...
    # We cheat and use an int as a stack of booleans
    stack = 0
    server_string.gsub!(/<\/?preset([^>]*)>/) do |tag|
      if tag[1] == 'p' then # Opening tag
        stack <<= 1 # Push next bits.
        if stack == 0 or $1 != " id='link'"
          # Stack is empty, or it wasn't a link.
          stack |= 1
          next tag
        else
          next ''
        end
      elsif stack == 0 then # Stack underflow.  Silently ignore it.
        next tag
      elsif stack & 1 == 1
        stack >>= 1
        next tag
      else
        stack >>= 1
        next ''
      end
    end

    return server_string
  end
end

unless $frontend == 'stormfront'
  echo "Wait, this isn't StormFront.  I'm probably only useful with StormFront, but you're welcome to try..."
end

echo "version 0.1.5 (2023-06-04) started.  Stop me with #{$lich_char}kill #{script.name}"
hide_me
sleep
