=begin

	Council of Light script to manage signs
	Tool Tips will display Mana and Spirit costs to cast
	
	;isigns setup for configuration

	author: Elanthia-Online (GTK updates)
	original author: Ifor Get
	contributing authors: SpiffyJr, Tillmen, Kaldonis
	game: Gemstone
	tags: CoL, Council of Light, Signs, Society
	required: Lich > 5.0.1
	version: 3.1

	changelog:
		3.1 (2021-03-01): 
			Updated menu elements to support GTK3 in Lich5
		3.0 (2018-01-27:
			Original baseline release 
=end




	settings = CharSettings.to_hash													#### CHANGED: Replaced Settings[Char.name] with CharSettings hash

if script.vars.empty?															#Runs script based on settings
	target_list = [ Char.name ]
elsif script.vars[1].downcase == 'help'													#Displays help for script in Story window if ";iSigns help" is entered at command line
	respond
	respond 'Usage:'
	respond "   #{$clean_lich_char}#{script.name} help                     show this message"
	respond "   #{$clean_lich_char}#{script.name} setup                    show setup window"
	respond
	exit
elsif script.vars[1] =~ /^setup$|^options$/i												#Pulls up GUI if user enters ";iSigns setup" or ";iSigns options"
	window = window_action = nil

	Gtk.queue {															#Beginning of GUI Setup
		gtk_checks = Hash.new 													#### CHANGED: Added new gtk_checks hash to store all checkbuttons in so we can loop through it later

		saveButton = Gtk::Button.new("Save and Close")

		window = Gtk::Window.new(Gtk::Window::TOPLEVEL)
		window.set_title  "iSigns 3.1 - Council of Light Sign Upkeep"				#Sets window title
		window.border_width = 20												#Sets border width of window

		vbox = Gtk::Box.new(:vertical, 0) if Gtk::Version::STRING.chr == '3'
		vbox = Gtk::VBox.new(false, 0) if Gtk::Version::STRING.chr == '2' || !Gtk.const_defined?(:Version)

		warding_check = Gtk::CheckButton.new("Sign of Warding: +5 to DS")						#Adds Check Button with label
		warding_check.active = settings['9903']										#Sets iSignWarding to CHECKED when the box is checked
		gtk_checks['9903'] = warding_check 											#### CHANGED: Added to gtk_checks

		striking_check = Gtk::CheckButton.new("Sign of Striking: +5 to AS")
		striking_check.active = settings['9904']
		gtk_checks['9904'] = striking_check 											#### CHANGED: Added to gtk_checks

		clotting_check = Gtk::CheckButton.new("Sign of Clotting: Stops all bleeding")
		clotting_check.active = settings['9905']
		gtk_checks['9905'] = clotting_check 											#### CHANGED: Added to gtk_checks

		thought_check = Gtk::CheckButton.new("Sign of Thought: Amunet")
		thought_check.active = settings['9906']
		gtk_checks['9906'] = thought_check 											#### CHANGED: Added to gtk_checks

		defending_check = Gtk::CheckButton.new("Sign of Defending: +10 to DS")
		defending_check.active = settings['9907']
		gtk_checks['9907'] = defending_check 											#### CHANGED: Added to gtk_checks

		smiting_check = Gtk::CheckButton.new("Sign of Smiting: +10 to AS")
		smiting_check.active = settings['9908']
		gtk_checks['9908'] = smiting_check 											#### CHANGED: Added to gtk_checks

		staunching_check = Gtk::CheckButton.new("Sign of Staunching: Stops all bleeding, twice duration of Clotting")
		staunching_check.active = settings['9909']
		gtk_checks['9909'] = staunching_check 											#### CHANGED: Added to gtk_checks

		deflection_check = Gtk::CheckButton.new("Sign of Deflection: +20 Bolt DS")
		deflection_check.active = settings['9910']
		gtk_checks['9910'] = deflection_check 											#### CHANGED: Added to gtk_checks

		swords_check = Gtk::CheckButton.new("Sign of Swords: +20 AS")
		swords_check.active = settings['9912']
		gtk_checks['9912'] = swords_check 										#### CHANGED: Added to gtk_checks

		shields_check = Gtk::CheckButton.new("Sign of Shields: +20 DS")
		shields_check.active = settings['9913']
		gtk_checks['9913'] = shields_check 											#### CHANGED: Added to gtk_checks

		dissipation_check = Gtk::CheckButton.new("Sign of Dissipation: +15 TD")
		dissipation_check.active = settings['9914']
		gtk_checks['9914'] = dissipation_check 											#### CHANGED: Added to gtk_checks

		staunching_check.signal_connect('toggled') { Gtk.queue { clotting_check.active = false if staunching_check.active? } }		#Since it would be silly to have Clotting and Staunching running at the same time, this toggles
		clotting_check.signal_connect('toggled') { Gtk.queue { staunching_check.active = false if clotting_check.active? } }		# boxes that would cause overlapping signs.


#		tooltips = Gtk::Tooltips.new												#Tool Tips!
		warding_check.set_tooltip_text("1 Mana")										#Displays mana cost of sigil when mouse hovers over indicated CheckButton
		striking_check.set_tooltip_text("1 Mana")
		clotting_check.set_tooltip_text("1 Mana")
		thought_check.set_tooltip_text("1 Mana")
		defending_check.set_tooltip_text("2 Mana")
		smiting_check.set_tooltip_text("2 Mana")
		staunching_check.set_tooltip_text("1 Mana")
		deflection_check.set_tooltip_text("3 Mana")
		swords_check.set_tooltip_text("1 Spirit, drained at end")
		shields_check.set_tooltip_text("1 Spirit, drained at end")
		dissipation_check.set_tooltip_text("1 Spirit, drained at end")

		vbox.pack_start(warding_check, false, true, 0)										#Now that you have defined everything in the GUI, this actually puts it together
		vbox.pack_start(striking_check, false, true, 0)
		vbox.pack_start(clotting_check, false, true, 0)
		vbox.pack_start(thought_check, false, true, 0)
		vbox.pack_start(defending_check, false, true, 0)
		vbox.pack_start(smiting_check, false, true, 0)
		vbox.pack_start(staunching_check, false, true, 0)
		vbox.pack_start(deflection_check, false, true, 0)
		vbox.pack_start(swords_check, false, true, 0)
		vbox.pack_start(shields_check, false, true, 0)
		vbox.pack_start(dissipation_check, false, true, 0)
		vbox.pack_start(saveButton)												#Puts the Save & Close button at the bottom of the list

		window.add(vbox)
		saveButton.signal_connect('clicked') {											#Tells the program what to do with the CheckButton data once Save & Close is clicked
			Gtk.queue {
																	#### CHANGED: only one loop is required now to change the settings
																	#### Remember from earlier that settings = CharSettings
				gtk_checks.each_pair {
					|number,check| settings[number] = check.active?
				}

				window_action = :save											#Saves all of the above to your settings
			}
		}

		window.signal_connect('delete_event') {window_action = :cancel}								#Deals with you hitting the X to close the window, no changes to settings made (I think)
		window.show_all																#Displays the GUI
		window.resizable = false														#Disables the Maximize button and Resize options
	}

	before_dying { Gtk.queue { window.destroy } }
	wait_while { window_action.nil? }
	undo_before_dying
	Gtk.queue { window.destroy }

																	#### CHANGED: no longer need the setting saving that was here because it was done above in signal_connect
	Script.self.kill														#Very important part.  This allows you to change the settings, but does not execute the Loop
end																	# when you hit Save & Close.

loop{																	#Begins sign upkeep during running of the script when you just type ;iSigns
	exit if checkdead

	if Spell[9012].active?
		echo "The Grand Poohbah is still mad at you."
		exit
	end
																	#### CHANGED: completely removed everything below by being able to use
																	#### a loop instead
	settings.each_pair { |num,active|
		if active and Spell[num].known? and Spell[num].affordable? and not Spell[num].active?
			Spell[num].cast
			if reget 10, "The power from your sign dissipates into the air."
 		        	room = Room.current.id
	                	until room != Room.current.id
        	        		echo "*** You are in an ANTI-MAGIC zone ***"
                			echo "*** #{script.name} will restart in 10 seconds ***"
                        		echo "*** and only if you leave this room ***"
                        		sleep 10
				end
			end

																	#### CHANGED: Should probably wait for castrt? and rt? too
			waitrt?
			waitcastrt?
		end
	}

	sleep 1																#Runs through the list and checks status of signs once per second.  Might be a bit overkill to do that often.
}
