=begin
  A script to play the Ebon Gate Herb Hunt mini-game.

  For setup instructions, please see ;herbhunt help

        author: elanthia-online
  contributors: Tysong, Alastir
          game: gemstone
          tags: herb hunt, ebon gate, ebongate, games
       version: 1.2.0

  Version Control:
    Major_change.feature_addition.bugfix
  v1.2.0 (2023-10-03)
    - fix to continue foraging when no toadshade found
  v1.1.1 (2023-10-03)
    - fix to pause if found unknown result incase of something important found
  v1.1.0 (2023-10-02)
    - add option to rest till percent experience setting, see help for info!
  v1.0.0 (2023-10-02)
    - initial release
    - fork of mandrake.lic by Alastir with a few minor updates and code cleanup
=end

module HerbHunt
  UserVars.herbhunt ||= {}
  UserVars.herbhunt[:pause]      = true  if UserVars.herbhunt[:pause].nil?
  UserVars.herbhunt[:first_run]  = true  if UserVars.herbhunt[:first_run].nil?
  UserVars.herbhunt[:experience] = false if UserVars.herbhunt[:experience].nil?

  def self.pause
    respond("########################################")
    respond("#         Pausing herbhunt             #")
    respond("# Please ;unpause herbhunt to continue #")
    respond("########################################")
    pause_script
  end

  def self.help
    if UserVars.herbhunt[:first_run]
      respond("This is your first time running ;herbhunt.lic")
      respond("Please verify the settings below.")
      respond("")
    end
    respond("The script can be paused between runs by changing the UserVars.herbhunt[:pause] setting.")
    _respond("UserVars.herbhunt[:pause] is currently set to " + Lich::Messaging.monsterbold("#{UserVars.herbhunt[:pause]}"))
    respond("You can change this by typing the following:")
    respond("  ;e UserVars.herbhunt[:pause] = #{!UserVars.herbhunt[:pause]}")
    respond("")
    respond("Whether to pause after each arena run to wait for experience to fall below set percent.")
    _respond("Set to FALSE to disable. Currently set to " + Lich::Messaging.monsterbold("#{UserVars.herbhunt[:experience]}"))
    respond("Example: Set to 100 to hunt once no longer at saturated. (at must rest)")
    respond("Example: Set to  90 to hunt once no longer at must rest. (at numbed)")
    respond("  ;e echo UserVars.herbhunt[:experience] = 90")
    respond("")
    respond("Various Container Settings Used Below.")
    _respond("We use UserVars.questsack to store your keys. Currently set to " + Lich::Messaging.monsterbold("\"#{UserVars.questsack}\""))
    respond("You can change this by typing the following:")
    respond("  ;e UserVars.questsack = \"brown bag\"")
    respond("")
    _respond("We use UserVars.lootsack to store your winnings. Currently set to " + Lich::Messaging.monsterbold("\"#{UserVars.lootsack}\""))
    respond("You can change this by typing the following:")
    respond("  ;e UserVars.lootsack = \"giant cloak\"")
    respond("")
    if UserVars.herbhunt[:first_run]
      HerbHunt.pause
      UserVars.herbhunt[:first_run] = false
    end
  end

  def self.loot
    waitrt?
    fput('open my herb sack')
    result = dothistimeout("look in ##{GameObj.right_hand.id}", 5, /In the herb sack|There is nothing in there\./)
    if result =~ /In the herb sack/
      GameObj.right_hand.contents.each { |item|
        Lich::Messaging.stream_window("Found #{item.name}")
        fput("get ##{item.id}")
        if item.name !~ /pumpkin-etched token|glowing orb|potent blue-green potion|Adventurer's Guild task waiver|sun-etched gold ring|locker runner contract|larger locker contract|urchin guide contract|flexing arm token|Elanthian Guilds voucher pack|blue feather-shaped charm|Adventurer's Guild voucher pack/
          echo("Unknown #{item.name} found, unsure what to do, placing in #{UserVars.lootsack}!")
          echo("Please report this to elanthia-online team!")
          HerbHunt.pause
        end
        fput("put ##{item.id} in my #{UserVars.lootsack}")
      }
      if GameObj.right_hand.contents.empty?
        fput('drop my herb sack')
      else
        echo("Something still left inside herb sack! Report the contents to elanthia-online!")
        fput('look in my herb sack')
        echo(GameObj.right_hand.contents)
        HerbHunt.pause
      end
    elsif result !~ /There is nothing in there\./
      echo("Didn't find a herb sack in right hand! Report this to elanthia-online!")
      echo(GameObj.right_hand.inspect)
      HerbHunt.pause
    end
  end

  def self.forage
    waitrt?
    result = dothistimeout("forage", 5, /see withered burgundy flowerheads scattered throughout the area\.|find no signs of toadshade in this area|find several withered toadshade leaves in this area|Having run out of time, you quickly search the area/)
    if result =~ /find no signs of toadshade in this area|see withered burgundy flowerheads scattered throughout the area\.|Having run out of time, you quickly search the area/
      waitrt?
      if Room.current.uid.include?(8086351)
        HerbHunt.loot
        return
      end
      walk
      HerbHunt.forage
    elsif result =~ /find several withered toadshade leaves in this area/
      HerbHunt.search
    end
  end

  def self.search
    waitrt?
    result = dothistimeout("search", 10, /You search the area for herbs\./)
    if result =~ /You search the area for herbs\./
      HerbHunt.loot
    end
  end

  def self.main
    HerbHunt.help if UserVars.herbhunt[:first_run]
    loop do
      if Room.current.location.to_s !~ /Naidem|Evermore Hollow/
        echo("This script only works within Naidem/Evermore Hollow, accessible during the Ebon Gate festival.")
        exit
      elsif !Room.current.uid.include?(8086350)
        Script.run('go2', 'u8086350')
      end
      result = dothistimeout("get my barrel key from my #{Vars.questsack}", 5, /You (?:remove|reach|discreetly remove)|Get what?/)
      if result =~ /You (?:remove|reach|discreetly remove)/
        move('go entry')
        fput("put my key in my #{Vars.questsack}")
        HerbHunt.forage
      elsif result =~ /Get what?/
        echo('Out of keys!')
        exit
      end

      HerbHunt.pause if UserVars.herbhunt[:pause]
      if UserVars.herbhunt[:experience]
        respond "Waiting until percentmind(#{(checkmind('saturated') ? 110 : percentmind)}) <= UserVars.herbhunt[:experience](#{UserVars.herbhunt[:experience]})."
        sleep(1) until ((checkmind('saturated') ? 110 : percentmind) <= UserVars.herbhunt[:experience])
      end
    end
  end
end

if Script.current.vars[0] =~ /help/i
  HerbHunt.help
else
  HerbHunt.main
end
