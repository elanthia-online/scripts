

=begin
    An adventure's guild script to assist in various tasks assigned.
    Currently does not support grouping or gem hoarding.
    Currently relies on the following scripts for full utilization:
      - bigshot, echild, ego2, eherbs, eloot
        author: elanthia-online
  contributers: Deysh, Nisugi, Tysong, Rinualdo
          game: Gemstone
          tags: bounty, adventure's guild, advguild, bounties
       version: 1.1.1
           
  Improvements:
  v1.1.1 (2023-02-01)
    - bug fix for foraging spells (waitcastrt? for assume yierka)
    - rearranged post-hunt sequence to mimic bigshot functionality. 
    -fixed forage/heirloom search using empty_hands 
=end
=begin
  v1.1.0 (2023-01-27)
    - added pre and post hunt commands and scripts for foraging, heirloom search, and escorts
    - added bad room entries for bandits that will accept UID's
    - added spell support for heirloom search bounties
    - added 1035 to foraging and heirloom searching
    - think I finally squashed the repeating Song of Peace bug
  v1.0.32 (2023-01-26)
    - bugfix for heirloom searching
  v1.0.31 (2023-01-24)
    - reordered casting of song of peace during foraging and stopping it when done.
    - added a double check for heirloom searching
  v1.0.30 (2023-01-23)
    - fix bad Widowmaker Rd room#
  v1.0.29 (2023-01-23)
    - fix bugfix in variable list from v1.0.29
  v1.0.28 (2023-01-23)
    - added herbalist to Mist Harbor
  v1.0.27 (2023-01-22)
    - refreshed spell active before casting foraging helper spells
    - add check for silver deposit after bounty turn-in
    - fixed bug in bundled skin eval
  v1.0.26 (2023-01-21)
    - fixed bug in herb turnin when caught in RT
    - fixed prep-hunt command to run scripts consistent with bigshot functionality
  v1.0.25 (2023-01-19)
    - Fix badlist rooms and add bad logging road rooms
  v1.0.24 (2023-01-19)
    - Correct another typo in herb finding method
  v1.0.23 (2023-01-16)
    - Correct typo in herb finding method
  v1.0.22 (2023-01-12)
    - Change EBounty.data.location_start to use nearest instead of first in list
  v1.0.21 (2023-01-02)
    - typo in bug fix 
  v1.0.20 (2023-01-02)
    -bug fix moves minor sanct outside foraging loop to stop it spamming
  v1.0.19 (2023-01-01)
    -bug fix to stop voucher use when bounty boost is active
  v1.0.18 (2023-01-01)
    - added bounty boost to available options
    - added foraging enhancements - see foraging tab on ui
    - changed the herb searching routine to  try and eliminate false positives/negatives
    - updated infomon and spell-list version requirements to support 650 tracking
    - added CLI herb foraging independent of bounty - ;ebounty forage "<type of herb>" <number to find>
  v1.0.17 (2022-12-27)
    - ensuring following scripts are stopped before starting ebounty: go2, echild, ego2, bigshot
  v1.0.16 (2022-12-22)
    - typo fix for the bugfix for herbalist rooms using UID's
  v1.0.15 (2022-12-22)
    - bugfix for herbalist rooms using UID's
  v1.0.14 (2022-12-20)
    - updated herbalist rooms to use UID's for instance compatibility
  v1.0.13 (2022-12-19)
    - add regex for opening an item
  v1.0.12 (2022-12-15)
    - made resting room a required parameter
    - consolidated odd herb names
  v1.0.11 (2022-12-12)
    - foraging name match fix
  v1.0.10 (2022-12-11)
    - fixed foraging herb matching bug
  v1.0.9 (2022-12-09)
    - bug fix for checkbounty not populating quickly
  v1.0.8 (2022-12-06)
    - moved post hunt routine to after forage turn-in to avoid trashing foraged item 
    - bug fix for foraging in the red forest
  v1.0.7 (2022-12-05)
    - bug fix for hunting sequence resting
  v1.0.6 (2022-12-5)
    - fixed bug in rescue bounty sequencing.
  v1.0.5 (2022-12-3)
    - bugfix for bounty_eval
    - various foraging name corrections
    - pre/post hunting bigshot routines (from default profile) added to escort bounties
  v1.0.4 (2022-11-30)
    - bug fix on container opening
    - adjusted hunting sequence due to bigshot bounty_eval changing
    - set bounty_eval to empty string on exit
    - updated required versions to Lich 5.6.2, Bigshot 4.13.12, and Infomon 1.18.16
    - regex fix for completed task
  v1.0.3 (2022-11-28)
    - changed container method to use "inventory container" instead of GameObj.inv
  v1.0.2 (2022-11-27)
    - Fix to targeting not using bigshot routines
  v1.0.1 (2022-11-26)
    - hedgehog sack messaging
    - fixed herb names
    - support for Bigshot fogging options
    - child bounty fail bug
    - Fix for grizzled targeting when user only kills bounty creatures
  v1.0.0 (2022-05-18)
    - initial framework and ui
=end

require 'yaml' 

module EBounty

  EBounty_version = '1.1.0'
  @@data ||= nil
 
   ##### Data & Setup Start #####
  
  def self.version_check
    needs_exit = false  
    fn = "#{DATA_DIR}/spell-list.xml"
    time = File.mtime(fn) if File.exist?(fn)
 
    if time < Time.parse("2022-12-28")
      needs_exit = true
      if $frontend == 'stormfront' || $frontend == 'profanity'
        _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
        _respond "\<preset id=\"thought\"\>" + " Your spell-list.xml needs to be updated for ebounty to work" + "\<\/preset\>"
        _respond "\<preset id=\"thought\"\>" + " ;jinx data update spell-list.xml --repo=elanthia-online --force" + "\<\/preset\>"
        _respond "\<preset id=\"thought\"\>" + " ;e Spell.load" + "\<\/preset\>"
        _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
      else
        _respond "##" + "########################################"
        _respond ">" + " Your spell-list.xml needs to be updated for ebounty to work"
        _respond ">" + " ;jinx data update spell-list.xml --repo=elanthia-online --force"
        _respond ">" + " ;e Spell.load"
        _respond "##" + "########################################"
      end
    end
  
    scripts = {
      "bigshot" => '4.13.13',
      "infomon" => '1.18.18',
      "lich"    => '5.6.2'
    }
     
    versions = {}
    scripts.keys.each{ |item|
      
      file_name = nil
      file_data = nil
      comments = nil
      
      if File.exist?("#{File.join(SCRIPT_DIR, "custom")}/#{item}.lic")
        file_name = "#{File.join(SCRIPT_DIR, "custom")}/#{item}.lic"     
      elsif File.exist?("#{SCRIPT_DIR}/#{item}.lic")
        file_name = "#{SCRIPT_DIR}/#{item}.lic"
      end
      
      if item == "lich"
        versions[item] = LICH_VERSION
      elsif file_name.nil?     
        versions[item] = "No file found"
      else      
        file_data = open(file_name, 'r').read
        
        if file_data =~ /^=begin\r?\n?(.+?)^=end/m
            comments = $1.split("\n")
        else
            comments = []
            file_data.split("\n").each {|line|
                if line =~ /^[\t\s]*#/
                    comments.push(line)
                elsif line !~ /^[\t\s]*$/
                    break
                end
            }
        end
        for line in comments
            if line =~ /^[\s\t#]*version:[\s\t]*([\w,\s\.\d]+)/i
                versions[item] = $1.sub(/\s\(.*?\)/, '').strip
            end
        end
      end 
      
      if versions[item] == "No file found"
        if $frontend == 'stormfront' || $frontend == 'profanity'
          _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
          _respond "\<preset id=\"thought\"\>" + " Required Script: #{item} was not found!" + "\<\/preset\>"
          _respond "\<preset id=\"thought\"\>" + " Please download the latest version." + "\<\/preset\>"
          if item == "bigshot"
            _respond "\<preset id=\"thought\"\>" + " ;repository download bigshot" + "\<\/preset\>"
          elsif item == "infomon"
            _respond "\<preset id=\"thought\"\>" + " ;jinx script update infomon --repo=elanthia-online" + "\<\/preset\>"
          elsif item == "lich"
            _respond "\<preset id=\"thought\"\>" + " ;lich5-update --update" + "\<\/preset\>"
          end  
          _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
        else
          _respond "##" + "########################################"
          _respond ">" + " Required Script: #{item} was not found!"
          _respond ">" + " Please download the latest version."
          if item == "bigshot"
            _respond ">" + " ;repository download bigshot"
          elsif item == "infomon"
            _respond ">" + " ;jinx script update infomon --repo=elanthia-online"
          elsif item == "lich"
            _respond ">" + " ;lich5-update --update"
          end 
          _respond "##" + "########################################"
        end
        exit
      elsif Gem::Version.new(versions[item]) < Gem::Version.new(scripts[item])
        needs_exit = true
        if $frontend == 'stormfront' || $frontend == 'profanity'
          _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
          _respond "\<preset id=\"thought\"\>" + " Required Script: #{item} needs version #{scripts[item]} to run." + "\<\/preset\>"
          _respond ""
          _respond "\<preset id=\"thought\"\>" + " Currently Running Version: #{versions[item]}" + "\<\/preset\>"
          _respond "\<preset id=\"thought\"\>" + " Please update to the latest version." + "\<\/preset\>"
          if item == "bigshot"
            _respond "\<preset id=\"thought\"\>" + " ;repository download bigshot" + "\<\/preset\>"
          elsif item == "infomon"
            _respond "\<preset id=\"thought\"\>" + " ;jinx script update infomon --repo=elanthia-online --force" + "\<\/preset\>"
            _respond "\<preset id=\"thought\"\>" + " then kill infomon and restart it" + "\<\/preset\>"
          elsif item == "lich"
            _respond "\<preset id=\"thought\"\>" + " ;lich5-update --update" + "\<\/preset\>"
          end 
          _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
        else
          _respond "##" + "########################################"
          _respond ">" + " Required Script: #{item} needs version #{scripts[item]} to run."
          _respond ">" + ""
          _respond ">" + " Currently Running Version: #{versions[item]}"
          _respond ">" + " Please update to the latest version."
          if item == "bigshot"
            _respond ">" + " ;repository download bigshot"
          elsif item == "infomon"
            _respond ">" + " ;jinx script update infomon --repo=elanthia-online --force"
            _respond ">" + " then kill infomon and restart it"           
          elsif item == "lich"
            _respond ">" + " ;lich5-update --update"
          end 
          _respond "##" + "########################################"
        end
      end  
    }
    
    exit if needs_exit
  
  end
  
  def self.load_defaults()
    
    default_hash = {
      :bounty_types=>["boss_culling", "culling", "gem_collecting", "heirloom_loot", "skinning"],
      :selling_script=>"",
      :default_profile=>"",
      
    }
    Dir.mkdir("#{$data_dir}#{XMLData.game}") unless File.exist?("#{$data_dir}#{XMLData.game}")
    Dir.mkdir("#{$data_dir}#{XMLData.game}/#{Char.name}") unless File.exist?("#{$data_dir}#{XMLData.game}/#{Char.name}")
    Dir.mkdir("#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles") unless File.exist?("#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles")

    File.write("#{$data_dir}#{XMLData.game}/#{Char.name}/ebounty.yaml", default_hash.to_yaml)
   
    default_hash
  end

  def self.load_profile(name: Char.name)
    if name != nil
      filename = "#{$data_dir}#{XMLData.game}/#{name}/ebounty.yaml"
      if File.exist?("#{filename}") && name == Char.name
        settings_hash = YAML.load_file(filename)      
      elsif !File.exist?("#{filename}") && name != Char.name
        EBounty.msg("error", " EBounty.load_profile: Attempt to load a profile that does not exist.")
      elsif !File.exist?("#{filename}") && name == Char.name
        EBounty.msg("info", " No current settings found.  Loading defaults for configurtion.")
        EBounty.msg("info", " Suggest you configure to your needs with ;ebounty setup")
        settings_hash = EBounty.load_defaults()
      else
        EBounty.msg("error", " EBounty.load_profile: There was an unknown error with loading a profile")
      end
    else
      EBounty.msg("error", " EBounty.load_profile: name not defined")
    end
 
    settings_hash
    
  end

  def self.save_profile(name: Char.name)
    
    #This adds it to the profile for backward compatability
    if name != nil
      filename = "#{$data_dir}#{XMLData.game}/#{Char.name}/ebounty.yaml"
      if name == Char.name
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings saved to file: #{filename}.")
      elsif File.exist?("#{filename}") && name != Char.name
        EBounty.msg("info", " You are attempt to overwrite another profile!")
        EBounty.msg("info", " If you wish to overwrite, please ;unpause ebounty.")
        EBounty.msg("info", " Else ;kill ebounty and choose another filename.")
        pause_script
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings saved to file: #{filename}.")        
      elsif !File.exist?("#{filename}") && name != Char.name
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings are being saved to another profile!")
        EBounty.msg("info", " Settings saved to file: #{filename}.")
      else
        EBounty.msg("error", " EBounty.save_profile: There was an unknown error with saving a profile")
      end
    end
       
  end

  def self.load(settings)
    @@data = Data.new(settings)
  end

  def self.update_setting(input)
  
    setting_to_update = normalize_setting_name(input.first)
    EBounty.msg("debug", "Normalized #{input.first} as #{setting_to_update}")

    if EBounty.data.settings.keys.include?(setting_to_update)
      default_value = EBounty.data.settings[setting_to_update].dup
      EBounty.msg("debug", "recognized #{setting_to_update} as as valid #{default_value.class} setting")
      new_value = coerce_setting_value(setting_to_update, default_value, input[1..-1])
      EBounty.msg("debug", "Normalized #{input[1..-1]} as #{new_value.inspect}")

      data.settings[setting_to_update] = new_value
      EBounty.msg("info", " Updated #{setting_to_update} to #{new_value}")
      EBounty.save_profile()
    else
      EBounty.msg("error", " #{setting_to_update} is not a recognized setting. Recognized setting names:")
      EBounty.msg("error", EBounty.data.settings.keys.sort.join("\n"))
    end
  end

  def self.coerce_setting_value(setting_name, default, input)
    case default
    when TrueClass, FalseClass
      fix_option = { 'on' => true, 'true' => true, 'yes' => true, 'off' => false, 'false' => false, 'no' => false }
      fix_option.fetch(input[0]) do |v|
        EBounty.msg("error", %{Expected a boolean (true/false/yes/no) value for "#{setting_name} but got "#{v}"})
        exit
      end
    when Array
      input
    when Integer
      v = input[0]
      if v =~ /\A[+-]?\d+\z/
        v.to_i
      else
        EBounty.msg("error", %{Expected an integer value for #{setting_name} value but got "#{v}"})
        exit
      end
    when String
      input.join(" ")
    else
      EBounty.msg("error", "Recognized #{setting_name} but don't know how to normalize a #{default.class} type setting")
      exit
    end
  end

  def self.deadmans_switch
    #Kill script if dead
    Thread.new { loop { Script.self.kill if dead?; sleep(5); }} 
  end

  def self.data
    @@data
  end

  def self.duration(elapsed)  
    rest, secs = elapsed.divmod( 60 ) 
    rest, mins = rest.divmod( 60 )
    days, hours = rest.divmod( 24 )

    result = []
    result << "#{days} Days" if days > 0
    result << "#{hours} Hours" if hours > 0
    result << "#{mins} Minutes" if mins > 0
    result << "#{secs.round(0)} Seconds" if secs > 0
    return " #{result.join(' ')}"  
  end
  
  def self.elapsed      
    elapsed = Time.now - EBounty.data.elapsed_time 
    duration(elapsed)
  end

  def self.fix_name(foragename)
  
    if foragename =~ /\w+ of (.*?)$/ then foragename = $1
      elsif foragename.include?('iceblossom') then foragename = 'iceblossom'
      elsif foragename.include?('stick') then foragename = 'stick'
      elsif foragename.include?('mold') then foragename = 'mold'
      elsif foragename == 'twisted black mawflower' then foragename = 'mawflower'
      elsif foragename == 'small green olive' then foragename = 'green olive'
      elsif foragename == 'oozing fleshsore bulb' then foragename = 'fleshsore bulb'
      elsif foragename == 'rotting bile green fleshbulb' then foragename = 'fleshbulb'
      elsif foragename == 'discolored fleshbinder bud' then foragename = 'fleshbinder bud'
      elsif foragename == 'slime-covered grave blossom' then foragename = 'grave blossom'
      elsif foragename == 'fragrant white lily' then foragename = 'white lily'
      elsif foragename == 'trollfear mushroom' then foragename = 'mushroom'
      elsif foragename == 'vermilion fire lily' then foragename = 'fire lily'
      elsif foragename == 'orange tiger lily' then foragename = 'tiger lily'
      elsif foragename == 'golden flaeshorn berry' then foragename = 'flaeshorn berry'
      elsif foragename == 'white alligator lily' then foragename = 'alligator lily'
      elsif foragename == 'dark pink rain lily' then foragename = 'pink rain lily'
      elsif foragename == 'white spider lily' then foragename = 'spider lily'
      elsif foragename == 'large black toadstool' then foragename = 'black toadstool'
      elsif foragename == 'glowing green lichen' then foragename = 'green lichen'
      elsif foragename == 'luminescent green fungus' then foragename = 'green fungus'
      elsif foragename == 'black-tipped wyrm thorn' then foragename = 'wyrm thorn'
      elsif foragename == 'fetid black slime' then foragename = 'black slime'
      elsif foragename == 'gnarled pandanus twig' then foragename = 'pandanus twig'
      elsif foragename == 'giant glowing toadstool' then foragename = 'glowing toadstool'
      elsif foragename == 'waxy banana leaf' then foragename = 'banana leaf'
      elsif foragename == 'heart-shaped red lychee' then foragename = 'red lychee'
    end
     
    return foragename
  
  end

  def self.fog
  
    if (UserVars.op['fog_return'].to_i != 0 && UserVars.op['fog_optional'] == false) || (UserVars.op['fog_return'].to_i != 0 && UserVars.op['fog_optional'] == true && $rest_reason =~ /wounded|encumbered/)
      sleep(0.5)
      waitcastrt?
      waitrt?
      if UserVars.op['fog_return'].to_i == 1
        if (Spell[130].known? && !Spell[130].affordable?)
          fput "mana pulse"
          sleep(0.2)
        end
        if (Spell[130].known? && Spell[130].affordable?)
          Spell[130].cast()
        elsif Spell[9825].known?
          sleep(0.5)
          waitcastrt?
          waitrt?
          fput "symbol of return"
        end
      elsif UserVars.op['fog_return'].to_i == 2
        if Spell[9825].known?
          temproom = Room.current.id
          sleep(0.5)
          waitcastrt?
          waitrt?
          fput "symbol of return"
          sleep(0.5)
          if (Room.current.id == temproom && Spell[130].known?)
            waitrt?
            waitcastrt?
            fput "mana pulse" if !Spell[130].affordable?
            sleep( 0.2)
            Spell[130].cast() if Spell[130].affordable?
          end
        end
      elsif UserVars.op['fog_return'].to_i == 3
        if Spell[1020].known? && Spell[1020].affordable?
          Spell[1020].cast()
        end
      elsif UserVars.op['fog_return'].to_i == 4
        if Spell[9720].known? && Spell[9720].affordable?
          Spell[9720].cast()
          sleep(0.5)
          waitcastrt?
          waitrt?
        end
      elsif UserVars.op['fog_return'].to_i == 5
        if (Spell[930].known? && !Spell[930].affordable?)
          fput "mana pulse"
          sleep(0.2)
        end
        if (Spell[930].known? && Spell[930].affordable?)
          Spell[930].cast()
          fput "go portal"
          sleep(0.5)
          waitcastrt?
          waitrt?
        end
      end
    end
  
  end

  def self.issue_command(command, start_pattern, loud = true, end_pattern = /<prompt/, include_end = false, timeout=5)
    result = []
    name = "Sell:: -#{Time.now.tv_sec}.#{Time.now.tv_usec}-#{Random.rand(10000)}"
    filter = false
    save_want_downstream = Script.current.want_downstream
    save_want_downstream_xml = Script.current.want_downstream_xml
    Script.current.want_downstream = false
    Script.current.want_downstream_xml = true

    begin
      Timeout::timeout(timeout, Interrupt) {
        DownstreamHook.add(name, proc { |xml|
          is_loud = loud ? xml : nil
          if filter
            if xml =~ end_pattern
              DownstreamHook.remove(name)
              filter = false
            else
              next(is_loud)
            end
          elsif xml =~ start_pattern
            filter = true
            next(is_loud)
          else
            #echo "xml: #{xml}"
            #xml
            next(is_loud)
          end
        })
        if loud
          fput command
        else
          $_SERVER_.puts command
        end
        until (xml = get) =~ start_pattern; end
        result << xml.rstrip
        until (xml = get) =~ end_pattern
          result << xml.rstrip
        end
        if include_end
          result << xml.rstrip
        end
      }
    rescue Interrupt
      nil
    ensure
      DownstreamHook.remove(name)
      Script.current.want_downstream_xml = save_want_downstream_xml
      Script.current.want_downstream = save_want_downstream
    end
   #  echo result  
    return result
  end
    
  def self.get_command(command, regex)

    lines = []  
    regex = Regexp.union(regex,/(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./) 
    
    loop {
      lines = EBounty.issue_command(command, regex)	
      #Fixme: debugg setting
      #Utility.msg("debug", " get_lines: command: #{command} | lines - #{lines}")
      if lines.any? { |l| l =~ /(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./i }
        waitrt?
        next
      else
        break
      end
    }
  
    return lines
  
  end
    
  def self.get_lines(command, regex)
  
    lines = []  
    regex = Regexp.union(regex,/(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./) 
    
    loop {
      lines = Lich::Util.quiet_command_xml(command, regex)
      EBounty.msg("debug", " get_lines: command: #{command} | lines - #{lines}")
      if lines.any? { |l| l =~ /(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./i }
        waitrt?
        next
      else
        break
      end
    }
  
    return lines
  
  end
  
  def self.get_res(command, regex)
  
      regex = Regexp.union(regex,/(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./)
      result = nil
      loop {
        result = dothistimeout(command, 3, regex)
        if result =~ /(?:Roundtime:|\.\.\.wait) (\d+) [Ss]ec(?:onds)?\./i 
          waitrt?
          next
        else
          break
        end
      }
    
      return result
    
    end

  def self.open_container(container)
 
    return if GameObj.containers.keys.include?(container.id) && container.contents.is_a?(Array)

    #Still here? Assume the container is closed and open it
    lines = EBounty.get_lines("open ##{container.id}", /You|<exposeContainer|The shard is open already|You must remove|You can't do that|That is already open|<container|There doesn't seem to be any way to do that.|You open|An <a exist=".*?" noun=".*?">.*?<\/a>.*?is already open.|You press your hand against your|You wave a hand across/i)
    return if lines.any?{ |l| l =~ /There doesn't seem to be any way to do that|That is already open|is open already|You can't do that|You must remove|You wave a hand across/}

    #check out whats inside
    lines = EBounty.get_lines("look in ##{container.id}", /<exposeContainer|<dialogData|<container|you glance|There is nothing|This <a exist=".*?" noun=".*?">.*?<\/a>.*?inside./i)
  
    return if lines.any? { |l| l =~ /This <a exist=".*?" noun=".*?">.*?<\/a>.*?inside.|In the <a exist=/ }
    EBounty.msg("debug", " look in open_container: lines - #{lines}")
    20.times{
      break if GameObj.containers.keys.include?(container.id) && container.contents.is_a?(Array)
      sleep 0.1
    } 

    #If we open it, lets close it before script dies
    EBounty.data.close_containers.push(container) unless EBounty.data.close_containers.include?(container)
   
  end

  def self.set_variables
   
    EBounty.data.elapsed_time = Time.now
   
    unless EBounty.data.settings[:basic]
      #Check if a default profile was selected
      if EBounty.data.settings[:default_profile].to_s.empty? 
        EBounty.msg "error", 'Please select a Gem/Default profile in "Profiles" tab. Ebounty needs this to work right.'
        exit
      end
             
      #Load the default profile
      profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
      UserVars.op = YAML.load_file(profile)
    end
  
    if EBounty.data.settings[:resting_room].to_s.empty?
      EBounty.msg "error", 'Please select a Resting Room ID on the General tab. Ebounty needs this to work right.'
      exit
    end
  
    #Lets find the containers we need
    container_match = /<a exist="([^"]+)" noun="[^"]+">[^(.]+\(([a-z]+)\)/
    container_lines = Lich::Util.quiet_command_xml("stow list",/<output class="mono"\/>/)  

    container_lines.each {|line|   
      if line =~ container_match 
        EBounty.data.sacks.store(Regexp.last_match(2), GameObj.inv.find { |i| i.id == Regexp.last_match(1) })
        EBounty.data.sacks.delete(Regexp.last_match(2)) unless EBounty.data.sacks[Regexp.last_match(2)]    
      end
    }
    
    EBounty.data.containers = []
    exist =  %r{<a exist=(?:'|")(?<id>.*?)(?:'|") noun=(?:'|")(?<noun>.*?)(?:'|")>(?<name>.*?)</a>}
    lines = Lich::Util.quiet_command_xml("inventory containers",/You are (wearing|holding)/)
    lines.delete_if { |l| l =~ /You are holding/}
    lines.each do |line| 
      line.scan(exist).each do |matches| 
        EBounty.data.containers << GameObj.new(*matches) unless EBounty.data.containers.any?{ |sack| sack.id == GameObj.new(*matches).id}    
      end  
    end
   
    EBounty.data.containers.each{ |item|
      EBounty.open_container(item)
    }
       
  end

  def self.bounty_check
    Task.bounty_check
  end
 
  def self.run_scripts(scripts)
    scripts.split(/,\s*/).each do |i|
      tokens = i.split(/\s+/)
      if (tokens.size > 1)
        start_script tokens[0], tokens[1..-1]   
        wait_until { !running? tokens[0] }
      else
        start_script tokens[0]   
        wait_until { !running? tokens[0] }
      end
    end
  end

  def self.msg(type = info, text)
     
    #color options - set type to use
    #yellow, orange, teal, green, plain
       
    return if type == "debug" && !EBounty.data.settings[:debug]
       
    if text.class == Hash
      text = text.inspect.gsub("#<", "#")
    elsif text.class == Array
      text = text.to_s
    elsif text.class == String
      text = text.gsub("#<", "#")
    end
    
    type = type == "debug" ? "speech" : type
    
    Lich::Messaging.msg(type, text)
  
  end

  def self.switch_profile(critter = nil, location = nil)
    
    if (EBounty.data.settings[:creature_exclude].length.positive? && critter.downcase =~ Regexp.union(EBounty.data.settings[:creature_exclude]))
      echo "#{critter} is in the excluded list. Turning in bounty!"
      sleep 2
      Task.bounty_remove
      return
    end  
 
    exit if EBounty.data.settings[:basic] 
 
    EBounty.data.creature = critter
    profile_letter = nil
  
    options = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"]
 
    #Check for full name first
    options.each{ |letter| profile_letter = letter if EBounty.data.settings["names_#{letter}".to_sym] =~ /#{critter}/i}
 
    if profile_letter != nil
      EBounty.data.settings[:only_required_creatures] = EBounty.data.settings["kill_#{profile_letter}".to_sym] ? true : false
      dir = EBounty.data.dir
      profile = "#{dir}/#{EBounty.data.settings["profile_#{profile_letter}".to_sym] + ".yaml"}"     
      UserVars.op = YAML.load_file(profile)
      return
    elsif critter == "bandits" && !EBounty.data.settings[:bandits_profile].to_s.empty? 
      EBounty.data.settings[:only_required_creatures] = EBounty.data.settings[:kill_bandits] ? true : false
      dir = EBounty.data.dir
      profile = "#{dir}/#{EBounty.data.settings[:bandits_profile] + ".yaml"}"         
      UserVars.op = YAML.load_file(profile)
      return    
    else
      EBounty.go2(EBounty.data.settings[:resting_room])
      EBounty.msg "info", " No Profile found for #{critter}. Please check the Profiles tab. Exiting..."      
      exit
    end

  end
  
  def self.test
       
    echo " Ebounty Version: #{EBounty_version}"
    echo ""
    echo "--------------- Settings ---------------"
    echo *EBounty.data.settings
    echo "----------------------------------------"
    echo ""
   
  end
  
  def self.go2(place)
    fput('unhide') if (hidden? || invisible?)

    return if Room.current.id == place.to_i || Room.current.tags.include?(place)

    if Room.current.id.nil?
      if EBounty.data.settings[:debug]
        EBounty.msg "info", "unknown room location: hope you know what you're doing"
      else
        EBounty.msg "error", 'unknown room location'
      end
    end
    Script.run('go2', "#{place} --disable-confirm", { quiet: true })
  end
  
  def self.go2_rest
  
    if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"
      town_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("town")
    else
      town_id = Room.current.find_nearest_by_tag("town")
    end
       
    resting_spots = { 
      228 => [1259,14627,8859,1263,228,318,288,477], #town center => noded rooms
      3668 => [3668,28742,18258,17589,17587],
      1005 => [1005],     
    }
  
    if EBounty.data.settings[:rest_random]
      return if resting_spots[town_id].include?(Room.current.id)
      if resting_spots[town_id]
        EBounty.go2(resting_spots[town_id].sample)
      else
        EBounty.go2("town")
      end
    elsif !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"
      EBounty.go2(EBounty.data.settings[:resting_room])
    elsif XMLData.game == "GSF"
      EBounty.go2(20239)
    else     
      EBounty.go2("town")
    end
      
    EBounty.wait_rt
    
    if checkpcs.include?('Nexushealbot')
      fput "join Nexushealbot"
      fput "action just nudged you"
      sleep 15
    end
     
  end
  
  def self.silver_check  
    return Lich::Util.silver_count
  end
  
  def self.silver_deposit
  
    return unless EBounty.silver_check.positive? 
    
    EBounty.go2('bank') 
    fput('deposit all')  
    
  end
  
  def self.uid_match(room)
    uid_pattern = /u(?<uid>\d+)/
    if m = uid_pattern.match(room)
      uid = m[:uid].to_i
      lookup_id = Map.ids_from_uid(uid)
      if lookup_id.size > 0
         room = lookup_id[0]        
      else
        echo "Not able to find #{room} in the map database! Exiting..."
        exit
      end
    end
    return room.to_i
  
  end
  
  def self.wait_rt 
    sleep 0.2
    wait_while { checkrt > 0 }
    sleep 0.2 
  end
  
  ##### Data & Setup End #####

  # Global data used by EBounty
  class Data
    attr_accessor  :settings, :reason, :rest_time, :rest_options, :hunting_spots, :wait, :herbalist_rooms, :remaining_skins, :skin, :remaining_gems, :gem, :dir,
                   :creature, :sacks, :start_room, :location_start, :location_boundaries, :guard_regex, :forage_result, :forage_injury, :elapsed_time, :bundle_skin,
                   :close_containers, :containers, :gambits_available, :get_regex, :put_regex, :bad_rooms

    def initialize(settings)
      
      @settings = settings
      @elapsed_time = Time.now
      @reason = ''
      @rest_time = Time.now
      @wait = true
      @sacks = {}
      @containers = []
      @rest_options  = ["experience", "inventory", "health", "resources", "info"]
      @get_regex = /^You (?:shield the opening of .*? from view as you |discreetly |carefully |deftly )?(?:remove|draw|grab|reach|slip|tuck|retrieve|already have|unsheathe|detach|swap)|^Get what\?$|^Why don't you leave some for others\?$|^You need a free hand|^You already have that/
      @put_regex = /^You (?:put|(?:discreetly )?tuck|attach|toss|attempt to shield your|place|.* place|slip|wipe off the blade and sheathe|absent-mindedly drop|carefully add|find an incomplete bundle|untie your drawstring pouch)|^The .+ is already a bundle|^Your bundle would be too large if you if you tried to add that|^The .+ is too large to be bundled\.|^As you place your .+ inside your .+, you notice another .+ inside the .+ and carefully arrange the two .+ into a neat bundle\.|If you wish to continue, throw the item away again within fifteen seconds|you feel pleased with yourself at having cleaned up the surrounding area|over your shoulder|two items in that location|wear three functional items|^Your .*? won't fit in .*?\.$/
        
      herbalist_rooms_uid = [
        'u4043601',    #Icemule Trace
        'u1015',       #Wehnimer's Landing
        'u3003056',    #Kharam-Dzu
        'u14103400',   #Ta'Vaalor
        'u13104200',   #Ta'Illistim
        'u4740011',    #Solhaven
        'u2101052',    #River's Rest
        'u13010004',   #Zul Logoth
        'u7118358',    #Kraken's Fall
        'u7503253',    #Hinterwilds
        'u3201291',    #Mist Harbor
      ]
           
      @herbalist_rooms = []
  
      herbalist_rooms_uid.each{ |room|
        @herbalist_rooms.push(Room[room].id) if Room[room].id.positive?
      }
          
      if @settings[:location1].empty? && @settings[:bad_room1].empty? 
        @settings[:location1] =  "Whistler's Pass"
        @settings[:bad_room1] = "37,38,39,40,41"
      end
    
      if @settings[:location2].empty? && @settings[:bad_room2].empty? 
        @settings[:location2] =  "Widowmaker's Road"
        @settings[:bad_room2] = "30609,30610,30611,30613,30614,30615,30616,30617,30618,30619,30811,30817,28918,28919,28920,28921,28922,28923,28929,28930,28931,28932,28978,29078,29079,29081,29089"
      end
      
      if @settings[:location3].empty? && @settings[:bad_room3].empty? 
        @settings[:location3] =  "Old Logging Road"
        @settings[:bad_room3] = "12532,12533,14729"
      end
          
      @bad_rooms = []
      x = 1
      while x < 13
        bad_room = "bad_room#{x}".to_sym
        unless @settings[bad_room].empty?
          @settings[bad_room].split(/,\s?/).each{ |room|
            @bad_rooms.push(EBounty.uid_match(room))
          }
        end
        x += 1
      end
           
      @remaining_skins = 0
      @skin = nil
      @remaining_gems = 0
      @gem = nil
      @dir = "#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles"
      @creature = nil
      @start_room = nil
      @location_start = nil
      @location_boundaries = nil
      @bundle_skin = nil
      @close_containers = []
      
      @gambits_available = false
      if @settings[:forage_options].include?("use_gambit") && Char.prof == "Rogue"
        lines = EBounty.get_lines("gld", /<output class="mono"\/>/)        
        if lines.any?{ |l| l =~ /[put {item} [IN|ON|UNDER|BEHIND] {container}]/}
          @gambits_available = true
        end
      end
           
      @guard_regex = Regexp.union(
        /suppress bandit activity|bandits you encounter/,
        /particularly dangerous|cull their numbers|(?!.*bandit)suppress .* activity/,
        /SEARCH the area|do a thorough SEARCH/,
        /LOOT the item from its corpse/,
        /I don't have any tasks for you right now/,
        /Ah, so you have returned/,
        /You have completed your task/
      )
 
      @forage_result = Regexp.union(
        /^You forage/,
        /^You make so much noise that only the dead would not notice you thrashing about in your unsuccessful search\.$/,
        /^You stumble about in a fruitless attempt at foraging\.$/,
        /you are unable to find anything useful/,
        /^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for(?: right now, though you are fairly certain this is where it can be found)?\./,
        /^You begin to forage around when your hand comes into contact with something that stabs you in the finger\.$/,
        /^As you forage around you suddenly feel a sharp pain/,
        /^You begin to forage around when suddenly you feel a burning sensation in your hand\.$/,
        /^You fumble about so badly in your search that you can only hope no one was watching you\.$/
      )
      
      @forage_injury = Regexp.union(
        /^You begin to forage around when your hand comes into contact with something that stabs you in the finger./,
        /^As you forage around you suddenly feel a sharp pain in your/,
        /suddenly you feel a burning sensation in your hand/
      )
      
      
    end
    
  end

  class Setup < Gtk::Builder
    
    @@categories = {
      general: {
        bounty_types: { default: [] },
        escort_types: { default: [] },
        forage_options: { default: [] },
        heirloom_options: { default: [] },
        creature_exclude: {
          default: [],
          load: proc do |store, setting|
            store.clear
            setting.each do |text|
              iter = store.append
              iter[0] = text
            end
          end,
          delete: proc do |_, selected, setting|
            setting.delete(selected.get_value(0))
            setting.uniq!.sort!
          end,
          set: proc do |_, text, setting|
            next if setting.include?(text)

            setting.push(text)
            setting.uniq!.sort!
          end
        },       
        culling_max:              { default: 30 },
        gem_max:                  { default: 30 },
        herb_max:                 { default: 30 },
        skin_max:                 { default: 30 },
        extra_skin:               { default:  0 },
        exp_pause:                { default: false },
        only_required_creatures:  { default: false },
        use_boosts:               { default: false },
        use_vouchers:             { default: false },
        once_and_done:            { default: false },
        rest_random:              { default: false },
        basic:                    { default: false },  
        resting_room:             { default: '' },
        selling_script:           { default: '' },
        healing_script:           { default: '' },
        
        #Foraging
        forage_prep_commands:     { default: '' },
        forage_prep_scripts:      { default: '' },
        forage_post_commands:     { default: '' },
        forage_post_scripts:      { default: '' },
        
        #Heirloom
        heirloom_prep_commands:   { default: '' },
        heirloom_prep_scripts:    { default: '' },
        heirloom_post_commands:   { default: '' },
        heirloom_post_scripts:    { default: '' },
        
        #Bandits - Location Labels
        location1:                { default: '' },
        location2:                { default: '' },
        location3:                { default: '' },
        location4:                { default: '' },
        location5:                { default: '' },
        location6:                { default: '' },
        location7:                { default: '' },
        location8:                { default: '' },
        location9:                { default: '' },
        location10:               { default: '' },
        location11:               { default: '' },
        location12:               { default: '' },
        
        #Bandits - Bad Rooms
        bad_room1:                { default: '' },
        bad_room2:                { default: '' },
        bad_room3:                { default: '' },
        bad_room4:                { default: '' },
        bad_room5:                { default: '' },
        bad_room6:                { default: '' },
        bad_room7:                { default: '' },
        bad_room8:                { default: '' },
        bad_room9:                { default: '' },
        bad_room10:               { default: '' },
        bad_room11:               { default: '' },
        bad_room12:               { default: '' },
        
        #Escort
        escort_prep_commands:   { default: '' },
        escort_prep_scripts:    { default: '' },
        escort_post_commands:   { default: '' },
        escort_post_scripts:    { default: '' },
        
        
        
        default_name:             { default: '' },
        default_profile:          { default: '' },
        profile_name_bandits:     { default: '' },
        bandits_profile:          { default: '' },
        kill_bandits:             { default: false },
        names_a:                  { default: '' },
        profile_a:                { default: '' },
        profile_name_a:           { default: '' },
        kill_a:                   { default: false },
        names_b:                  { default: '' },
        profile_b:                { default: '' },
        profile_name_b:           { default: '' },
        kill_b:                   { default: false },
        names_c:                  { default: '' },
        profile_c:                { default: '' },
        profile_name_c:           { default: '' },
        kill_c:                   { default: false },
        names_d:                  { default: '' },
        profile_d:                { default: '' },
        profile_name_d:           { default: '' },
        kill_d:                   { default: false },
        names_e:                  { default: '' },
        profile_e:                { default: '' },
        profile_name_e:           { default: '' },
        kill_e:                   { default: false },
        names_f:                  { default: '' },
        profile_f:                { default: '' },
        profile_name_f:           { default: '' },
        kill_f:                   { default: false },
        names_g:                  { default: '' },
        profile_g:                { default: '' },
        profile_name_g:           { default: '' },
        kill_g:                   { default: false },
        names_h:                  { default: '' },
        profile_h:                { default: '' },
        profile_name_h:           { default: '' },
        kill_h:                   { default: false },
        names_i:                  { default: '' },
        profile_i:                { default: '' },
        profile_name_i:           { default: '' },
        kill_i:                   { default: false },
        names_j:                  { default: '' },
        profile_j:                { default: '' },
        profile_name_j:           { default: '' },
        kill_j:                   { default: false },
      },       
      internal: {
        silence: { default: true },
        debug: { default: false },       
      }
    }

    def self.get_category(key)
      @@categories.each { |category, data| return category unless data[key].nil? }
      nil
    end

    def self.get_setting(key)
      cat = Setup.get_category(key)
      return nil if cat.nil?

      @@categories[cat].each { |setting, data| return data if setting == key }
      nil
    end

    def initialize(settings)
      super()

      @settings = settings

      # set default values if they don't exist
      @@categories.each do |_, data|  
      
        data.each { |key, value| @settings[key] = value[:default] if @settings[key].nil? }
      end

      # remove settings that doesn't exist
      @settings.delete_if { |key, _| next Setup.get_category(key).nil? }

      # use a GTK Builder to setup all the basics of the window then expand on that base
      return unless defined?(Gtk) && Gtk::Version::MAJOR == 3

      Gtk.queue do
      #  add_from_file("#{$data_dir}ebounty.ui")
        add_from_string(ui)
        load_settings

        self['main'].keep_above = true
        self['main'].set_title "EBounty Setup v#{EBounty_version}"

        # connect signals after settings are loaded to a bunch of handlers don't trigger
        connect_signals { |handler| method(handler) }
      end
    end

    def ui
      '<?xml version="1.0" encoding="UTF-8"?><!-- Generated with glade 3.38.2 --><interface><requires lib="gtk+" version="3.20"/><object class="GtkListStore" id="creature_exclude_store"><columns><!-- column-name exclusion --><column type="gchararray"/></columns></object><object class="GtkAdjustment" id="culling_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property>
      </object><object class="GtkAdjustment" id="extra_skin_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkAdjustment" id="gem_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkAdjustment" id="herb_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property>
      </object><object class="GtkAdjustment" id="skin_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkWindow" id="main"><property name="width-request">750</property><property name="height-request">725</property><property name="can-focus">False</property><property name="title" translatable="yes">EBounty Setup</property><property name="modal">True</property><signal name="destroy" handler="on_destroy" swapped="no"/><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><property name="spacing">5</property><child><object class="GtkNotebook"><property name="visible">True</property><property name="can-focus">True</property><property name="hexpand">True</property><property name="vexpand">True</property><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=5 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">2</property><property name="column-spacing">5</property><property name="column-homogeneous">True</property><child><object class="GtkCheckButton" id="bounty_types:boss_culling"><property name="label" translatable="yes">Boss Creature</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:culling"><property name="label" translatable="yes">Culling</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:escort"><property name="label" translatable="yes">Escort</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:foraging"><property name="label" translatable="yes">Foraging</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:gem_collecting"><property name="label" translatable="yes">Gem Collecting</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:heirloom_loot"><property name="label" translatable="yes">Heirloom (loot)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:heirloom_search"><property name="label" translatable="yes">Heirloom (search)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:kill_bandits"><property name="label" translatable="yes">Kill Bandits</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:rescue"><property name="label" translatable="yes">Rescue</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:skinning"><property name="label" translatable="yes">Skinning</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">1</property></packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Bounty Types</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=6 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">5</property><property name="column-spacing">5</property><child><object class="GtkCheckButton" id="exp_pause"><property name="label" translatable="yes">Rest when mind full</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-bottom">15</property><property name="label" translatable="yes">Selling Script:</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property><property name="height">2</property>
      </packing></child><child><object class="GtkEntry" id="selling_script"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="max-width-chars">40</property><property name="placeholder-text" translatable="yes">Defaults to eloot</property></object><packing><property name="left-attach">2</property><property name="top-attach">0</property><property name="height">2</property></packing></child><child><object class="GtkCheckButton" id="once_and_done"><property name="label" translatable="yes">Run one bounty and quit</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">When checked this will quit after one bounty.</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="rest_random"><property name="label" translatable="yes">Rest at random nodes in town</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">When checked this will rest in a random node within town. 
            </property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property><property name="width">2</property></packing></child><child><object class="GtkCheckButton" id="use_vouchers"><property name="label" translatable="yes">Use Vouchers</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">3</property></packing></child><child><object class="GtkEntry" id="resting_room"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">2</property><property name="top-attach">4</property><property name="height">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">70</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Resting Room ID:</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">4</property><property name="height">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-bottom">15</property><property name="label" translatable="yes">Healing Script:</property></object><packing><property name="left-attach">1</property><property name="top-attach">2</property><property name="height">2</property>
      </packing></child><child><object class="GtkEntry" id="healing_script"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="placeholder-text" translatable="yes">Defaults to eherb</property></object><packing><property name="left-attach">2</property><property name="top-attach">2</property><property name="height">2</property></packing></child><child><object class="GtkCheckButton" id="basic"><property name="label" translatable="yes">Just the Basics</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">Only pickup and return bounties based on settings. No automatic hunting or whatnot.
            </property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="use_boosts"><property name="label" translatable="yes">Use Bounty Boosts</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">2</property></packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Misc</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=6 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-end">7</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">5</property><property name="column-spacing">5</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of creatures you\'ll kill for a culling bounty.</property><property name="halign">end</property><property name="margin-start">5</property><property name="label" translatable="yes">  Max Culling Kills (?)</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkSpinButton" id="culling_max"><property name="visible">True</property><property name="can-focus">True</property><property name="adjustment">culling_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of gems you\'re willing to find.</property><property name="halign">end</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Max Gems (?)</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkSpinButton" id="gem_max"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="adjustment">gem_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">     </property></object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of herbs you\'re willing to find.</property><property name="halign">end</property><property name="margin-start">20</property><property name="label" translatable="yes">Max Herbs (?)</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkSpinButton" id="herb_max"><property name="visible">True</property><property name="can-focus">True</property><property name="adjustment">herb_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of skins you\'re willing to find.</property><property name="halign">end</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Max Skins (?)</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkSpinButton" id="skin_max"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="adjustment">skin_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">3</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Number of extra skins to get before trying to turn them in.</property><property name="margin-start">20</property><property name="margin-bottom">10</property><property name="label" translatable="yes"># of extra skins(?)</property></object><packing><property name="left-attach">4</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkSpinButton" id="extra_skin"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="text" translatable="yes">30</property><property name="adjustment">extra_skin_adjustment</property><property name="numeric">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">1</property></packing></child><child><placeholder/></child><child><placeholder/>
      </child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Task Limits</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child></object></child></object></child></object></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">General</property>
      </object><packing><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=4 n-rows=5 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkCheckButton" id="forage_options:hiding"><property name="label" translatable="yes">Hide when foraging</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_608"><property name="label" translatable="yes">Camouflage (608)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_604"><property name="label" translatable="yes">Nature\'s Bounty (604)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_619"><property name="label" translatable="yes">Mass Calm (619)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_506"><property name="label" translatable="yes">Celerity (506)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_gambit"><property name="label" translatable="yes">Rogue Gambits: Stealth</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">2</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_213"><property name="label" translatable="yes">Minor Sanctuary (213)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_1011"><property name="label" translatable="yes">Song of Peace (1011)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_650"><property name="label" translatable="yes">Assume Aspect (650) Yierka</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_709"><property name="label" translatable="yes">Grasp of the Grave (709)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="forage_options:run"><property name="label" translatable="yes">Run from creatures</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_919"><property name="label" translatable="yes">Wizard\'s Shield (919)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_140"><property name="label" translatable="yes">Wall of Force (140)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_604evoke"><property name="label" translatable="yes">Nature\'s Bounty Evoke (604)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="forage_options:use_1035"><property name="label" translatable="yes">Song of Tonis (1035)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">2</property></packing></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Foraging Options</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property>
      </packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Pre-Foraging Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="forage_prep_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Active Foraging Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="forage_prep_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Pre-Foraging</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Foraging Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="forage_post_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Foraging Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="forage_post_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Post-Foraging</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">2</property></packing></child></object></child></object></child></object><packing><property name="position">1</property></packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Foraging</property>
      </object><packing><property name="position">1</property><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=4 n-rows=4 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkCheckButton" id="heirloom_options:use_619"><property name="label" translatable="yes">Mass Calm (619)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_506"><property name="label" translatable="yes">Celerity (506)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_213"><property name="label" translatable="yes">Minor Sanctuary (213)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_1011"><property name="label" translatable="yes">Song of Peace (1011)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_709"><property name="label" translatable="yes">Grasp of the Grave (709)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:run"><property name="label" translatable="yes">Run from creatures</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_919"><property name="label" translatable="yes">Wizard\'s Shield (919)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_140"><property name="label" translatable="yes">Wall of Force (140)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">2</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_402"><property name="label" translatable="yes">Presence (402)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="heirloom_options:use_1035"><property name="label" translatable="yes">Song of Tonis (1035)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">1</property></packing></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Search Options</property>
      </object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Pre-Searching Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="heirloom_prep_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Active Searching Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="heirloom_prep_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Pre-Heirloom Searching</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Searching Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="heirloom_post_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Searching Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="heirloom_post_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Post-Heirloom Searching</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">2</property></packing></child></object></child></object></child></object><packing><property name="position">2</property></packing>
      </child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Heirloom</property></object><packing><property name="position">2</property><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=25 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property><property name="width">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Reference only, doesn\'t need to be exact</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Location</property><property name="use-markup">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Should be a comma seperated list (228, 188 ,u76564564)</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Bad Room Numbers (Supports UID\'s)</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property><property name="width">2</property></packing></child><child><object class="GtkEntry" id="location3"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">3</property><property name="width">3</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">7</property><property name="width">3</property>
      </packing></child><child><object class="GtkEntry" id="location4"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">8</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">9</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location5"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">10</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">11</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location6"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">12</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">13</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location7"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">14</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">15</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location8"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">16</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">17</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location9"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">18</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">19</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location10"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">20</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">21</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location11"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">22</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">23</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location12"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">24</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">5</property><property name="width">3</property></packing></child><child><object class="GtkEntry" id="location2"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property></packing></child><child><object class="GtkEntry" id="location1"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room1"><property name="width-request">400</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">2</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room2"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">4</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room3"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">6</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room4"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">8</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room5"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">10</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room6"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">12</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room7"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">14</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room8"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">16</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room9"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">18</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room10"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">20</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room11"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">22</property><property name="width">2</property>
      </packing></child><child><object class="GtkEntry" id="bad_room12"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">1</property><property name="top-attach">24</property><property name="width">2</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Bad Room List</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child></object></child></object></child></object><packing><property name="position">3</property></packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Bandits</property>
      </object><packing><property name="position">3</property><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">6</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=9 n-rows=9 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">10</property><property name="column-spacing">5</property><property name="row-homogeneous">True</property><property name="column-homogeneous">True</property><child><object class="GtkCheckButton" id="escort_types:landing_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Destination </property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property><property name="width">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Icemule</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">4</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Solhaven</property></object><packing><property name="left-attach">1</property><property name="top-attach">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Wehnimer\'s</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Start From</property><property name="angle">90</property></object><packing><property name="left-attach">0</property><property name="top-attach">2</property><property name="height">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">3</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">2</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Zul Logoth</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">5</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'llistim</property></object><packing><property name="left-attach">1</property><property name="top-attach">6</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'Vaalor</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Wehnimer\'s</property></object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">3</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">3</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">4</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">3</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Solhaven</property></object><packing><property name="left-attach">3</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">5</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">3</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Icemule</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">7</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">6</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property>
      </object><packing><property name="left-attach">5</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">4</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">5</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Zul Logoth</property></object><packing><property name="left-attach">5</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">6</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">6</property><property name="top-attach">4</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">6</property><property name="top-attach">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'llistim</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">7</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">7</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">5</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">7</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">2</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'Vaalor</property></object><packing><property name="left-attach">7</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property></object><packing><property name="left-attach">8</property><property name="top-attach">1</property>
      </packing></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/>
      </child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Travel Preferances</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Pre-Escort Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="escort_prep_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Active Escort Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="escort_prep_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Pre-Escort</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=2 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Escort Commands:</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="escort_post_commands"><property name="width-request">550</property><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Post-Escort Scripts:</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkEntry" id="escort_post_scripts"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">10</property><property name="margin-bottom">10</property><property name="max-width-chars">40</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Post-Escort</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">2</property></packing></child></object></child></object></child></object><packing><property name="position">4</property></packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Escort</property>
      </object><packing><property name="position">4</property><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">2</property><property name="column-spacing">5</property><child><object class="GtkButton" id="creature_exclude_add"><property name="label" translatable="yes">Add</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkButton" id="creature_exclude_delete"><property name="label" translatable="yes">Delete</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">end</property><property name="margin-end">5</property><property name="margin-bottom">5</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="creature_exclude_entry"><property name="width-request">218</property><property name="visible">True</property><property name="can-focus">True</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="placeholder-text" translatable="yes">Creatures you don\'t want bounties for</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkScrolledWindow"><property name="height-request">525</property><property name="visible">True</property><property name="can-focus">True</property><property name="hexpand">True</property><property name="border-width">5</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkTreeView" id="creature_exclude"><property name="visible">True</property><property name="can-focus">True</property><property name="vexpand">False</property><property name="model">creature_exclude_store</property><property name="headers-visible">False</property><property name="search-column">0</property><property name="fixed-height-mode">True</property><child internal-child="selection"><object class="GtkTreeSelection"/>
      </child><child><object class="GtkTreeViewColumn"><property name="sizing">fixed</property><property name="title" translatable="yes">Exclusion</property><child><object class="GtkCellRendererText"/><attributes><attribute name="text">0</attribute></attributes></child></object></child></object></child></object></child></object><packing><property name="left-attach">0</property><property name="top-attach">1</property><property name="width">3</property></packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Exclusions should be entered one line at a time. Regular expressions are supported.

            </property><property name="label" translatable="yes">Creature Exclusions (?)</property>
      </object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child></object></child></object></child></object><packing><property name="position">5</property></packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Exclusions</property></object><packing><property name="position">5</property><property name="tab-fill">False</property>
      </packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=25 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkComboBoxText" id="default_profile"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="default_name"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="margin-end">10</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Gem/Default  Profile</property></object><packing><property name="left-attach">0</property><property name="top-attach">2</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property><property name="width">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Names should be seperated by commas.</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Creature Names (?)</property><property name="use-markup">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Associated Profile</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="names_a"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">6</property></packing></child><child><object class="GtkComboBoxText" id="profile_a"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_a"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">6</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">3</property><property name="width">3</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">7</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_b"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_b"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">8</property></packing></child><child><object class="GtkEntry" id="names_b"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">8</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">9</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_c"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_c"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">10</property></packing></child><child><object class="GtkEntry" id="names_c"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">10</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">11</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_d"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_d"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">12</property></packing></child><child><object class="GtkEntry" id="names_d"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">12</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">13</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_e"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_e"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">14</property></packing></child><child><object class="GtkEntry" id="names_e"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">14</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">15</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_f"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_f"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">16</property></packing></child><child><object class="GtkEntry" id="names_f"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">16</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">17</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_g"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_g"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">18</property></packing></child><child><object class="GtkEntry" id="names_g"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">18</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">19</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_h"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_h"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">20</property></packing></child><child><object class="GtkEntry" id="names_h"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">20</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">21</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_i"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_i"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">22</property></packing></child><child><object class="GtkEntry" id="names_i"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">22</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">23</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_j"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_j"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">24</property></packing></child><child><object class="GtkEntry" id="names_j"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">24</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="valign">center</property><property name="margin-end">5</property><property name="label" translatable="yes">Only Kill Bounty 
                  Creatures
            </property></object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="kill_a"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="kill_b"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">8</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_c"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">10</property></packing></child><child><object class="GtkCheckButton" id="kill_d"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">12</property></packing></child><child><object class="GtkCheckButton" id="kill_e"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">14</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_f"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">16</property></packing></child><child><object class="GtkCheckButton" id="kill_g"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">18</property></packing></child><child><object class="GtkCheckButton" id="kill_h"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">20</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_i"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">22</property></packing></child><child><object class="GtkCheckButton" id="kill_j"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">24</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">5</property><property name="width">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="margin-end">10</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Bandits Profile</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property></packing></child><child><object class="GtkComboBoxText" id="bandits_profile"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_bandits"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="kill_bandits"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">4</property>
      </packing></child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Profiles</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child></object></child></object></child></object><packing><property name="position">6</property>
      </packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Profiles</property></object><packing><property name="position">6</property><property name="tab-fill">False</property></packing></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Your changes are saved automatically.</property><attributes><attribute name="style" value="italic"/>
      </attributes></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkButton"><property name="label" translatable="yes">Close</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">end</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><signal name="clicked" handler="on_close_clicked" swapped="no"/>
      </object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="pack-type">end</property><property name="position">2</property></packing></child></object></child></object></interface>'
                                       
    end
    
    # This is connected to automatically during load_settings and syncs data back to CharSettings.
    def on_update(obj)
      Gtk.queue do
        key = obj.builder_name.to_sym
        setting = Setup.get_setting(key)
        return if setting.nil?

        if obj.class == Gtk::CheckButton
          @settings[key] = obj.active?
        elsif obj.class == Gtk::Entry
          @settings[key] = obj.text.strip
        elsif obj.class == Gtk::SpinButton
          # update from text entry
          obj.update

          # force int, we don't use floats anywhere
          @settings[key] = obj.adjustment.value.to_i
        elsif obj.class == Gtk::ComboBoxText
          @settings[key] = obj.active_text
        end
      end
    end

    def on_close_clicked
      EBounty.save_profile()
      self['main'].destroy
    end

    def on_destroy
      Gtk.queue { @running = false }
    end

    def on_drop_load(profile_name) 

        dir = "#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles"   
    
        self[profile_name].remove_all
        self[profile_name].append_text('')
        names = []
        Dir.foreach(dir){|f| names.push(f)} 
        names.each{ |filename|
          next if filename == '.' || filename == '..' || filename =~ /.ini/              
          self[profile_name].append_text("#{filename.sub(".yaml", "")}")
        }     
    end

    # iterate all objects and for any that match a setting name directly we set the default
    def load_settings
      Gtk.queue do
        # load up the generic settings which are just matching by name of the widget
        objects.each do |obj|
          next unless obj.methods.include?(:builder_name)

          key = obj.builder_name.to_sym
          next if (setting = Setup.get_setting(key)).nil?
          
          # set the default value
          if obj.class == Gtk::CheckButton
            obj.active = @settings[key]
            obj.signal_connect('toggled') { on_update(obj) }
          elsif obj.class == Gtk::Entry
            obj.text = @settings[key].strip
           
            if obj.builder_name.to_s == "default_name"
              obj.text = @settings[:default_profile]
            elsif obj.builder_name.to_s == "profile_name_bandits"
              obj.text = @settings[:bandits_profile]
            elsif obj.builder_name.to_s == "profile_name_a"
              obj.text = @settings[:profile_a]
            elsif obj.builder_name.to_s == "profile_name_b"
              obj.text = @settings[:profile_b]  
            elsif obj.builder_name.to_s == "profile_name_c"
              obj.text = @settings[:profile_c]  
            elsif obj.builder_name.to_s == "profile_name_d"
              obj.text = @settings[:profile_d]  
            elsif obj.builder_name.to_s == "profile_name_e"
              obj.text = @settings[:profile_e]  
            elsif obj.builder_name.to_s == "profile_name_f"
              obj.text = @settings[:profile_f]  
            elsif obj.builder_name.to_s == "profile_name_g"
              obj.text = @settings[:profile_g]  
            elsif obj.builder_name.to_s == "profile_name_h"
              obj.text = @settings[:profile_h]  
            elsif obj.builder_name.to_s == "profile_name_i"
              obj.text = @settings[:profile_i]  
            elsif obj.builder_name.to_s == "profile_name_j"
              obj.text = @settings[:profile_j]
            end
          
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::SpinButton
            obj.value = @settings[key]
            obj.adjustment.value = @settings[key]
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::ComboBoxText 
              on_drop_load(obj.builder_name.to_s)  
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::TreeView
            if (store = self["#{key}_store"]).nil?
              respond "** failed to find store for treeview #{key}"
              next
            elsif setting[:load].nil?
              respond "** no :load defined #{key}"
              next
            end

            setting[:load].call(store, @settings[key])

            # setup the signals
            if (add = self["#{key}_add"]).nil?
              respond "** failed to find add for treeview #{key}"
              next
            elsif (delete = self["#{key}_delete"]).nil?
              respond "** failed to find delete for treeview #{key}"
              next
            elsif (entry = self["#{key}_entry"]).nil?
              respond "** failed to find entry for treeview #{key}"
              next
            end

            add.signal_connect('clicked') do
              if setting[:set].nil?
                respond "** no :set defined for #{key}"
                next
              elsif entry.text.empty?
                next
              end
              setting[:set].call(store, entry.text, @settings[key])
              setting[:load].call(store, @settings[key])
            end

            delete.signal_connect('clicked') do
              if setting[:delete].nil?
                respond "** no :delete defined for #{key}"
                next
              elsif (selected = obj.selection.selected).nil?
                next
              end
              setting[:delete].call(store, selected, @settings[key])
              setting[:load].call(store, @settings[key])
            end
          end
        end

        # checkboxes for array storage with id's <setting>:<value>
        # this is primarily used by the loot types
        objects.each do |obj|
          next unless obj.methods.include?(:builder_name)
          next unless obj.builder_name =~ /^([^:]+):(.*)$/i
          next unless obj.class == Gtk::CheckButton

          key = Regexp.last_match(1).to_sym
          value = Regexp.last_match(2).to_s
          next if Setup.get_setting(key).nil?
   
          # disable unless spell is known
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_506")) unless Spell[506].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_gambit")) unless Char.prof =~ /rogue/i
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_604")) unless Spell[604].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_604evoke")) unless Spell[604].known? && Skills.slblessings > 15
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_608")) unless Spell[608].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_619")) unless Spell[619].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_650")) unless Spell[650].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_213")) unless Spell[213].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_1011")) unless Spell[1011].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_709")) unless Spell[709].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_919")) unless Spell[919].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_140")) unless Spell[140].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("forage_options:use_1035")) unless Spell[1035].known?
          
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_709")) unless Spell[709].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_140")) unless Spell[140].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_402")) unless Spell[402].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_506")) unless Spell[506].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_919")) unless Spell[919].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_213")) unless Spell[213].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_619")) unless Spell[619].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_1011")) unless Spell[1011].known?
          obj.set_sensitive(false) if (obj.builder_name.to_s.eql?("heirloom_options:use_1035")) unless Spell[1035].known?
                  
          obj.active = @settings[key].include?(value)

          # add in hook
          obj.signal_connect('toggled') do
            @settings[key].delete(value)
            if obj.active?
              @settings[key].push(value)
              @settings[key].uniq!.sort!
            end
          end
        end
      end
    end

    def start
      @running = true

      Gtk.queue { self['main'].show_all }

      wait_while { @running }
    end

    def list(cat_to_list: 'all')
      indent_size = 2
      print_array =
        proc do |key, value, indent|
          _respond("#{' ' * indent_size * indent.to_i}#{key}:")
          value.sort!.each { |entry| _respond("#{' ' * indent_size * (indent.to_i + 1)}#{value.index(entry) + 1}. #{entry}") }
        end

      print_value = proc { |key, value, indent| _respond("#{' ' * indent_size * indent.to_i}#{key}: #{value}") }

      categories = cat_to_list == 'all' ? %w[general] : [cat_to_list]
      if $frontend == 'stormfront'
        output = "<output class=\"mono\"/>\n"
      else
        output = String.new
      end
      categories.each do |opt|
        _respond("#{output}") if !output.empty?
        _respond("#{monsterbold_start}= #{opt.capitalize} =#{monsterbold_end}\n")
        @@categories[opt.to_sym].each do |id, _|
          value = @settings[id]
          value.class == Array ? print_array.call(id, value, 1) : print_value.call(id, value, 1)
        end
      end
      if $frontend == 'stormfront'
        output = "<output class=\"\"/>\n"
        _respond("#{output}")
      end
    end

    def self.update_setting(key, value)
      setting = Setup.get_setting(key)
      EBounty.msg("error", "** Setting \"#{key}\" does not exist") if setting.nil?

      action = nil

      if value =~ /^([+-])(.*)$/
        action = Regexp.last_match(1)
        value = Regexp.last_match(2).strip.downcase
      end

      if value == 'reset'
        @settings.delete(key)
        EBounty.msg("info", " Reset #{key}")
      elsif @settings[key].class == Array
        if value =~ /\d/ && @settings[key][value.to_i]
          @settings[key].delete_at(value.to_i)
        else
          @settings[key].delete(value)
        end

        if action == '-'
          EBounty.msg("info", " \"#{value}\" removed from \"#{key}\"")
        else
          @settings[key].push(value)
          EBounty.msg("info", " \"#{value}\" added to \"#{key}\"")
        end

        EBounty.msg("info", " \"#{key}\" is now \"#{@settings[key].join(', ')}\"")
      else
        if @settings[key].class == FalseClass || @settings[key].class == TrueClass
          value = value =~ /^true|1|yes|on/ ? true : false
        elsif @settings[key].class == Integer
          value = value.to_i
        end

        EBounty.msg("info", " \"#{key}\" has been set to \"#{value}\"")
        @settings[key] = value
      end
    end
  end

  module Hunting
  
    def self.should_hunt?
      
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
      
      if checkbounty =~ /^You are not currently assigned / && !Effects::Cooldowns.to_h.include?('Next Bounty')
        return true
      end
      
      if( percentmind() > UserVars.op['rest_till_exp'].to_i) && EBounty.data.settings[:exp_pause]
        EBounty.data.reason = "Mind > #{UserVars.op['rest_till_exp'].to_i}%"
        return false
      end
      
      if percentmana < UserVars.op['rest_till_mana'].to_i 
        EBounty.data.reason = "Mana less than #{UserVars.op['rest_till_mana']}%"
        return false
      end
      
      if !EBounty.data.wait
        return true
      end
      
          
      #fixme: convert to actual percentage
      if( percentmind() > UserVars.op['rest_till_exp'].to_i)
        EBounty.data.reason = "Mind > #{UserVars.op['rest_till_exp'].to_i}%"
        return false
      elsif( percentmana() < UserVars.op['rest_till_mana'].to_i )
        EBounty.data.reason = "Mana < #{UserVars.op['rest_till_mana'].to_i}%"
        return false
      elsif( checkspirit() < (Stats.aur[0].to_f / 10).round - 1 )
        EBounty.data.reason = "Spirit too low"
        return false
      elsif Stats.enhanced_aur[0].to_i < Stats.aur[0].to_i
        EBounty.data.reason = "Recovering from Death"
        return false
      end      
      return true
    end
  
    def self.set_parameters
    
    
    
    end
  
    def self.set_eval
    
      bounty_eval = "!!(checkbounty =~ /^You.*?(succeeded|located|failed )|your task is failed/)" # bounty complete
      bounty_eval += " || !!(checkbounty =~ /^You are not currently assigned / && !Effects::Cooldowns.to_h.include?('Next Bounty'))"
      
      if checkbounty =~ /A local divinist has had visions of the child fleeing/
        bounty_eval += " || !!(checkbounty =~ /^You have made contact with the child/ && GameObj.npcs.any? { |npc| npc.name =~ /\\bchild\\b/ })"
      elsif checkbounty =~ /You have been tasked to retrieve(.*)of at least/
        EBounty.data.bundle_skin = $2 if checkbounty =~ /You have been tasked to retrieve (\d+) (.*?)(?:s)? of at/        
        EBounty.data.bundle_skin = EBounty.data.bundle_skin.match(/(\w+)\s+(\w+)\s*\Z/)
   
        bounty_eval += ' || !!(count = 0;EBounty.data.containers.each{|i| i.contents.each{ |k| if k.name =~ /bundle of #{EBounty.data.bundle_skin}/ && !EBounty.data.bundle_skin.to_s.empty? && !hidden?; lines = Lich::Util.quiet_command_xml("measure ##{k.id}", /You glance through/);count += $1.to_i if lines.any?{ |l| l=~ /count a total of (\d+) <a exist/};end;};};count >= EBounty.data.remaining_skins.to_i)' 
        bounty_eval += ' || !!(j=0;EBounty.data.containers.each{|i| j += i.contents.count{|l| l.name =~ /#{EBounty.data.skin}/i && !EBounty.data.skin.to_s.empty?}.to_i }; j >= EBounty.data.remaining_skins.to_i)'
      elsif checkbounty =~ /The gem dealer/
        bounty_eval += ' || !!(t=0;EBounty.data.containers.each{|k| t += k.contents.count{|v| v.name =~ /#{EBounty.data.gem.strip}/i && !EBounty.data.gem.to_s.empty?}.to_i}; t>= EBounty.data.remaining_gems.to_i)'
      end

      UserVars.op['bounty_eval'] = bounty_eval
      
      sleep 0.2      
      
    end
    
    def self.pre_hunt(type)
    
      commands = nil
      scripts = nil
    
      case type
        when /forage/i
          commands = EBounty.data.settings[:forage_prep_commands]
          scripts = EBounty.data.settings[:forage_prep_scripts]
        when /heirloom/i 
          commands = EBounty.data.settings[:heirloom_prep_commands]
          scripts = EBounty.data.settings[:heirloom_prep_scripts]
        when /escort/i
          commands = EBounty.data.settings[:escort_prep_commands]
          scripts = EBounty.data.settings[:escort_prep_scripts]
        else
          commands = UserVars.op['hunting_prep_commands']
          scripts = UserVars.op['hunting_scripts']
      end
        
    
      commands.split(",").each { |i|     
        if i =~ /^script\s+(.*?)(\s|$)(.*)/i
          name = $1
          args = $3
          if (args == nil || args =~ /^\s*$/)
            start_script name
          else
            args = args.split(/ /)
            start_script name, args
          end
        else
          fput(i)
          sleep(0.3)
        end
      }
      
      scripts.split(/,\s*/).each do |i|
        tokens = i.split(/\s+/)
        if (tokens.size > 1)
          start_script tokens[0], tokens[1..-1]   
        else
          start_script tokens[0]   
        end
      end
    
    end
    
    def self.post_hunt(type)
      EBounty.msg("debug","Start of post_hunt: #{type}")
      commands = nil
      kill_scripts = nil
      scripts = nil
    
      case type
        when /forage/i
          commands = EBounty.data.settings[:forage_post_commands]
          kill_scripts = EBounty.data.settings[:forage_prep_scripts]
          scripts = EBounty.data.settings[:forage_post_scripts]
        when /heirloom/i 
          commands = EBounty.data.settings[:heirloom_post_commands]
          kill_scripts = EBounty.data.settings[:heirloom_prep_scripts]
          scripts = EBounty.data.settings[:heirloom_post_scripts]
        when /escort/i
          commands = EBounty.data.settings[:escort_post_commands]
          kill_scripts = EBounty.data.settings[:escort_prep_scripts]
          scripts = EBounty.data.settings[:escort_post_scripts]
        else
          commands = UserVars.op['resting_commands']
          kill_scripts = UserVars.op['hunting_scripts']
          scripts = UserVars.op['resting_scripts']
      end
    
      unless kill_scripts.to_s.empty?
        kill_scripts.split(/,\s*/).each do |i|
          tokens = i.split(/\s+/)
          kill_script(tokens[0]) if running?(tokens[0])
        end
      end
      
      unless commands.to_s.empty?
        commands.split(",").each { |i|  
          EBounty.msg("debug","commands: #{i}")   
          if i =~ /^script\s+(.*?)(\s|$)(.*)/i
            name = $1
            args = $3
            if (args == nil || args =~ /^\s*$/)
              Script.run(name)
            else
              args = args.split(/ /)
              Script.run(name, args)
            end
          else
            fput(i)
            sleep(0.3)
          end
        }
        EBounty.msg("debug","End of commands")  
      end
      
      unless scripts.to_s.empty?
        scripts.split(/,\s*/).each do |i|
          EBounty.msg("debug","scripts: #{i}")   
          tokens = i.split(/\s+/)
          if (tokens.size > 1)
            Script.run(tokens[0], tokens[1..-1].join(", "))          
          else
            Script.run(tokens[0])        
          end
        end
        EBounty.msg("debug","End of scripts")  
      end
      
      
      EBounty.msg("debug","End of post_hunt: #{type}")      
    end
  
    def self.go_hunting

      hunt_start = 0
      hunt_end = 0
      converted = nil
      EBounty.data.rest_time = Time.now
     
      original_targets = UserVars.op['targets']
      original_wounded = UserVars.op['wounded_eval']
      original_fried = UserVars.op['fried']
      original_rest = UserVars.op['rest_till_exp']
      original_start = UserVars.op['hunting_room_id']
      original_rally = UserVars.op['rallypoint_room_id']
      original_boundaries = UserVars.op['hunting_boundaries']
     
      before_dying { 
        Script.kill("bigshot") if Script.running?("bigshot")
      
        UserVars.op['targets'] = original_targets
        UserVars.op['wounded_eval'] = original_wounded
        UserVars.op['bounty_eval'] = ''
        UserVars.op['fried'] = original_fried
        UserVars.op['rest_till_exp'] = original_rest
        UserVars.op['hunting_room_id'] = original_start
        UserVars.op['rallypoint_room_id'] = original_rally
        UserVars.op['hunting_boundaries'] = original_boundaries
      
        profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
        UserVars.op = YAML.load_file(profile)
     
      } 
 
      Hunting.set_eval
      
      if (checkbounty =~ /You are not currently assigned a task/ && Effects::Cooldowns.to_h.include?('Next Bounty')) || EBounty.data.settings[:exp_pause] 
        UserVars.op['fried'] = "100"
      else     
        UserVars.op['fried'] = "101"
        UserVars.op['rest_till_exp'] = "100"
      end
    
      unless EBounty.data.creature.nil?
  
        result = nil
        if result = UserVars.op['targets'].match(/#{EBounty.data.creature.split.last}(\([a-j]\))/)
          routine = $1
        end
        new_target = result.nil? ? EBounty.data.creature.split.last : EBounty.data.creature.split.last + routine
       
        if EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? 
          if EBounty.data.creature == "bandits"
            UserVars.op['targets'] = "(?:thief|rogue|bandit|mugger|outlaw|highwayman|marauder|brigand|thug|robber)"
            UserVars.op['hunting_room_id'] = UserVars.op['rallypoint_room_id'] = EBounty.data.location_start         
            UserVars.op['hunting_boundaries'] = EBounty.data.location_boundaries
          else
            UserVars.op['targets'] = new_target
          end         
        elsif !EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? && EBounty.data.creature != "bandits" 
          UserVars.op['targets'] += ",#{new_target}"
        elsif !EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? && EBounty.data.creature == "bandits" 
          UserVars.op['targets'] = "(?:.*)"
          UserVars.op['hunting_room_id'] = UserVars.op['rallypoint_room_id'] = EBounty.data.location_start         
          UserVars.op['hunting_boundaries'] = EBounty.data.location_boundaries
        end
  
      end
  
      until checkbounty =~ /succeeded in your task|You have made contact with the child you are to rescue|You have located/i || (checkbounty =~ /You are not currently assigned a task/ && !Effects::Cooldowns.active?("Next Bounty"))
 
        if checkbounty =~ /You have been tasked to retrieve (\d+) (.*?)(?:s)? of at least/
          EBounty.data.remaining_skins = $1.to_i + EBounty.data.settings[:extra_skin].to_i
        elsif checkbounty =~ /You have been tasked to retrieve (\d+) (?:more of|of) them/
          EBounty.data.remaining_gems = $1.to_i
        end
        
        break if checkbounty =~ /succeeded in your task /
         
        EBounty.go2_rest if EBounty.data.wait || !Hunting.should_hunt?
         
        until(Hunting.should_hunt?)
				           
          if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
            healer = EBounty.data.settings[:healing_script]
            if healer.to_s.empty?
              Script.run('eherbs')   
            else
              Script.run(healer)
            end
          end
                        
          if EBounty.data.rest_time < Time.now
            respond ""
            if hunt_start != 0
              EBounty.msg("yellow", " Last Hunt: #{converted}")
            end
                       
            EBounty.msg("yellow", " Not Hunting: #{EBounty.data.reason}")
            EBounty.msg("yellow", " Total Elapsed Time: #{EBounty.elapsed}") 
            respond ""
 
            #Fixme: self_buffs
           
            EBounty.data.rest_time = Time.now + 120
          end
          sleep 0.5
        end
      
        break if checkbounty =~ /^You are not currently assigned / && !Effects::Cooldowns.to_h.include?('Next Bounty')
      
        hunt_start = Process.clock_gettime(Process::CLOCK_MONOTONIC)
        Script.run('bigshot','bounty') 
        hunt_end = Process.clock_gettime(Process::CLOCK_MONOTONIC)
        elapsed = hunt_end - hunt_start
        converted = Time.at(elapsed).utc.strftime("%H:%M:%S")
        
        EBounty.wait_rt
        
        unless $bigshot_status =~ /rest_stop/i
        
          fput "stance defensive" unless stance =~ /defensive|guarded/ 
          
          #final looting check, sometimes BS ends to soon
          if EBounty.data.settings[:selling_script].to_s.empty?
            Script.run('eloot')
          else
            Script.run(EBounty.data.settings[:selling_script])
          end
          
          #End at the bigshot resting spot so we stay in the same town
          unless GameObj.npcs.find { |n| n.name =~ /child/i }
            
            EBounty.fog
            
            #We stopped for a reason so head back to town and sell and heal if needed
            EBounty.go2(EBounty.data.settings[:resting_room])
          
            Hunting.post_hunt("hunting")
            
            unless checkbounty =~ /succeeded in your task/             
              Task.prep
              EBounty.go2_rest if UserVars.op['fried'] == "100" 
            end
            
          end
        end
      end
      
      UserVars.op['targets'] = original_targets
      UserVars.op['wounded_eval'] = original_wounded
      UserVars.op['bounty_eval'] = ''
      UserVars.op['fried'] = original_fried
      UserVars.op['rest_till_exp'] = original_rest
      UserVars.op['hunting_room_id'] = original_start
      UserVars.op['rallypoint_room_id'] = original_rally
      UserVars.op['hunting_boundaries'] = original_boundaries
       
    end
  
  end

  module Task
    
    def self.bounty_check(repeat = false)
    
      EBounty.data.creature = nil
    
      bounty_regex = Regexp.union(
        /It appears they have a creature problem they'd like you to solve./,
        /It appears they have a bandit problem they'd like you to solve./,
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./,
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./
      )
                 
      EBounty.msg("debug","bounty_check: #{checkbounty}")
  
      #bounty status
      if (checkbounty =~ /You are not currently assigned a task./i )
        EBounty.msg("debug","no_bounty")
        Effects::Cooldowns.active?("Next Bounty") ? Task.wait_for_bounty : Task.bounty_get
      elsif (checkbounty =~ /You have succeeded in your task and can return to the Adventurer's Guild to receive your reward./i )
        Task.bounty_complete
      elsif (checkbounty =~ /You succeeded in your task and should report back to/i )
        Task.ask_guard
        Task.bounty_check
      #get bounty ...
      elsif (checkbounty =~ bounty_regex) 
        if Task.bounty_keep
          Task.ask_guard
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local.*?has asked for our aid./)
        if Task.bounty_keep
          Task.forage_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local gem dealer, .*?, has an order to fill and wants our help./)
        if Task.bounty_keep
          Task.gem_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local furrier .*? has an order to fill and wants our help./)
        if Task.bounty_keep
          Task.skin_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      
      #child bounty
      elsif (checkbounty =~ /A local divinist has had visions of the child fleeing from an? ((?:\w+|\s|'){1,5}) (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  Find the area/i )
        Task.child_bounty($1,$2)
      #bandit/creature bounty
      elsif (checkbounty =~ /You have been tasked to suppress bandit activity (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\./ )
        Task.bandit_bounty($1)
      #creature tasks
      elsif (checkbounty =~ /You have been tasked to hunt down and kill a particularly dangerous (.*) that has established a territory (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\./i )
        location = $2.nil? ? $3 : $2
        Task.creature_culling($1,location,"grizzled")
      elsif checkbounty =~ /You have been tasked to suppress (.*) activity (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  You need to kill (\d+) (?:more )?of them to complete your task\./i
        Task.creature_culling($1, $2, "herd")
      #forage bounty
      elsif (checkbounty =~ /concoction that requires (?:a |an )?(.*) found (?:on |in )?(.*?)(?: (?:near|between|under) .*?)?\.\s+These samples must be in pristine condition\.\s+You have been tasked to retrieve (\d+) (?:more )?sample/i )
        exit if EBounty.data.settings[:basic]
        Task.forage_bounty($1,$3,$2)      
      #gem bounty
      elsif (checkbounty =~ /The gem dealer in .*, .*, has received orders from multiple customers requesting (.*).  You have been tasked to retrieve (\d+) (?:more of|of) them.  You can SELL them to the gem dealer as you find them./i )
        exit if EBounty.data.settings[:basic]
        Task.gem_bounty($1,$2)      
      #skin bounty  
      elsif (checkbounty =~ /You have been tasked to retrieve (\d+) (.*?)(?:s)? of at least \w+ quality for .*? in .*?.  You can SKIN them off the corpse of (?:a|an) (.*?) or purchase them from another adventurer./i )
        Task.skin_bounty($3,$2,$1)     
      #heirloom bounty
      elsif (checkbounty =~ /You have been tasked to recover (?:an?|some) (.*) that an unfortunate citizen lost after being attacked by an? (.*?) (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  .*(SEARCH|LOOT)/i )
        Task.heirloom_bounty($1, $2, $3, $5)
      #escort bounty
      elsif (checkbounty =~ /client has hired us to provide a protective escort .* Go to the (.*?) and WAIT .* guarantee .*? safety to (.*?) as soon as you can/i)
        Task.escort($1,$2)
      elsif (checkbounty =~ /You have located (?:a |an )?(.*?) and should bring it back/i )
        Task.ask_guard
        Task.bounty_check
      elsif checkbounty =~ /You have made contact with the child you are to rescue/
        Task.child_found
      elsif (checkbounty =~ /You have failed in your task|The child you were tasked to rescue is gone and your task is failed/i)
        Task.task_failed
        Task.bounty_check
      #no match
      else
        if repeat
          EBounty.msg("warn", "Unknown Result: Unable to match bounty_check.")
          EBounty.msg("warn", "checkbounty: #{checkbounty}")
          exit
        else
          #in case checkbounty not populated...
          EBounty.get_lines("bounty", /<a exist=".*?your Adventurer's Guild information is as follows/i)
          repeat = true
          Task.bounty_check
        end
          
      end
      
    end
  
    def self.bounty_keep
         
      task = {
        /It appears they have a creature problem they'd like you to solve./ => "culling",
        /It appears they have a bandit problem they'd like you to solve./ => "bandits",
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./ => "rescue",
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./ => "heirloom",
        /The local.*?has asked for our aid./ => "foraging",
        /The local gem dealer, .*?, has an order to fill and wants our help./ => "gem_collecting",
        /The local furrier .*? has an order to fill and wants our help./ => "skinning",
          
      }
 
      current_task = task.select {|k| k =~ checkbounty}.shift[1]

      if !EBounty.data.settings[:bounty_types].index{|s| s =~ /#{current_task}/}
        return false
      end

      return true
      
    end
    
    def self.check_boost
    
      return false unless EBounty.data.settings[:use_boosts]  
    
      lines = EBounty.get_lines("boost info", /<a exist=".*?" noun=".*?">.*?<\/a>, your Login Rewards information is as follows/)

      if lines.any?{ |l| l =~ /<d cmd='boost bounty'>Bounty Boosts<\/d>:\s+([0-9,]+)/}
       boost = $1.delete(",").to_i
      end
    
      return true if boost.positive?
      
      return false
    
    end
    
    def self.guard_list
    
      town = Room[Room.current.find_nearest_by_tag("town")]
 
      location_list = []
      Room.list.find_all do |r|
        location_list.push(r.id) if r.tags.any? { |tag| tag =~ /advguard/} && !r.tags.to_s.empty? &&  Room[r.find_nearest_by_tag("town")].location == town.location
      end

      places = []
      location_list.each{ |room|
        next if town.path_to(room).nil?
        travel = Map.estimate_time(town.path_to(room))
        places.push(room) if travel < 5 
      }
 
      where_is_previous_var, where_is_shortest_distances_var = Room[Room.current.find_nearest_by_tag('advguard')].dijkstra
      starters = [Room.current.find_nearest_by_tag('advguard')]
      places = places - starters
      places = places.uniq.sort { |a,b| where_is_shortest_distances_var[a] <=> where_is_shortest_distances_var[b] }
      places = starters + places
      
      EBounty.msg("debug","guard_list places: #{places}")
      
      return places
      
    end
    
    def self.ask_guard
      
      location_list = Task.guard_list
      original_checkbounty = checkbounty
      guards = []
      need_fill_hands = false
      
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
      
      location_list.each{ |room|
      
        EBounty.go2(room)
        
        if Room.current.location =~ /the town of River's Rest/
          guards.push("purser") 
        else 
         guards = GameObj.npcs.find_all{ |npc| npc.name =~ /(?:guard|sergeant|guardsman|sentry|tavernkeeper)/i }
        end
        
        loop{
          if Room.current.uid !~ /7503252|7503251/
            break
          elsif !guards.length.positive?
            move checkpaths[0]
            guards = GameObj.npcs.find_all{ |npc| npc.name =~ /(?:guard|sergeant|guardsman|sentry|tavernkeeper)/i }
            break if guards.length.positive?
            echo "Looking for the lousy tavernkeeper"
            sleep 30
            next
          end  
        }
        
        next unless guards.length.positive?
        
        if checkbounty =~ /You have located (?:a |an )?(.*?) and should bring it back/i
          requested_item = $1
          found_item = nil
          EBounty.data.containers.each{|container|
            EBounty.open_container(container)
            container.contents.each{ |item|
              if item.name =~ /#{requested_item}/
                found_item = item
                break
              end
            }
            break if found_item
          } 
          
          if found_item
            empty_hands
            need_fill_hands = true
            fput "get ##{found_item.id}"
          else
            EBounty.go2(EBounty.data.settings[:resting_room])
            EBounty.msg("error", " Unable to find #{requested_item}")
            exit
          end
        end  
        
        got_response = false
        guards.each{ |guard|
          result = dothistimeout "ask #{guard} about bounty", 3, EBounty.data.guard_regex
          unless result =~ /I don't have any tasks for you right now/
            got_response = true
            break
          end       
        }
        
        break if got_response
            
      }
      
      fill_hands if need_fill_hands
      
      sleep 0.2 until checkbounty != original_checkbounty
        
    end
   
    def self.find_location(location)
     
      boundary_list = []
      location_list = []
      
      Room.list.find_all{ |r|
        if !r.location.to_s.empty? && location =~ /#{r.location}/i && !EBounty.data.bad_rooms.include?(r.id)
          location_list.push(r.id) 
        end
      }
 
     #where_is_previous_var, where_is_shortest_distances_var = Room.current.dijkstra
     #shortest_path = location_list.uniq.sort { |a,b| where_is_shortest_distances_var[a] <=> where_is_shortest_distances_var[b] }
     
     EBounty.msg("debug"," find_location: location_list - #{location_list}")
     location_list.each{ |id| 
      
      Room[id].wayto.keys.each{ |room|
        next if location_list.include?(room.to_i)
        boundary_list.push(room.to_s)
      }
     }
     EBounty.msg("debug","Bandits: boundary_list - #{boundary_list}")
     EBounty.data.location_start = Room.current.find_nearest(location_list).to_s
     EBounty.data.location_boundaries = boundary_list.join(",")
  
    end
  
    def self.bandit_bounty(location)
      EBounty.msg("debug","bandit_bounty | location: #{location}")
    
      if EBounty.data.settings[:bounty_types].include?("kill_bandits")
        EBounty.data.wait = false
        EBounty.switch_profile("bandits",location)
        Task.find_location(location)
        Hunting.go_hunting       
        Task.bounty_check
      else
        Task.bounty_remove
      end  
    end
  
    def self.bounty_complete     
      EBounty.msg("debug","bounty_complete")
      
      original_checkbounty = checkbounty
      
      unless EBounty.data.settings[:basic]
        #Make sure the default profile is loaded
        profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
        UserVars.op = YAML.load_file(profile)
      end
      
      if checkmind == "saturated"
        EBounty.go2_rest 
        exit if EBounty.data.settings[:basic] || EBounty.data.settings[:once_and_done]
        Task.prep
        
      end
            
      #Hang out until not satuarated
      until checkmind != "saturated"
        exit if (EBounty.data.settings[:basic] || EBounty.data.settings[:once_and_done])
        sleep 0.5
        #fput EBounty.data.rest_options.sample
        #Fixme: self_buffs    
      end
    
      #Go over to the adventure guild
      if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"
        advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      else
        advguild_id = Room.current.find_nearest_by_tag("advguild")
      end
      EBounty.go2(advguild_id)
      
      #Turn in the bounty - Fixme: dothistimeout
     
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      fput "ask #{npc} about bounty"
      
      sleep 0.2 until checkbounty != original_checkbounty
   
      if EBounty.data.settings[:once_and_done]
        EBounty.silver_deposit
        EBounty.go2_rest
        exit 
      end
      
      if EBounty.data.settings[:basic] 
        EBounty.silver_deposit
        exit
      end
      
      Task.prep 
      
      #Reset waiting flag for hunting
      EBounty.data.wait = true
      
      if Effects::Cooldowns.active?("Next Bounty")
        Hunting.go_hunting
      end
      
      #Lets get a bounty
      Task.bounty_check
             
    end
  
    def self.bounty_get   
      EBounty.msg("debug","bounty_get")
   
      if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF" 
        advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      else
        advguild_id = Room.current.find_nearest_by_tag("advguild")
      end
      
      EBounty.go2(advguild_id)
      
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      res = dothistimeout "ask #{npc} about bounty", 3, Regexp.union(
        /The local gem dealer, .*, has an order to fill and wants our help./,
        /The local furrier .* has an order to fill and wants our help./,
        /It appears they have a .* problem they'd like you to solve./,
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./,
        /The local healer, .*, has asked for our aid./,
        /You have already been assigned a task, \w+./,
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./,
        /Come back in about .* (?:minute|minutes) if you want another task./
        )
      
      sleep 2
      
      Task.bounty_check
    end
    
    def self.bounty_remove(just_remove = false)
      EBounty.msg("debug","Task.bounty_remove")

      EBounty.go2("advguild")
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      until checkbounty =~ /You are not currently assigned a task/
        fput "ask #{npc} about removal"
        EBounty.wait_rt
      end
      
      return if just_remove
          
      if EBounty.data.settings[:use_vouchers] && !Effects::Buffs.active?("Bounty Boost")       
        fput "ask ##{npc.id} about expediting"
        EBounty.wait_rt
      end

      Task.bounty_check
    end
    
    def self.child_found
    
      unless GameObj.npcs.find { |n| n.name =~ /child/i }
        EBounty.msg "error", ' The child needs to be in the same room for ebounty to work.'
        exit
      end
      
      Script.run('echild') 
      sleep 2
      kill_script("go2") if running?("go2")
      
      EBounty.go2(EBounty.data.settings[:resting_room])
      
      Hunting.post_hunt("child")
    
      Task.bounty_check
       
    end
    
    def self.child_bounty(critter, location)
      EBounty.msg("debug","child_bounty | critter: #{critter} location: #{location}")
      
      if (EBounty.data.settings[:creature_exclude].length.positive? && critter.downcase =~ Regexp.union(EBounty.data.settings[:creature_exclude]))
        echo "#{critter} is in the excluded list. Turning in bounty!"
        sleep 2
        Task.bounty_remove
        return
      end  
      
      exit if EBounty.data.settings[:basic]
      
      if EBounty.data.settings[:bounty_types].include?("rescue")
      
        if running? "child-bigshot"
          kill_script ("child-bigshot")
          before_dying { Script.start('child-bigshot') }
        end  
      
        EBounty.data.wait = false
        EBounty.switch_profile(critter, location)

        EBounty.go2(EBounty.data.settings[:resting_room])
        
        Hunting.go_hunting       
        Script.run('echild') 
        sleep 2
        kill_script("go2") if running?("go2")
        
        if Char.prof == "Bard"
          lines = EBounty.get_lines("spell active", /<dialogData id='Active Spells'/)
              
          if lines.any? { |l| l=~ /Song of Peace/ }
            fput "stop 1011"     
          end
        end
        
        EBounty.go2(EBounty.data.settings[:resting_room])
        
        Hunting.post_hunt("child")
        
        Task.bounty_check
      else
        Task.bounty_remove
      end       
    end
        
    def self.creature_culling(critter, location, type)
      EBounty.msg("debug","creature_culling | critter: #{critter} location: #{location} type: #{type}")
      
      if (EBounty.data.settings[:creature_exclude].length.positive? && critter.downcase =~ Regexp.union(EBounty.data.settings[:creature_exclude]))
        echo "#{critter} is in the excluded list. Turning in bounty!"
        sleep 2
        Task.bounty_remove
        return
      end  
    
      if !EBounty.data.settings[:bounty_types].include?("culling") && type == "herd"
        Task.bounty_remove
      elsif !EBounty.data.settings[:bounty_types].include?("boss_culling") && type == "grizzled"
        Task.bounty_remove
      end
    
      EBounty.data.wait = false
      EBounty.switch_profile(critter, location)          
      Hunting.go_hunting       
      Task.bounty_check
     
    end
    
    def self.escort(pickup, dropoff)
      EBounty.msg("debug","escort | pickup: #{pickup} dropoff: #{dropoff}")
      
  
      escort_pickup = {
        "area just inside the Sapphire Gate"                   => "illy",
        "area just inside the North Gate"                      => "landing",
        "south end of North Market"                            => "solhaven",
        "area just north of the South Gate, past the barbican" => "icemule",
        "Kresh'ar Deep monument"                               => "zul",
        "area just inside the Amaranth Gate"                   => "vaalor",
      }
      
      escort_dropoff = {
        "Wehnimer's Landing" => "landing",
        "Icemule Trace"      => "icemule",
        "Zul Logoth"         => "zul",
        "Solhaven"           => "solhaven",
        "Ta'Vaalor"          => "vaalor",
        "Ta'Illistim"        => "illy",
      }
      
      composite = "#{escort_pickup[pickup]}_to_#{escort_dropoff[dropoff]}"
 
      if EBounty.data.settings[:escort_types].include?(composite) && EBounty.data.settings[:bounty_types].include?("escort")
        #Fixme - script checks needed
        exit if EBounty.data.settings[:basic]
        
        Hunting.pre_hunt("escort")
        
        Script.run('ego2')
        sleep 2
        
        EBounty.go2(EBounty.data.settings[:resting_room])
        
        Hunting.post_hunt("escort")
        
        Task.bounty_check
      else
        Task.bounty_remove
      end       

    end
    
    def self.forage_ask
      EBounty.msg("debug","forage_ask")
      
      if EBounty.data.settings[:bounty_types].include?("foraging")    
        herbalist_rooms = EBounty.data.herbalist_rooms.dup
        previous, shortest_distances = Room.current.dijkstra 
        herbalist_rooms.delete_if { |room_id| shortest_distances[room_id].nil? }
        herbalist_rooms = herbalist_rooms.sort { |a,b| shortest_distances[a] <=> shortest_distances[b] }
       
        room = herbalist_rooms.first
       
        EBounty.go2(room)       
        if Room.current.uid == [14103400]
          herbalist = "maraene"
        else
          #herbalist = GameObj.npcs.first.noun
          herbalist = GameObj.npcs.find { |t| t.name =~ /alchemist|brother Barnstel|scarred Agarnil kris|healer|herbalist|merchant Kelph|famed baker Leaftoe|Akrash|old Mistress Lomara|Libram Greenleaf|Sparkfinger/i }.noun
        end     
        dothistimeout("ask #{herbalist} about bounty", 5, /Yes, I do have a task for you/)
        exit if EBounty.data.settings[:basic]
        sleep 2       
      else
        Task.bounty_remove
      end    
    end
    
    def self.forage_find(herb,quantity,location)
    
      herb = 'ayana leaf' if herb =~ /ayana (weed|lichen|berry|root)/
      herb = "ayana'al leaf" if herb =~ /ayana'al (weed|lichen|berry|root)/
      
      herb_alt = herb.gsub(/^some /, "")
      herb_fix = EBounty.fix_name(herb_alt)
   
      #Grab all the rooms that mostly match. 
      location_list = []
      Room.list.find_all do |r|
        if r.tags.any? { |tag| (tag.end_with? herb) || ((herb.start_with? tag) && herb =~ /ayana/) || (herb.end_with? tag) }
          location_list.push(r.id)
        end
      end
      
      #Reject the rooms with herbs that don't match      
      location_list = location_list.reject{ |room|
         !Room[room].tags.any?{ |tag| tag =~ /#{herb}|#{herb_alt}|#{herb_fix}/ }      
      }
      
      #This is for CLI herb foraging
      #;ebounty forage "<type of herb>" <number to find>  for example ;ebounty forage "some acantha leaf" 3
      if location == "nearest"
             
        previous, shortest_distances = Room.current.dijkstra 
        location_list.delete_if { |room_id| shortest_distances[room_id].nil? }
        location_list = location_list.sort { |a,b| shortest_distances[a] <=> shortest_distances[b] }
 
        location_list = location_list.first(10)
 
        location_list.each{ |room|  
          if Room.current.path_to(room) == nil  
            location_list.delete(room)
          else
            travel = Map.estimate_time(Room.current.path_to(room))  
            location_list.delete(room) if travel.to_i > 90
          end         
        }   

        return location_list
        
      end
      
      #Reject the locations that don't match      
      location_list = location_list.reject{ |room|
        Room[room].location !~ /#{location}/      
      }
      
      previous, shortest_distances = Room.current.dijkstra 
      location_list.delete_if { |room_id| shortest_distances[room_id].nil? }
      location_list = location_list.sort { |a,b| shortest_distances[a] <=> shortest_distances[b] }
      
      location_list.each{ |room|           
        travel = Map.estimate_time(Room.current.path_to(room))  
        location_list.delete(room) if travel.to_i > 90                 
      }   
      
      return location_list
  
    end
    
    def self.forage_bounty(herb,quantity,location = "nearest")
      EBounty.msg("debug","forage_bounty: herb - #{herb} location - #{location} quantity - #{quantity}")
      creatures = []
     
      current_room = Room.current.id
      
      #Anything to turn in before?
      Task.bounty_check if Task.forage_turnin(herb) && location != "nearest"
      
      location_list = Task.forage_find(herb,quantity,location)
  
      unless location_list.length.positive?
        echo "No #{herb} found at #{location}" if location != "nearest"
        echo "No #{herb} found" if location == "nearest"
        exit
      end
      #Make sure we are searching for the right thing
      herb = herb.gsub(/^some /, "")
      forage_item = EBounty.fix_name(herb)
      
      Hunting.pre_hunt("forage")
      
      EBounty.wait_rt
      fput "stance defensive" unless stance =~ /defensive|guarded/ 

      location_list.each { |room|
        
        EBounty.go2(room)
            
        unless checkpcs || (!GameObj.targets.empty? && EBounty.data.settings[:forage_options].include?("run"))
        
          if Char.prof =~ /Cleric|Empath/i && EBounty.data.settings[:forage_options].include?("use_213")
            lines = EBounty.get_lines("sense", /You open your soul to the lesser/)
            unless lines.any? { |l| l =~ /An obvious presence of peace saturates the area and a feeling of safety overwhelms you/ }
              Spell[213].cast if Spell[213].known? && Spell[213].affordable?
            end
          end
  
          loop {
            
            lines = EBounty.get_lines("spell active", /<dialogData id='Active Spells'/)
            
            unless EBounty.data.settings[:forage_options].include?("use_1011") && lines.any? { |l| l=~ /Song of Peace/ }
              Spell[1011].cast if Spell[1011].known? && Spell[1011].affordable?         
            end
            
            if EBounty.data.settings[:forage_options].include?("use_709") && !GameObj.targets.any? { |c| c.name =~ /arm/} && !GameObj.targets.empty?
              Spell[709].cast if Spell[709].known? && Spell[709].affordable?       
            end
            
            #Cast any helper spells before kneeling
            Spell[604].cast if Spell[604].known? && Spell[604].affordable? && !Effects::Spells.active?("Nature's Touch") && EBounty.data.settings[:forage_options].include?("use_604")
            Spell[506].cast if Spell[506].known? && Spell[506].affordable? && !Effects::Buffs.active?("Celerity") && !Effects::Cooldowns.active?("Celerity") && EBounty.data.settings[:forage_options].include?("use_506")
            Spell[919].cast if Spell[919].known? && Spell[919].affordable? && !Effects::Buffs.active?("Wizard's Shield") && !Effects::Cooldowns.active?("Wizard's Shield") && EBounty.data.settings[:forage_options].include?("use_919")
            Spell[140].cast if Spell[140].known? && Spell[140].affordable? && !Effects::Buffs.active?("Wall of Force") && !Effects::Cooldowns.active?("Wall of Force") && EBounty.data.settings[:forage_options].include?("use_140")
            Spell[1035].cast if Spell[1035].known? && Spell[1035].affordable? && !Effects::Buffs.active?("Song of Tonis") && EBounty.data.settings[:forage_options].include?("use_1035")
                     
            
            if !GameObj.targets.empty? && EBounty.data.settings[:forage_options].include?("use_619")
              targets = GameObj.targets.reject {|w| creatures.any?{ |c| c.id == w.id}}
              Spell[619].cast if Spell[619].known? && Spell[619].affordable? && targets.length.positive?
              creatures.concat(targets)  
              sleep 0.5
              waitcastrt?
            end
            
            until kneeling?
              fput 'kneel'
              sleep 0.2
            end
   
            empty_hands if checkleft || checkright
            
            if EBounty.data.settings[:forage_options].include?("use_650")
              if Spell[650].known? && Spell[650].affordable? && !Spell[650].active? && !Spell[9039].active?
                Spell[650].cast
                sleep 1
                waitcastrt?
                fput "assume yierka"
              elsif Spell[650].active? && !Spell[9039].active?
                waitcastrt?
                fput "assume yierka"
              end
            end

            if (EBounty.data.settings[:forage_options].include?("hiding") && !EBounty.data.settings[:forage_options].include?("use_608")) || EBounty.data.settings[:forage_options].include?("use_gambit")
              fput "hide" unless hidden?
            elsif EBounty.data.settings[:forage_options].include?("use_608")
              Spell[608].cast if Spell[608].known? && Spell[608].affordable? && !hidden?
            end

            forage_result = dothistimeout "forage for #{forage_item}", 2, EBounty.data.forage_result
            EBounty.wait_rt
            if forage_result =~ /^You forage briefly and manage to find/
              item = [ GameObj.right_hand, GameObj.left_hand ].find { |i| i.noun != nil}  
              
              if EBounty.data.gambits_available              
                5.times{
                  fput "rgambit stealth put my #{item} in my #{EBounty.data.sacks["default"]}"
                  EBounty.wait_rt
                  break if (![GameObj.right_hand, GameObj.left_hand].map(&:id).compact.include?(item.id) && EBounty.data.sacks["default"].contents.to_a.map(&:id).include?(item.id))                 
                }
              end
              fput "stow left" if checkleft
              fput "stow right" if checkright
 
              break if EBounty.data.sacks["default"].contents.find_all { |i| i.name =~ /#{forage_item}/ }.length >= quantity.to_i
              
            elsif forage_result =~ EBounty.data.forage_injury
              EBounty.wait_rt
              Spell[114].cast if Spell[114].known? and Spell[114].affordable?       
            elsif forage_result.nil?  or (forage_result =~ /^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for(?: right now, though you are fairly certain this is where it can be found)?\./)
              break
            elsif forage_result =~ /^As you forage around, you notice that someone has been foraging here recently and you are unable to find anything useful\./
              unless Effects::Cooldowns.active?("Nature's Bounty Foraging") || Skills.slblessings < 15 || !Spell[604].affordable? || !Spell[604].known? || !EBounty.data.settings[:forage_options].include?("use_604evoke")
                Spell[604].force_evoke
                next
              end
              break
            end
            
            if XMLData.injuries.any? { |a,h| h['wound'] > 1 || h['scar'] > 1 } || percenthealth < 70 
              return_room = Room.current.id
              EBounty.go2_rest
              Task.prep
              EBounty.go2(return_room)
            end
            
            break if (!GameObj.targets.empty? && EBounty.data.settings[:forage_options].include?("run"))
            
          }
                  
          fput 'stand' until standing?
          
          fill_hands
          
          if Char.prof =~ /Cleric|Empath/i && EBounty.data.settings[:forage_options].include?("use_213")
            lines = EBounty.get_lines("sense", /You open your soul to the lesser/)
            if lines.any? { |l| l =~ /An obvious presence of peace saturates the area and a feeling of safety overwhelms you/ }
              fput "stop 213"
            end
          end
                 
          break if EBounty.data.sacks["default"].contents.find_all { |i| i.name =~ /#{forage_item}/ }.length >= quantity.to_i
          
        end
      }
      
      lines = EBounty.get_lines("spell active", /<dialogData id='Active Spells'/)
            
      if EBounty.data.settings[:forage_options].include?("use_1011") && lines.any? { |l| l=~ /Song of Peace/ }
        fput "stop 1011"     
      end
             
      if location != "nearest"
        Task.forage_return
        Task.bounty_check
      else
        EBounty.go2(current_room)
      end
       
    end
    
    def self.forage_turnin(herb)
    
      #Only turn in if we are close. If out in the field its a waste of time
      room = Room[EBounty.data.settings[:resting_room]].find_nearest(EBounty.data.herbalist_rooms)
      previous_var, shortest_distances_var = Room.current.dijkstra
      if shortest_distances_var[room] > 1
        return false
      end
    
      herb = herb.gsub(/^some /, "")
      
      EBounty.open_container(EBounty.data.sacks["default"])
      herbs = EBounty.data.sacks["default"].contents.find_all { |i| i.name.end_with? herb || (herb.start_with? i.name && herb =~ /ayana/) }
      
      if herbs.length.positive?
      
        room = Room[EBounty.data.settings[:resting_room]].find_nearest(EBounty.data.herbalist_rooms)
        EBounty.go2(room)
        
        if Room.current.id == 10396
          herbalist = "maraene"
        else      
          herbalist = GameObj.npcs.find { |t| t.name =~ /alchemist|brother Barnstel|scarred Agarnil kris|healer|herbalist|merchant Kelph|famed baker Leaftoe|Akrash|old Mistress Lomara|Libram Greenleaf|Sparkfinger/i }.noun
        end
        
        empty_hands
        
        original_checkbounty = checkbounty
        herbs.each do |h|
          original_checkbounty = checkbounty
      
          EBounty.get_res("_drag ##{h.id} right", EBounty.data.get_regex) 
          res = EBounty.get_res("give ##{h.id} to #{herbalist}", /This looks perfect|That looks like it has been partially used up/) 
 
          #Fixme - check if hand empty before stowing
          if res !~ /perfect/
            fput "stow ##{h.id}"
          end
        end
              
        fill_hands
        
        end_wait = Time.now + 3
        sleep 0.2 until checkbounty != original_checkbounty || Time.now > end_wait
        
        return true
      
      end
           
      return false
       
    end
    
    def self.forage_return(recover_room: true)
      EBounty.msg("debug","forage_return")
    
      EBounty.fog
    
      EBounty.go2(EBounty.data.settings[:resting_room])
         
      if checkbounty =~ /The.*is working on a concoction that requires (?:a|an|some) (.*) found/     
        herb = $1
      end
      
      herb = herb.gsub(/^some /, "")
      
      EBounty.open_container(EBounty.data.sacks["default"])
      herbs = EBounty.data.sacks["default"].contents.find_all { |i| i.name.end_with? herb || (herb.start_with? i.name && herb =~ /ayana/) }
      
      if herbs.length.positive?
      
        room = Room[EBounty.data.settings[:resting_room]].find_nearest(EBounty.data.herbalist_rooms)
        EBounty.go2(room)
        
        if Room.current.id == 10396
          herbalist = "maraene"
        else      
          herbalist = GameObj.npcs.find { |t| t.name =~ /alchemist|brother Barnstel|scarred Agarnil kris|healer|herbalist|merchant Kelph|famed baker Leaftoe|Akrash|old Mistress Lomara|Libram Greenleaf|Sparkfinger/i }.noun
        end
        
        empty_hands
        
        original_checkbounty = checkbounty
        herbs.each do |h|
          original_checkbounty = checkbounty
      
          EBounty.get_res("_drag ##{h.id} right", EBounty.data.get_regex) 
          res = EBounty.get_res("give ##{h.id} to #{herbalist}", /This looks perfect|That looks like it has been partially used up/) 
 
          #Fixme - check if hand empty before stowing
          if res !~ /perfect/
            fput "stow ##{h.id}"
          end
        end
        
        end_wait = Time.now + 3
        sleep 0.2 until checkbounty != original_checkbounty || Time.now > end_wait
      
      end
      
      fill_hands
      
      Hunting.post_hunt("forage")
      
      if checkbounty =~ /The.*is working on a concoction that requires (?:a|an|some) (.*) found/ && recover_room
        EBounty.go2_rest
        EBounty.msg("yellow"," Didn't finish foraging task. Sleeping 3 minutes to let the room recover")
        sleep 180
      end
    
    end
    
    def self.gem_ask
      EBounty.msg("debug","gem_ask")
      
      if EBounty.data.settings[:bounty_types].include?("gem_collecting")       
        EBounty.go2("gemshop")
        if Room.current.id == 10327
          npc = "areacne"
        else
          npc = GameObj.npcs.find { |t| t.name =~ /dwarven clerk|gem dealer|jeweler|Zirconia|Brindlestoat/i }.noun
        end
        dothistimeout("ask #{npc} about bounty", 5, /Yes, I do have a task for you/)
        exit if EBounty.data.settings[:basic]
        sleep 2
      else
        Task.bounty_remove
      end       
    end
    
    def self.gem_bounty(kind = nil, amount = nil)
      EBounty.msg("debug","gem_bounty")
      #Fixme:  use gem hording
      #Fixme: need time limit
     
      EBounty.data.remaining_gems = amount.to_i
      EBounty.data.gem = kind.gsub(/^a/, "")
      EBounty.data.wait = false
     
      #Lets check if we have enough gems to turn in already
      count = 0
      EBounty.data.containers.each{|container|
        EBounty.open_container(container)
        container.contents.each{ |item|   
          if item.name =~ /#{EBounty.data.gem}/
            count += 1
          end
        }
      } 
     
      if count >= EBounty.data.remaining_gems
        Task.prep
      else    
        profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
        UserVars.op = YAML.load_file(profile)
        Hunting.go_hunting
      end
      
      Task.bounty_check
     
    end
    
    def self.heirloom_bounty(item = nil, critter = nil, location = nil, type = nil)      
      EBounty.msg("debug","heirloom_bounty | item: #{item} | critter: #{critter} | location: #{location} | type: #{type}")
      
      if type =~ /loot/i && !EBounty.data.settings[:bounty_types].include?("heirloom_loot")
        Task.bounty_remove
      elsif type =~ /search/i && !EBounty.data.settings[:bounty_types].include?("heirloom_search")
        Task.bounty_remove
      end
 
      if (EBounty.data.settings[:creature_exclude].length.positive? && critter.downcase =~ Regexp.union(EBounty.data.settings[:creature_exclude]))
        echo "#{critter} is in the excluded list. Turning in bounty!"
        sleep 2
        Task.bounty_remove
        return
      end  
      
      if type =~ /loot/i && EBounty.data.settings[:bounty_types].include?("heirloom_loot")
        EBounty.data.wait = false
        EBounty.switch_profile(critter, location)      
        Hunting.go_hunting       
        Task.bounty_check
      end
        
      if type =~ /search/i && EBounty.data.settings[:bounty_types].include?("heirloom_search")
        Task.heirloom_search(critter,location,item)
      end
      
    end
      
    def self.heirloom_search(critter,location,item) 
      
      creatures = []
    
      EBounty.switch_profile(critter,location) 
 
      Hunting.pre_hunt("heirloom")
           
      EBounty.go2(UserVars.op['hunting_room_id'])      
      wander_rooms ||= Array.new
      
      #fixme: need to support uid
      boundaries = UserVars.op['hunting_boundaries'].split(",")
      
      wander = proc {
        room = Room.current
        next_room_options = room.wayto.keys - boundaries
        next_room_options.delete_if { |room_id| (room.timeto[room_id].class == Proc) and room.timeto[room_id].call.nil? }
        next_room = next_room_options.find_all { |r| not wander_rooms.include?(r) }
        if next_room.empty?
          next_room = wander_rooms.find { |r| next_room_options.include?(r) }
        else
          next_room = next_room[rand(next_room.length)]
        end
        wander_rooms.delete(next_room)
        wander_rooms.push(next_room)
        way = room.wayto[next_room]
        if way.class == String 
          move(way)
        else
          way.call
        end
      }
      
      fput "stance defensive"
      
      loop{       
        unless !GameObj.targets.empty? && EBounty.data.settings[:heirloom_options].include?("run")
        
          if Char.prof =~ /Cleric|Empath/i && EBounty.data.settings[:heirloom_options].include?("use_213")
            lines = EBounty.get_lines("sense", /You open your soul to the lesser/)
            unless lines.any? { |l| l =~ /An obvious presence of peace saturates the area and a feeling of safety overwhelms you/ }
              Spell[213].cast if Spell[213].known? && Spell[213].affordable?
            end
          end
              
          lines = EBounty.get_lines("spell active", /<dialogData id='Active Spells'/)
            
          unless EBounty.data.settings[:heirloom_options].include?("use_1011") && lines.any? { |l| l=~ /Song of Peace/ }
            Spell[1011].cast if Spell[1011].known? && Spell[1011].affordable?         
          end
          
          if EBounty.data.settings[:heirloom_options].include?("use_709") && !GameObj.targets.any? { |c| c.name =~ /arm/} && !GameObj.targets.empty?
            Spell[709].cast if Spell[709].known? && Spell[709].affordable?       
          end
          
          #Cast any helper spells before kneeling
          Spell[402].cast if Spell[402].known? && Spell[402].affordable? && !Effects::Buffs.active?("Presence") && EBounty.data.settings[:heirloom_options].include?("use_402")
          Spell[506].cast if Spell[506].known? && Spell[506].affordable? && !Effects::Buffs.active?("Celerity") && !Effects::Cooldowns.active?("Celerity") && EBounty.data.settings[:heirloom_options].include?("use_506")
          Spell[919].cast if Spell[919].known? && Spell[919].affordable? && !Effects::Buffs.active?("Wizard's Shield") && !Effects::Cooldowns.active?("Wizard's Shield") && EBounty.data.settings[:heirloom_options].include?("use_919")
          Spell[140].cast if Spell[140].known? && Spell[140].affordable? && !Effects::Buffs.active?("Wall of Force") && !Effects::Cooldowns.active?("Wall of Force") && EBounty.data.settings[:heirloom_options].include?("use_140")
          Spell[1035].cast if Spell[1035].known? && Spell[1035].affordable? && !Effects::Buffs.active?("Song of Tonis") && EBounty.data.settings[:heirloom_options].include?("use_1035")

          if !GameObj.targets.empty? && EBounty.data.settings[:heirloom_options].include?("use_619")
            targets = GameObj.targets.reject {|w| creatures.any?{ |c| c.id == w.id}}
            Spell[619].cast if Spell[619].known? && Spell[619].affordable? && targets.length.positive?
            creatures.concat(targets)  
            sleep 0.5
            waitcastrt?
          end
          
          until kneeling?
            fput 'kneel'
            sleep 0.2
          end
                 
          empty_hands if checkleft || checkright
          
          fput "search"
          EBounty.wait_rt
          
          fput "stand" until standing?            
          EBounty.wait_rt      
          
          heirloom = GameObj.loot.find{ |obj| obj.name =~ /#{item}/}
          
          if heirloom
            EBounty.get_res("_drag ##{heirloom.id} right", EBounty.data.get_regex)
            EBounty.get_res("stow ##{heirloom.id}", EBounty.data.put_regex)
          end
          
          if GameObj.loot.length.positive?        
            seller = EBounty.data.settings[:selling_script]
            
            if seller.to_s.empty?
              Script.run('eloot')
            else
              Script.run(EBounty.data.settings[:selling_script])
            end 
          end
            
          fill_hands
        end
        
        if Char.prof =~ /Cleric|Empath/i && EBounty.data.settings[:forage_options].include?("use_213")
          lines = EBounty.get_lines("sense", /You open your soul to the lesser/)
          if lines.any? { |l| l =~ /An obvious presence of peace saturates the area and a feeling of safety overwhelms you/ }
            fput "stop 213"
          end
        end
        
        break if checkbounty =~ /You have located/
             
        wander.call
        
      }
    
      lines = EBounty.get_lines("spell active", /<dialogData id='Active Spells'/)
            
      if EBounty.data.settings[:heirloom_options].include?("use_1011") && lines.any? { |l| l=~ /Song of Peace/ }
        fput "stop 1011"     
      end
    
      EBounty.go2(EBounty.data.settings[:resting_room])
      
      Hunting.post_hunt("heirloom")
    
      Task.bounty_check
      
    end
    
    def self.skin_ask
      EBounty.msg("debug","skin_ask")
      
      if EBounty.data.settings[:bounty_types].include?("skinning")     
        EBounty.go2("furrier")    
        npc = GameObj.npcs.find { |t| t.name =~ /dwarven clerk|furrier|Delosa|Bramblefist/i }    
        dothistimeout("ask #{npc} about bounty", 5, /Yes, I do have a task for you/)
        sleep 2
        Task.bounty_check
      else
        Task.bounty_remove
      end       
    end
    
    def self.skin_bounty(critter,skin,quantity)
      EBounty.msg("debug","skin_bounty")
              
      EBounty.data.wait = false
            
      EBounty.data.bundle_skin = skin.match(/(\w+)\s+(\w+)\s*\Z/)
               
      skin = skin.strip.downcase.
      gsub(/s$/, "").
      gsub(/teeth/, "tooth").
      gsub(/hooves?/, "hoof").
      gsub(/ruffs?/, "ruff")
              
      EBounty.data.remaining_skins = quantity.to_i + EBounty.data.settings[:extra_skin].to_i
      EBounty.data.skin = skin
              
      #Lets check if we have enough skins to turn in already
      count = 0
      EBounty.data.containers.each{|container|
        EBounty.open_container(container)
        container.contents.each{ |item|   
          if item.name =~ /bundle of #{EBounty.data.bundle_skin}/
            lines = Lich::Util.quiet_command_xml("measure ##{item.id}", /You glance through/)
            count += $1.to_i if lines.any?{ |l| l=~ /count a total of (\d+) <a exist/}
          elsif item.name =~ /#{EBounty.data.skin}/
            count += 1
          end
        }
      } 
      
      if count >= EBounty.data.remaining_skins
        Task.prep
      else
        EBounty.switch_profile(critter)
        Hunting.go_hunting
      end
      
      Task.bounty_check
     
    end
   
    def self.task_failed
      EBounty.msg("debug","task_failed")
            
      advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      EBounty.go2(advguild_id)
      
      #Turn in the bounty - Fixme: dothistimeout
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      fput "ask #{npc} about bounty"
      sleep 3
      
      #Lets get a bounty
      Task.bounty_check
      
    end
  
    def self.prep
      EBounty.msg("debug","Task.prep")
      #lets make sure we are healed up - Need support for empaths 
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
         
      #Sell stuff
      if EBounty.data.sacks["default"].contents.any? { |item| !item.sellable.nil? || item.type =~ /box/} || EBounty.silver_check.positive? 
        start_room = Room.current.id
        EBounty.go2(EBounty.data.settings[:resting_room])
        
        seller = EBounty.data.settings[:selling_script]
        if seller.to_s.empty?
          Script.run('eloot', 'sell')
        else
          Script.run(seller, 'sell')
        end
        
        EBounty.silver_deposit
        
        EBounty.go2(start_room)
        
      end
    
    end
  
    def self.wait_for_bounty()
      EBounty.msg("debug","wait_for_bounty")
  
      exit if EBounty.data.settings[:basic]
      
      profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
      UserVars.op = YAML.load_file(profile)
      EBounty.data.wait = true
      
      if Task.check_boost && !Effects::Buffs.active?("Bounty Boost")
        fput "boost bounty"
        sleep 4
      elsif Effects::Buffs.active?("Bounty Boost")
        sleep 4
      elsif !Effects::Buffs.active?("Bounty Boost")
        Hunting.go_hunting      
      end
      
      Task.bounty_check
    end
 
  end

end

EBounty.version_check

if script.vars.any? { |var| var =~ /^--debug=(on|off|true|false|yes|no)$/i }
  fix_option = { 'on' => true, 'true' => true, 'yes' => true, 'off' => false, 'false' => false, 'no' => false }
  EBounty.load(EBounty.load_profile()) unless EBounty.data
  EBounty::Setup.update_setting(:debug, fix_option[$1])
  EBounty.data.settings[:debug] = fix_option[$1]
  EBounty.save_profile()
  exit
end

if script.vars[1] =~ /ver/i
  echo "   EBounty Version: #{EBounty::EBounty_version}"
  exit
end


# Initialize default settings
unless EBounty.data
  EBounty.load(EBounty.load_profile())
end

unless EBounty.data.settings[:basic]
  required_scripts = %w(bigshot)
  required_scripts.push("eherbs") if EBounty.data.settings[:healing_script].to_s.empty?
  required_scripts.push("eloot")  if EBounty.data.settings[:selling_script].to_s.empty?
  required_scripts.push("echild") if EBounty.data.settings[:bounty_types].include?("rescue")
  required_scripts.push("ego2")   if EBounty.data.settings[:bounty_types].include?("escort")
  required_scripts_missing = required_scripts.select { |s| !Script.exists?(s) }
  if required_scripts_missing.count > 0
    echo("You must also download the following script#{required_scripts_missing.count > 1 ? 's' : ''} to use ebounty:  " + required_scripts_missing.join(', '))
    exit
  end
end




# Default to running bounties
if script.vars[1].nil?

  if Room.current.id.nil?   
    EBounty.msg "error", 'Please start ebounty in mapped room.'
    exit   
  else
    EBounty.data.start_room = Room.current.id
  end

  current_settings = UserVars.op
  EBounty.deadmans_switch
  EBounty.set_variables
  
  kill_scripts = ["go2", "echild", "ego2", "bigshot"]
    
  kill_scripts.each{ |script|
    kill_script(script) if running?(script)   
  }
  
  before_dying { 
    UserVars.op = current_settings
    EBounty.go2(EBounty.data.start_room) if EBounty.data.settings[:basic]
    
    kill_scripts.each{ |script|
      kill_script(script) if running?(script)   
    }

    #Close any containers we had to open
    EBounty.data.close_containers.each{ |bag|
      close_regex = /You close .*|That is already closed|What were you referring to|seem to be any way to do that|You tie|You fold the/      
      EBounty.get_lines("close ##{bag.id}", close_regex)    
    }   
  }
  
  EBounty.bounty_check
  
  exit
end


case script.vars[1]
when 'help'
  #Fixme
  #EBounty.help
when 'list'
  EBounty::Setup.new(EBounty.data.settings).list 
when 'settings'
  if Script.current.vars[2]
    EBounty.update_setting(script.vars[2..-1])
  else
    EBounty::Setup.new(EBounty.data.settings).start
    EBounty.load(EBounty.load_profile())
    EBounty.set_variables
  end
when 'setup'
  EBounty::Setup.new(EBounty.data.settings).start
  EBounty.load(EBounty.load_profile())
  EBounty.set_variables
when 'load'
  EBounty.load(EBounty.load_profile)
  EBounty.set_variables
when 'remove'
  if Room.current.id.nil?   
    EBounty.msg "error", 'Please start ebounty in mapped room.'
    exit   
  else
    EBounty.data.start_room = Room.current.id
  end
  EBounty::Task.bounty_remove(true)
  EBounty.go2(EBounty.data.start_room)
when 'forage'
  if script.vars[2].nil? || script.vars[3].nil?
    EBounty.msg "error", ' Proper syntax: ;ebounty forage "herb to find" <how many>'
    exit
  end
  return_room = Room.current.id
  EBounty::Task.forage_bounty(script.vars[2],script.vars[3].to_i)
  EBounty.go2(return_room)
when 'test'
  EBounty.test
end




