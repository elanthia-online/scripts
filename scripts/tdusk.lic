=begin
    Duskruin Arena Script
    Automatic Duskruin arena script that will fight for you. Just go into the entrance
    and the script will take over (as long as you were running it before going in).

    SYNTAX - ;tdusk <SLIP/TOKEN/BOOKLET/JAR/VOUCHER>

    See ;tdusk help
    For additional setup/help info.

    https://github.com/elanthia-online/scripts

       todo: unsure
     author: Tysong (horibu on PC), original Nylis
       name: tdusk
       tags: duskruin, arena, dusk ruin, tdusk
    version: 1.23.10

    changelog:
        1.23.10 (2023-02-15)
            Move turning enhancives off to before pausing between runs due to race condition of not being out of combat
        1.23.9 (2022-02-14)
            Now attempts to go into arena if failed due to whatever reason. Random 30-60secs
        1.23.8 (2022-02-13)
            Fix for packages not being given due to xp/bloodscript bonus option.
        1.23.7 (2021-02-17)
            Added toggletdusk command to toggle pause_me settings from true<->false
        1.23.6 (2021-02-17)
            Another fix for bigshot activating in error if hardcoded routine
        1.23.5 (2021-02-16)
            Additional code cleanup
        1.23.4 (2021-02-14)
            Separate bard and regular node to not conflict
            Additional code cleanup due to using UserVars
        1.23.3 (2021-02-14)
            Fix for hardcoded routines to not switch over to bigshot
        1.23.2 (2021-02-14)
            Added opener variables for 515/240/909
            Added girdstore variable to disable automatic GIRD/STORE of equipment
            Code cleanup
        1.23.1 (2021-02-14)
            Added new variable node to enable/disable 418 casting
        1.23.0 (2021-02-13)
            Added new variable maxvitals to pause till max vitals between runs.
        1.22.3 (2021-02-13)
            Change 909 evoke to channel
        1.22.2 (2021-02-13)
            Fix for bigshot users after previous update
        1.22.1 (2021-02-12)
            Code optimization and better handling of custom duskattack.lic/bigshot in groups
        1.21 (2020-08-19)
            Fix for crashing if you don't automatically start LNet/0Net on login.
        1.20 (2020-08-19)
            Update to address "Stupes' Law" force killing of duskattack scripts if still running at end of arena
        1.19 (2020-08-16)
            bigshot cleaner fix, oops
        1.18 (2020-08-16)
            Slight update for attacksript/bigshot users to not get stuck and better optimize round checking/finish for them.
            Change GameObj.npcs references to GameObj.targets

    credit & thanks:
        Nylis for his initial script released back in 2015.
=end

if Script.running?("0net")
    lnet_or_0net = "0net"
else
    lnet_or_0net = "lnet"
end

UserVars.tdusk                ||= {}
UserVars.tdusk[:activescripts]  = ['stand'] if UserVars.tdusk[:activescripts].nil?
UserVars.tdusk[:waggle_me]      = true      if UserVars.tdusk[:waggle_me].nil?
UserVars.tdusk[:pause_me]       = true      if UserVars.tdusk[:pause_me].nil?
UserVars.tdusk[:enhancive_me]   = false     if UserVars.tdusk[:enhancive_me].nil?
UserVars.tdusk[:high_ds]        = false     if UserVars.tdusk[:high_ds].nil?
UserVars.tdusk[:attack_script]  = false     if UserVars.tdusk[:attack_script].nil?
UserVars.tdusk[:broadcast]      = true      if UserVars.tdusk[:broadcast].nil?
UserVars.tdusk[:lootpackage]    = true      if UserVars.tdusk[:lootpackage].nil?
UserVars.tdusk[:open_lootsack]  = false     if UserVars.tdusk[:open_lootsack].nil?
UserVars.tdusk[:maxvitals]      = false     if UserVars.tdusk[:maxvitals].nil?
UserVars.tdusk[:bardnode]       = true      if UserVars.tdusk[:bardnode].nil?
UserVars.tdusk[:node]           = true      if UserVars.tdusk[:node].nil?
UserVars.tdusk[:opener515]      = false     if UserVars.tdusk[:opener515].nil?
UserVars.tdusk[:opener909]      = false     if UserVars.tdusk[:opener909].nil?
UserVars.tdusk[:opener240]      = false     if UserVars.tdusk[:opener240].nil?
UserVars.tdusk[:girdstore]      = true      if UserVars.tdusk[:girdstore].nil?
UserVars.tdusk[:reentry]        = true      if UserVars.tdusk[:reentry].nil?
UserVars.tdusk[:using_bigshot]  = false

UserVars.tdusk[:activescripts].delete("duskruin_watch") if UserVars.tdusk[:activescripts].include?("duskruin_watch")

if UserVars.tdusk[:attack_script] == true && !Script.exists?("#{Char.name}-duskattack")
    echo "You have a custom attack script turned on."
    echo "But you attack_script turned on."
    echo "Please create a #{Char.name}-duskattack.lic script with your routine."
    echo "Or set ;e UserVars.tdusk[:attack_script] = false"
    exit
end

start_time = 0
total_time = 0
kill_time  = 0
avg_reg    = 0
avg_champ  = 0
group_size = 0
UserVars.tdusk[:wave_number] = 0
UserVars.tdusk[:high_ds] = false

if $frontend =~ /stormfront|profanity/i
    fam_window_begin = "<pushStream id=\"familiar\" ifClosedStyle=\"watching\"/>"
    fam_window_end   = "<popStream/>\r\n"
else
    fam_window_begin = "\034GSe\r\n"
    fam_window_end   = "\034GSf\r\n"
end

def attack()
    if UserVars.tdusk[:attack_script] == true
        Script.kill("#{Char.name}-duskattack") if Script.running?("#{Char.name}-duskattack")
        sleep 0.1 until ( !Script.running?("#{Char.name}-duskattack") )
        Script.start("#{Char.name}-duskattack")
        return
    end

    while GameObj.targets.any? {|npc| npc.status !~ /dead|gone/} && UserVars.tdusk[:using_bigshot] == false
        GameObj.targets
        .reject {|foe| foe.status =~ /dead|gone/ }
        .sample
        .tap { |npc|
        
        put "target ##{npc.id}" if npc.status !~ /dead|gone/ && UserVars.tdusk[:attack_script] == false
        
        #Wizard Routine for Treeva & Tysong
        if npc.status !~ /dead|gone/ && Char.name =~ /Treeva|Tysong|Sabotage|Lesorrel|Cabal|Melenie/
            fput "symbol of sleep" if Society.status == "Order of Voln" && (GameObj.targets.count > 1 || GameObj.pcs.nil?) && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name !~ /crimson|fire/ && npc.status !~ /dead|gone/ && GameObj.pcs.nil? && Room.current.id == 24550
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && GameObj.pcs.nil? && Room.current.id == 24550
            if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25)
                pause 0.1
                waitrt? if npc.status !~ /dead|gone/
                waitcastrt? if npc.status !~ /dead|gone/
                Spell[950].cast('910 910 910 910 910 910') if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25) && Room.current.id == 24550
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    fput "incant 515"
                end
                if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903 cast"
                    fput "stance defensive"
                end
                if Spell[903].affordable? && !(npc.name =~ /crimson|fire|troll/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903 evoke"
                    fput "stance defensive"
                end
                if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.name =~ /troll/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 906"
                    fput "stance defensive"
                end
                pause 0.1
            end
            Script.start("foreach", "n=/^((?!arrow|pill).)*$/ in room; look item") if UserVars.tdusk[:wave_number] != 25 && !GameObj.loot.nil?
            Script.start("foreach", "n=/^((?!arrow|pill).)*$/ in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25 && !GameObj.loot.nil?

        #Sorcerer Routine for Rasko
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Rasko|Roiken|Hammibal|Ushakaron/
            if npc.name !~ /automaton/ && npc.status !~ /dead|gone/ && GameObj.npcs && Room.current.id == 24550
                waitrt?
                waitcastrt?
                Spell[9918].cast if (!(Spell[717].affordable?) && checkspirit >= 6 )
                waitrt?
                waitcastrt?
                fput "incant 717" if (Spell[717].affordable?)
            end
            pause 0.1
            while (npc.status !~ /dead|gone/ && GameObj.npcs && Room.current.id == 24550) do
                fput "sign of wracking" if (checkmana < 20 && checkspirit >= 6 )
                multifput "incant 711" if Spell[711].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0
                pause 0.1
            end
            Script.start("foreach", "in room; look item") if UserVars.tdusk[:wave_number] != 25 && !GameObj.loot.nil?
            Script.start("foreach", "in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25 && !GameObj.loot.nil?

        #Bard Routine for Yakushi
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Yakushi/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 1030 open" if (Spell[1030].affordable?) && (Array[1,3,5,7,9,10,13,15,17,19,20,23,25].include? UserVars.tdusk[:wave_number]) && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "stance offensive" if stance != "offensive"
                Script.run "hurl"
            end
            sleep 0.1

        #Bard Routine for Dayzed
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Dayzed/
            if Spell[410].affordable? && npc.name =~ /champion/ && !(npc.status =~ /lying down|prone|sleeping|kneeling|sitting/) && Room.current.id == 24550
                waitrt?
                waitcastrt?
                fput "incant 410"
                waitrt?
                waitcastrt?
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0
                    put "attack"
                    sleep 0.1
                end
            end

        #Bard Routine for Jovalon
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Jovalon/
            while npc.status !~ /dead|gone/
                fput "target ##{npc.id}"
                waitcastrt? if npc.status !~ /dead|gone/
                waitrt? if npc.status !~ /dead|gone/

                live_count = GameObj.npcs.reject { |npc| %w[dead gone].include?(npc.status) }.count
                if npc.status !~ /dead|gone/ && checkmana(50) && live_count > 1 && Room.current.id == 24550
                    fput "stance defensive" unless checkstance("defensive") || checkstance("guarded")
                    fput "incant 1030 open" if Room.current.id == 24550 && npc.status !~ /dead|gone/
                elsif npc.status !~ /dead|gone/ && live_count > 0 && Room.current.id == 24550
                    Spell[1035].cast unless Spell[1035].active?
                    if npc.status !~ /dead|gone/ && !dead?
                        waitcastrt?
                        waitrt?
                        put "stance offensive" unless checkstance("offensive")
                        put "attack" if Room.current.id == 24550 && npc.status !~ /dead|gone/
                        pause 0.1
                    end
                else
                    echo "nothing to kill"
                end
            end

        #Rogue Routine for Nodyre
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Nodyre/
            if checkstamina >= 60 && npc.name =~ /champion/ && Room.current.id == 24550
                waitrt?
                waitcastrt?
                put "mstrike"
                waitrt?
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0
                    if checkstamina >= 60
                        put "mstrike target"
                    else
                        put "ambush"
                        put "attack"
                    end
                    sleep 0.1
                end
            end
            
        #Paladin Routine for Kalcawkk
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Kalcawkk/
            if Spell[1615].affordable? && Room.current.id == 24550
                waitrt?
                waitcastrt?
                fput "incant 1615"
                waitrt?
                waitcastrt?
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0
                    if checkstamina >= 60
                        put "mstrike target"
                    else
                        put "ambush"
                        put "attack"
                    end
                    sleep 0.1
                end
            end

        #Sorcerer Routine for Dyreknor
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Dyreknor/
            fput "symbol of sleep" if Society.status == "Order of Voln" && GameObj.targets.count == 3 && Room.current.id == 24550
            if npc.name !~ /automaton/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
                waitrt?
                waitcastrt?
                fput "pray" if (!(Spell[717].affordable?))
                waitrt?
                waitcastrt?
                fput "incant 717" if (Spell[717].affordable?)
            end
            sleep 0.1
            while npc.status !~ /dead|gone/ && Room.current.id == 24550 do
                fput "pray" if (checkmana < 20)
                multifput "incant 711" if Spell[711].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0
                sleep 0.1
            end
            Script.start("foreach", "in room; look item") if UserVars.tdusk[:wave_number] != 25
            Script.start("foreach", "in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25
        
        #Mana Battery Routine for Barakeel
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Barakeel/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "send 20 dyreknor" if (checkmana >= 20)
                sleep 5
            end

        #Wizard Routine for Milinra
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Milinra/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 516" if (Array[5,10,15,20].include? UserVars.tdusk[:wave_number]) && Spell[516].affordable? && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            if (Array[1].include? UserVars.tdusk[:wave_number]) && GameObj.targets.count == 3 && Spell[515].affordable? && Room.current.id == 24550
                fput "prep 515"
                fput "cast dyreknor"
            end
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25)
                sleep 0.1
                waitrt? if npc.status !~ /dead|gone/
                waitcastrt? if npc.status !~ /dead|gone/
                fput "stance offensive"
                Spell[950].cast('910 910 910 910 910 910') if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25) && Room.current.id == 24550
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "pray" if (checkmana < 20)
                fput "incant 515" if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903 cast"
                    fput "stance defensive"
                end
                if Spell[903].affordable? && !(npc.name =~ /crimson|fire|troll/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903 evoke"
                    fput "stance defensive"
                end
                if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.name =~ /troll/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 906"
                    fput "stance defensive"
                end
                sleep 0.1
            end

        #Wizard Routine for Aranthius
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Aranthius/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 516" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            if checkmana >= 60 && npc.status !~ /dead|gone/ && ((Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) || npc.name =~ /monkey/) && Room.current.id == 24550
                put "stance offensive"
                fput "incant 950 510 510 510 510 510 510"
                fput "stance defensive"
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0
                    fput "incant 515"
                end
                if Spell[904].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 904"
                    fput "stance defensive"
                end
                sleep 0.1
            end

        #Wizard Routine for Arkios
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Arkios/
            fput "tap" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && (Spell[909].active?) && npc.status !~ /dead|gone/
            fput "incant 410" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && !(Spell[909].active?) && (Spell[410].affordable?) && npc.status !~ /dead|gone/ && Room.current.id == 24550
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name !~ /arctic|ice|snow|witch/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name =~ /arctic|ice|snow|witch/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25)
                sleep 0.1
                waitrt? if npc.status !~ /dead|gone/
                waitcastrt? if npc.status !~ /dead|gone/
                put "stance offensive"
                fput "incant 950 910 910 910 910 910 910" if (checkmana >= 100 && UserVars.tdusk[:wave_number] == 25) && npc.status !~ /dead|gone/ && Room.current.id == 24550
                put "stance defensive"
            end
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "incant 515" if npc.status !~ /dead|gone/
                end
                if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903" if npc.status !~ /dead|gone/
                    put "stance defensive"
                end
                if Spell[904].affordable? && !(npc.name =~ /crimson|fire|troll/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 904" if npc.status !~ /dead|gone/
                    put "stance defensive"
                end
                if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.name =~ /troll/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 906" if npc.status !~ /dead|gone/
                    put "stance defensive"
                end
                sleep 0.1
            end
            Script.start("foreach", "in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25

        #Ranger Bow Routine for Nuadjha
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Nuadjha/
            if GameObj.right_hand.noun == nil && GameObj.loot.find { |item| item.name =~ /arrow/ }
                multifput "gather arrow", "put my Arrow in arrows in my black quiver"
                fput "drop arrow" if GameObj.right_hand != nil
            end
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[140].cast if (Spell[140].affordable?) && !(Spell[140].active?) && (Array[4,9,14,19,24].include? UserVars.tdusk[:wave_number]) && Room.current.id == 24550
            waitcastrt? if npc.status !~ /dead|gone/
            multifput "stance offensive", "incant 615" if (Spell[615].affordable?) && npc.name =~ /champion|slave|gnoll|hunter|gronk|monkey/ && npc.status !~ /dead|gone/
            fput "incant 607" if (Spell[607].affordable?) && npc.name =~ /champion|slave|slaver|hunter|gronk|monkey/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            target_location = "right"
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0
                    put "aim #{target_location} eye" if npc.status !~ /dead|gone/
                    fput "get 1 my arrow" if GameObj.right_hand.noun != "arrow" && npc.status !~ /dead|gone/
                    put "stance offensive" if stance != "offensive"
                    fput "fire" if GameObj.right_hand.noun == "arrow" && npc.status !~ /dead|gone/ && Room.current.id == 24550
                end
                pause 0.1
                target_location = "right" if target_location == "left"
                target_location = "left" if target_location == "right"
            end
            put "drop arrow" if UserVars.tdusk[:wave_number] == 25
            if UserVars.tdusk[:wave_number] == 25 && GameObj.right_hand.noun == nil && GameObj.loot.find { |item| item.name =~ /arrow/ }
                put "gather arrow"
                put "put my arrow in arrows in my baldric"
            end
            put "stow right"
            Script.start("foreach", "in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25

        #Wizard Routine for Kinjaro
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Kinjaro/
            waitrt? if npc.status !~ /dead|gone/
            fput "tap" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active? && Room.current.id == 24550
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name !~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            pause 0.5 if (checkmana > 170 && UserVars.tdusk[:wave_number] == 25)
            Spell[950].cast('910 910 910 910 910 910') if (checkmana > 170 && UserVars.tdusk[:wave_number] == 25) && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[515].cast if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active?
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "incant 515" if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0
                multifput "stance offensive", "incant 903 cast", "stance defensive" if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                multifput "stance offensive", "incant 903 evoke", "stance defensive" if Spell[903].affordable? && !(npc.name =~ /crimson|fire|troll/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                multifput "stance offensive", "incant 906", "stance defensive" if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.name =~ /troll/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                pause 0.25
            end
            if Spell[515].timeleft < 0.25
                waitcastrt?
                fput "incant 515" if Spell[515].affordable?
            end

        #Wizard Routine for Miaya
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Miaya/
            waitrt? if npc.status !~ /dead|gone/
            fput "stomp" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active? && Room.current.id == 24550
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name !~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            pause 0.5 if (checkmana > 120 && UserVars.tdusk[:wave_number] == 25)
            Spell[950].cast('910 910 910 910 910 910') if (checkmana > 120 && UserVars.tdusk[:wave_number] == 25) && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[515].cast if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active?
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                multifput "stance offensive", "incant 904 cast", "stance defensive" if Spell[903].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                pause 0.25
            end

        #Wizard Routine for Titaniae
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Titaniae/
            waitrt? if npc.status !~ /dead|gone/
            fput "tap" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active? && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name !~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                Spell[9718].cast if Spell[9718].affordable? && checkstamina(90) && npc.status !~ /dead|gone/ && Room.current.id == 24550
                if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0
                    put "incant 515"
                end
                if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 904"
                    put "stance defensive"
                end
                if Spell[903].affordable? && !(npc.name =~ /crimson|fire|troll/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903"
                    put "stance defensive"
                end
                pause 0.1
            end

        #Wizard Routine for Whirlin
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Whirlin/
            if GameObj.right_hand.noun == nil && GameObj.loot.find { |item| item.name =~ /arrow/ }
                multifput "gather dark arrow", "put my Arrow in arrows in my spidersilk quiver"
                fput "drop arrow" if GameObj.right_hand != nil
            end
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 919" if (Spell[919].affordable?) && (Array[4,9,14,19,24].include? UserVars.tdusk[:wave_number])
            fput "stomp" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active?
            fput "incant 917 fire" if (Spell[917].affordable?) && npc.name !~ /crimson|fire/ && npc.status !~ /dead|gone/ && (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
            fput "incant 917 cold" if (Spell[917].affordable?) && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
            while npc.status !~ /dead|gone/ && !dead?
                if Spell[506].timeleft <= 0.10 && Spell[506].affordable? && !Spell[598].active?
                    return if checkrt > 0 && checkcastrt > 0
                    Spell[506].cast if UserVars.tdusk[:high_ds] == false
                elsif checkrt == 0
                    fput "take 1 arrow from my spidersilk quiver" if GameObj.right_hand.noun != "arrow" && npc.status !~ /dead|gone/
                    fput "stance offensive" if stance != "offensive"
                    fput "fire" if GameObj.right_hand.noun == "arrow" && npc.status !~ /dead|gone/ && UserVars.tdusk[:high_ds] == false
                end
                pause 0.25
            end

        #Wizard Routine for Drigler
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Drigler/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "stand" if !standing?
            fput "incant 505" if (Spell[505].affordable?) && !(Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
            fput "incant 950" if (checkmana >= 100) && (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if Spell[506].timeleft <= 0.10 && Spell[506].affordable? && !Spell[598].active? && Room.current.id == 24550
                    return if checkrt > 0 && checkcastrt > 0
                    Spell[506].cast
                elsif Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    fput "incant 515"
                elsif checkrt == 0 && Room.current.id == 24550
                    fput "kneel" if !kneeling?
                    if Vars['aiming'] == 'left eye'
                        UserVars['aiming'] = 'right eye'
                    else
                        UserVars['aiming'] = 'left eye'
                    end
                    put "aim #{UserVars['aiming']}"
                    fput "stance offensive" if stance != "offensive"
                    fput "fire" if npc.status !~ /dead|gone/
                end
                pause 0.25
            end
            fput "stand" if !standing?

        #Rogue Bow Routine for Landrag
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Landrag/
            if GameObj.right_hand.noun == nil && GameObj.loot.find { |item| item.name =~ /arrow/ }
                multifput "gather arrow", "put my Arrow in arrows in my black quiver"
                fput "drop arrow" if GameObj.right_hand != nil
            end
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "symbol of sleep" if Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0
                    fput "take 1 arrow from my black quiver" if GameObj.right_hand.noun != "arrow" && npc.status !~ /dead|gone/
                    fput "stance offensive" if stance != "offensive"
                    fput "fire" if GameObj.right_hand.noun == "arrow" && npc.status !~ /dead|gone/ && UserVars.tdusk[:high_ds] == false && Room.current.id == 24550
                end
                pause 0.1
            end
            if UserVars.tdusk[:wave_number] == 25 && GameObj.right_hand.noun == nil && GameObj.loot.find { |item| item.name =~ /arrow/ }
                put "gather arrow"
                put "put my Arrow in arrows in my black quiver"
            end
            put "stow right hand" if UserVars.tdusk[:wave_number] == 25


        #Wizard Routine for Alasatia & Altheren
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Alasatia|Altheren|Darkkstormmer/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "tap" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active? && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && Room.current.id == 24550
                if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active? && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "incant 515"
                end
                if Spell[907].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 907"
                    put "stance defensive"
                end
                if Spell[903].affordable? && !(npc.name =~ /crimson|fire/) && npc.status !~ /dead|gone/ && !(Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 903"
                    put "stance defensive"
                end
                if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.status !~ /dead|gone/ && Array[5,10,15,20,25].include?(UserVars.tdusk[:wave_number]) && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    put "stance offensive"
                    fput "incant 906"
                    put "stance defensive"
                end
                pause 0.1
            end

        #Wizard Routine for Ragz
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Ragz/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "tap" if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Spell[909].active? && Room.current.id == 24550
            Spell[917].cast if (Spell[917].affordable? && (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])) && Room.current.id == 24550
            Spell[515].cast if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active?
            while npc.status !~ /dead|gone/ && Room.current.id == 24550
                multifput "stance offensive", "incant 903", "stance defensive" if Spell[903].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                multifput "stance offensive", "incant 904", "stance defensive" if Spell[904].affordable? && !(npc.name =~ /crimson|fire/) && npc.status !~ /dead|gone/ && !(Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                multifput "stance offensive", "incant 906", "stance defensive" if Spell[906].affordable? && !(npc.name =~ /crimson|fire/) && npc.status !~ /dead|gone/ && Array[5,10,15,20,25].include?(UserVars.tdusk[:wave_number]) && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                pause 0.25
            end

        #Wizard Rotuine for Claudaro
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Claudaro/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[917].cast if (Spell[917].affordable? && UserVars.tdusk[:wave_number] != 25) && Room.current.id == 24550
            Spell[515].cast if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active? && !Spell[515].active?
            while npc.status !~ /dead|gone/ && Room.current.id == 24550
                multifput "stance offensive", "incant 910", "stance defensive" if Spell[904].affordable? && npc.name =~ /crimson|fire/ && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                multifput "stance offensive", "incant 906", "stance defensive" if Spell[903].affordable? && !(npc.name =~ /crimson|fire/) && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                pause 0.25
            end

        # Wizard Routine for Marhand
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Marhand/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/

            if (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
                echo "DEBUG: champion round setup"
                fput "stomp" if Spell[909].active?
                if Spell[917].affordable?
                    if npc.name !~ /arctic|ice|snow|witch/
                        fput "incant 917 cold"
                    else
                        fput "incant 917 fire"
                    end
                end
            end

            while npc.status !~ /dead|gone/
                if Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]
                    echo "DEBUG: champion round"
                    if npc.name =~ /crimson|fire/
                        multifput "stance offensive", "incant 910", "stance defensive" if checkmana(10) && npc.status !~ /dead|gone/
                    else
                        multifput "stance offensive", "incant 906", "stance defensive" if checkmana(6) && npc.status !~ /dead|gone/
                    end
                else
                    if npc.name =~ /crimson|fire/
                        multifput "stance offensive", "incant 904", "stance defensive" if checkmana(4) && npc.status !~ /dead|gone/
                    else
                        multifput "stance offensive", "incant 903", "stance defensive" if checkmana(4) && npc.status !~ /dead|gone/
                    end
                end
                pause 0.25
            end

        #Sorcerer Routine for Xred
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Xred/
            if npc.name !~ /automaton/ && npc.status !~ /dead|gone/ && GameObj.npcs && Room.current.id == 24550
                waitrt?
                waitcastrt?
                Spell[9918].cast if (!(Spell[717].affordable?) && checkspirit >= 6 )
                waitrt?
                waitcastrt?
                Spell[717].cast if (Spell[717].affordable?)
            end
            while (npc.status !~ /dead|gone/ && GameObj.npcs && Room.current.id == 24550) do
                waitrt?
                waitcastrt?
                Spell[9918].cast if (!(Spell[711].affordable?) && checkspirit >= 6 )
                waitrt?
                waitcastrt?
                Spell[711].cast if (Spell[711].affordable?)
            end

        #Sorcerer Routine for Maetriks
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Maetriks|Berkana/
            pause 1.25
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            multifput "prep 417", "cast void" if GameObj.loot.find { |item| item.name.include? "void" } && npc.name =~ /automaton/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 717" if (Spell[717].affordable?) && npc.status !~ /dead|gone/ && npc.name !~ /automaton/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 717" if (Spell[717].affordable?) && npc.status !~ /dead|gone|lying down|stunned|prone|sleeping|kneeling/ && npc.name !~ /automaton/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 720" if (Spell[720].affordable?) && npc.status !~ /dead|gone/ && npc.name !~ /automaton/ && !GameObj.loot.find { |item| item.name.include? "void" } && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "incant 711" if (Spell[711].affordable?) && npc.status !~ /dead|gone/ && npc.name =~ /crab|grahnk|yeti|champion|automaton/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                fput "incant 705" if (Spell[705].affordable?) && npc.status !~ /dead|gone/ && npc.name !~ /crab|grahnk|yeti|champion|automaton/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                pause 0.25 if npc.status !~ /dead|gone/
            end

        #Bard Routine for Luxelle
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Luxelle/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            if npc.name =~ /automaton|champion/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
                fput "renew 1015" if Spell[1015].affordable?
            end
            fput "incant 1002" if Spell[1002].affordable? && npc.noun =~ /champion|marauder|slaver|shaman|troll|witch|servant|seeker|grahnk|ranger|wildling/ && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "symbol of mana" if checkmana <= 40
            fput "incant 1030" if Spell[1030].affordable? && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                fput "symbol of mana" if checkmana <= 40 && checkrt == 0 && checkcastrt == 0
                fput "incant 1030" if Spell[1030].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                sleep 0.5
            end
            put "curtsy grand" if npc.status =~ /dead/ && UserVars.tdusk[:wave_number] == 25 && !dead?
            put "stop 1018" if UserVars.tdusk[:wave_number] == 25 && !dead?
            put "look" if UserVars.tdusk[:wave_number] == 25 && !dead?
            waitcastrt? if UserVars.tdusk[:wave_number] == 25 && !dead?
            put "renew all" if UserVars.tdusk[:wave_number] == 25 && !dead?

        #Bard Routine for Naamit
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Naamit/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "sign wracking" if checkmana <= 30 && checkspirit >= 6 && Room.current.id == 24550
            fput "incant 1030" if Spell[1030].affordable? && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkmana <= 30  && checkspirit >= 6 && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    fput "sign wracking"
                end
                if Spell[1030].affordable? && npc.status !~ /dead|gone/ && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                    fput "incant 1030"
                end
                sleep 0.1
            end

        #Warrior Routine for Durakar
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Durakar/
            while npc.name =~ /automaton|champion/ && npc.status !~ /dead|gone/
                fput "berserk" if !(Spell[9607].active?) && checkstamina >= 20 && checkrt == 0 && checkcastrt == 0
                multifput "aim chest", "ambush" if !(Spell[9607].active?) && checkstamina < 20  && checkrt == 0 && checkcastrt == 0
                pause 0.25
            end
            while (npc.name =~ /yeti|mammoth/ && !(npc.status =~ /lying down|stunned/) && npc.status !~ /dead|gone/) do
                multifput "aim left leg", "ambush" if checkrt == 0 && checkcastrt == 0 && !(Spell[9607].active?)
                pause 0.25
            end
            while (npc.name =~ /yeti|mammoth/ && (npc.status =~ /lying down|stunned/) && npc.status !~ /dead|gone/) do
                multifput "aim head", "ambush" if checkrt == 0 && checkcastrt == 0 && !(Spell[9607].active?)
                pause 0.25
            end

        #Warrior Routine for Beldannon
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Beldannon/
            while npc.status !~ /dead|gone/ && Room.current.id == 24550
                fput "berserk" if !(Spell[9607].active?) && checkstamina >= 10 && checkrt == 0 && checkcastrt == 0 && Room.current.id == 24550
                if checkstamina < 10 && UserVars.tdusk[:praycurrent] < 3
                    put "PRAY" 
                    UserVars.tdusk[:praycurrent] += 1
                    sleep 0.1 until (checkstamina >= 10)
                end
                sleep 0.1
            end
            Script.start("foreach", "in room; look item") if UserVars.tdusk[:wave_number] != 24
            if UserVars.tdusk[:wave_number] == 24
                put "STOP"
                Script.start("foreach", "in room; get item; stow item")
            end

        #Attack Routine for Hoy w/ SK 506
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Hoy/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 616" if (Spell[616].affordable?) && (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if Spell[506].timeleft <= 0.04 && Spell[506].affordable? && !Spell[598].active? && Room.current.id == 24550
                    return if checkrt > 0 && checkcastrt > 0
                    Spell[506].cast  && UserVars.tdusk[:high_ds] == false
                elsif (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && checkrt == 0 && !Spell[9005].active? && Room.current.id == 24550
                    fput "stance offensive" if stance != "offensive"
                    fput "mstrike ##{npc.id}" if UserVars.tdusk[:high_ds] == false
                elsif checkrt == 0 && Room.current.id == 24550
                    fput "stance offensive" if stance != "offensive"
                    fput "attack" if UserVars.tdusk[:high_ds] == false
                end
                pause 0.1
            end

        #Paladin Routine for Nairdin
        elsif Char.name =~ /Nairdin/
            fput "beseech kunai ignite" if UserVars.tdusk[:wave_number] == 1
            waitrt?
            waitcastrt?
            fput "beseech sledge" if npc.name =~ /champion|automaton/ && Room.current.id == 24550
            fput "symbol of sleep" if npc.name =~ /champion|yeti|mammoth|grahnk/ && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if npc.name =~ /automaton/ && checkrt == 0 && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    pause 0.6
                    put "qstr 5" if !Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "mstr target" if !Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "qstr 3" if Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "aim left leg" if Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "aim chest" if Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if Spell[9005].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                elsif npc.name =~ /champion/ && checkrt == 0 && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    pause 0.6
                    put "qstr 5 mstr target" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "qstr 3" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "aim chest" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "sym sleep" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                elsif checkrt == 0 && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    pause 0.6
                    put "aim neck" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "sym sleep" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "aim head" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    put "ambush" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                end
                pause 0.25 if npc.status !~ /dead|gone/
            end

        #Empath Routine for Siierra
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Siierra|Maylan|Larenusia|Kragdruk/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 240" if Spell[240].affordable? && !Spell[240].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0 && npc.status !~ /dead|gone/
                    if !Spell[240].active?
                        fput "incant 240" if Spell[240].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    elsif npc.name =~ /automaton/
                        fput "incant 1106" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    elsif npc.status !~ /dead|gone/
                        fput "incant 1115" if Spell[1115].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    end
                end
                pause 0.1 if npc.status !~ /dead|gone/
            end

        #CoL Empath Routine for Deza
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Deza/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            fput "incant 240" if Spell[240].affordable? && !Spell[240].active? && npc.status !~ /dead|gone/ && Room.current.id == 24550
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0 && npc.status !~ /dead|gone/
                    if !Spell[240].active?
                        fput "sign of wracking" if (checkmana < 40 && checkspirit >= 6 ) && Room.current.id == 24550 && !GameObj.pcs.any?
                        fput "incant 240" if Spell[240].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    elsif npc.name =~ /automaton/
                        fput "sign of wracking" if (checkmana < 6 && checkspirit >= 6 ) && Room.current.id == 24550 && !GameObj.pcs.any?
                        fput "incant 1106" if npc.status !~ /dead|gone/ && Room.current.id == 24550
                    elsif npc.status !~ /dead|gone/
                        fput "sign of wracking" if (checkmana < 15 && checkspirit >= 6 ) && Room.current.id == 24550 && !GameObj.pcs.any?
                        fput "incant 1115" if Spell[1115].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    end
                end
                pause 0.1 if npc.status !~ /dead|gone/
            end


        #Empath Routine for Alendi
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Alendi/
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0 && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    if npc.name =~ /automaton/ && npc.status !~ /dead|gone/ && Room.current.id == 24550
                        fput "incant 1106" if Spell[1106].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    elsif npc.status !~ /dead|gone/ && Room.current.id == 24550
                        fput "incant 1115" if Spell[1115].affordable? && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    end
                end
                sleep 0.1 if npc.status !~ /dead|gone/
            end

        #Cleric Routine for Kinsley
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Kinsley|Fizzlebwap/
            pause 0.5
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[240].cast if Spell[240].affordable? && !Spell[240].active? && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0 && npc.status !~ /dead|gone/
                    if !Spell[240].affordable? && !Spell[240].active? && checkspirit >= 6 && Society.status == "Council of Light" && Room.current.id == 24550
                        Spell[9918].cast
                    elsif Spell[240].affordable? && !Spell[240].active? && Room.current.id == 24550
                        Spell[240].cast
                    elsif !Spell[302].affordable? && npc.name !~ /champion|automaton/ && checkspirit >= 6 && Society.status == "Council of Light" && Room.current.id == 24550
                        Spell[9918].cast
                    elsif Spell[302].affordable? && npc.name !~ /champion|automaton/ && Room.current.id == 24550
                        Spell[302].cast
                    elsif !Spell[317].affordable? && npc.name =~ /champion|automaton/ && checkspirit >= 6 && Society.status == "Council of Light" && Room.current.id == 24550
                        Spell[9918].cast
                    elsif Spell[317].affordable? && npc.name =~ /champion|automaton/ && Room.current.id == 24550
                        Spell[317].cast

                    end
                end
                pause 0.25 if npc.status !~ /dead|gone/
            end

        #Cleric Routine for Katiesa
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Katiesa/
            sleep 0.5
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            Spell[320].cast if Spell[320].affordable? && !Spell[320].active? && Room.current.id == 24550
            waitrt? if npc.status !~ /dead|gone/
            waitcastrt? if npc.status !~ /dead|gone/
            while npc.status !~ /dead|gone/ && !dead? && Room.current.id == 24550
                if checkrt == 0 && checkcastrt == 0 && npc.status !~ /dead|gone/ && Room.current.id == 24550
                    if Spell[240].affordable? && !Spell[240].active?
                        Spell[240].cast
                    elsif !Spell[240].affordable? && !Spell[240].active?
                        Spell[240].cast    
                    elsif (Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]) && npc.name !~ /fire|crimson/ && Spell[317].affordable?
                        Spell[317].cast
                    elsif (Array[5,10,15,18,19,20,21,22,23,24,25].include? UserVars.tdusk[:wave_number]) && Spell[312].affordable?
                        Spell[312].cast
                    elsif Spell[302].affordable?
                        Spell[302].cast
                    elsif !Spell[302].affordable?
                        Spell[302].cast
                    end
                end
                sleep 0.25 if npc.status !~ /dead|gone/
            end
            Script.start("foreach", "in room; look item") if UserVars.tdusk[:wave_number] != 25
            Script.start("foreach", "in room; get item; stow item") if UserVars.tdusk[:wave_number] == 25

        #UAC Routine for Evician
        elsif npc.status !~ /dead|gone/ && Char.name =~ /Evician/
            if Script.running?("combo")
                kill_script "combo"
                sleep 0.1 while ( Script.running?("combo"))
            end
            sleep 0.5
            waitrt?
            Script.start("combo")
            sleep 0.1 while ( npc.status !~ /dead|gone/ && Room.current.id == 24550 )
        elsif npc.status !~ /dead|gone/
            UserVars.tdusk[:using_bigshot] = true

        end
    }
    end
    if GameObj.targets.any? {|npc| npc.status !~ /dead|gone/} && UserVars.tdusk[:using_bigshot]
        Script.kill("bigshot") if Script.running?("bigshot")
        sleep 0.1 until ( !Script.running?("bigshot") )
        Script.start("bigshot", "quick")
    end
end


def loot(group_size, package_line)
    waitrt?
    fput "store all" if UserVars.tdusk[:girdstore]
    sleep 1
    loop {
        fput "get package" if (checkleft != "package" && checkright != "package")
        sleep 1
        break if (checkleft == "package" || checkright == "package")
    } if (checkleft != "package" && checkright != "package") && package_line =~ /at your feet/

    if UserVars.tdusk[:lootpackage] && package_line =~ /at your feet|hands an arena winnings package to you/
        fput "open my package"
        fput "look in my package"
        fput "open my #{Vars.lootsack}" if UserVars.tdusk[:open_lootsack]
        line = dothistimeout "empty my package into my #{Vars.lootsack}", 5, /You try to empty the contents of your package into your [\w]+, (?:but nothing will fit|but nothing comes out|and everything falls in quite nicely)\.|leaving the rest/
        if line =~ /everything falls in quite nicely|but nothing comes out/
            # emptied fine, yay!
        else
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "or something bad happened, you should check the package!"
            exit
        end
        sleep 1
        waitrt?

        if checkright == "package" && (GameObj.right_hand.contents.empty? || GameObj.right_hand.contents.nil?)
            sleep(0.5)
            waitrt?
            fput "drop my package"
        elsif checkleft == "package" && (GameObj.left_hand.contents.empty? || GameObj.left_hand.contents.nil?)
            sleep(0.5)
            waitrt?
            fput "drop my package"
        else
            respond "package not empty"
            respond "package not empty"
            respond "package not empty"
            pause_script
        end
    elsif package_line =~ /at your feet|hands an arena winnings package to you/
        fput "put my package into my #{Vars.lootsack}"
        sleep 1
        if (checkleft == "package" || checkright == "package")
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "CONTAINER FULL, TIME TO EMPTY!"
            echo "or something bad happened, you should check the package!"
            exit
        end
    end

    if group_size == 1
        start_script("go2", ["23780"])
        wait_while {running?("go2")}
    else
        sleep 4 if !checkgrouped
        start_script("go2", ["26387"]) if !checkgrouped
        wait_while {running?("go2")} if !checkgrouped
    end
    
    put "inventory enhancive off" if UserVars.tdusk[:enhancive_me]
    Script.run("waggle") if UserVars.tdusk[:waggle_me]

    if UserVars.tdusk[:pause_me]
        echo "PAUSING SCRIPT"
        echo ";u tdusk"
        echo "TO CONTINUE"
        pause_script
    end

    if UserVars.tdusk[:maxvitals]
        sleep(1) until (checkhealth == maxhealth && checkmana == maxmana && checkstamina == maxstamina && checkspirit == maxspirit )
    end

    sleep 1
    sleep 2 if !checkgrouped
    put "open my #{Vars.lootsack}" if UserVars.tdusk[:open_lootsack]
    fput "get my #{UserVars.tdusk[:token]} from my #{Vars.lootsack}"
    if !checkgrouped && UserVars.tdusk[:reentry]
        until Room.current.id == 24550 do
            line = dothistimeout "go entrance", 3, /\[Duskruin Arena, Dueling Sands\]/
            break if line =~ /\[Duskruin Arena, Dueling Sands\]/
            sleep(rand(30..60))
        end
    elsif !checkgrouped
        fput "go entrance"
    end
    sleep(1) until Room.current.id == 24550
end

if variable[1].downcase =~ /(slip|token|jar|booklet|voucher)/
    UserVars.tdusk[:token] = $+

elsif variable[1].downcase == "help" || UserVars.tdusk[:token] == nil
    respond "\n
    SYNTAX - ;tdusk <SLIP/TOKEN/BOOKLET/JAR/VOUCHER>
    Start script outside of entrance with your hands empty.
    Uses READY LIST set weapons/shield settings to store/ready between runs.
    Will remember SLIP/TOKEN/BOOKLET/JAR used after first time given.

    The Script has several variables that can be set to change behavior. See blow

    Waggle Between Runs - Default is set to TRUE (Current: #{UserVars.tdusk[:waggle_me]})
    ;e echo UserVars.tdusk[:waggle_me] = false

    Pauses Between Runs - Default is set to TRUE (Current: #{UserVars.tdusk[:pause_me]})
    ;e echo UserVars.tdusk[:pause_me] = false

    Auto-Enable Enhancives via INV ENHANCIVE ON/OFF - Default is set to FALSE (Current: #{UserVars.tdusk[:enhancive_me]})
    ;e echo UserVars.tdusk[:enhancive_me] = true

    Auto-Casts Song of Power (1018) at arena start if you're a bard - Default is set to TRUE (Current: #{UserVars.tdusk[:bardnode]})
    ;e echo UserVars.tdusk[:bardnode] = false
   
    Auto-Casts Mana Focus (418) at arena start if you're a Wizard or Sorcerer - Default is set to TRUE (Current: #{UserVars.tdusk[:node]})
    ;e echo UserVars.tdusk[:node] = false
    
    Auto-Casts Rapid Fire (515) at arena startt if you're a Wizard - Default is set to FALSE (Current: #{UserVars.tdusk[:opener515]})
    ;e echo UserVars.tdusk[:opener515] = true
    
    Auto-Casts Tremors (909) Channeled at arena start if you're a Wizard - Default is set to FALSE (Current: #{UserVars.tdusk[:opener909]})
    ;e echo UserVars.tdusk[:opener909] = true
    
    Auto-Casts Spirit Slayer (240) at arena start if you're a Cleric or Empath - Default is set to FALSE (Current: #{UserVars.tdusk[:opener240]})
    ;e echo UserVars.tdusk[:opener240] = true

    Active Hunting Scripts (Default to stand)
    (Current: #{UserVars.tdusk[:activescripts]})
    ;e echo UserVars.tdusk[:activescripts] = ['stand','SCRIPT1HERE','SCRIPT2HERE','ETCETCETCETC']

    Custom Attack Script In External CHARNAME-duskattack.lic file - Default to FALSE (Current #{UserVars.tdusk[:attack_script]})
    ;e echo UserVars.tdusk[:attack_script] = true
    Sample available via ;repo download Tysong-duskattack

    SLIPS/TOKENS/JARS/BOOKLETS/VOUCHERS Should be in your lootsack. (Current: #{UserVars.lootsack})
    ;VARS SET lootsack=CONTAINERHERE

    Whether to loot the package or to store it. Default is set to TRUE. (Current: #{UserVars.tdusk[:lootpackage]})
    ;e echo UserVars.tdusk[:lootpackage] = false

    Whether to open your lootsack prior to emptying your package into it. Default is set to FALSE. (Current: #{UserVars.tdusk[:open_lootsack]})
    ;e echo UserVars.tdusk[:open_lootsack] = true
    
    Whether to automatically GIRD/STORE ALL for arena entry/exit. Default is set to TRUE. (Current: #{UserVars.tdusk[:girdstore]})
    ;e echo UserVars.tdusk[:girdstore] = false

    Whether to pause after each arena run to wait for max vitals before continuing. Default set to FALSE. (Current: #{UserVars.tdusk[:maxvitals]})
    ;e echo UserVars.tdusk[:maxvitals] = true

    Whether to attempt reentry to arena entrance if fail going in (likely due to group members not being ready). Default set to TRUE. (Current: #{UserVars.tdusk[:reentry]})
    ;e echo UserVars.tdusk[:reentry] = true

    Uses ;BIGSHOT QUICK for hunting logic. So make sure your bigshot is setup correctly.
        Hunting Tab  - quickhunt targets should be:  (?:.*)
        Commands Tab - quick hunting commands: fill this box with how you want it to attack
        Set everything else up with how you want it.

    Broadcasts time to DUSKRUIN lnet channel when done. Default is true. (Current: #{UserVars.tdusk[:broadcast]})
    ;e echo UserVars.tdusk[:broadcast] = false"
    exit
end

tdusk_hook = proc { |client_string|
   begin
      if client_string =~ /^(?:<c>)?toggletdusk$/i
         if UserVars.tdusk[:pause_me] == false
            UserVars.tdusk[:pause_me] = true
         else
            UserVars.tdusk[:pause_me] = false
         end
         respond "[tdusk] - UserVars.tdusk[:pause_me] = #{UserVars.tdusk[:pause_me]}"
         nil
      else
         client_string
      end
   rescue
      respond $!
      respond $!.backtrace
      UpstreamHook.remove('tdusk_hook')
      client_string
   end
}

before_dying {
    UpstreamHook.remove('tdusk_hook')
    UserVars.tdusk[:activescripts].each { |activescript|
        kill_script "#{activescript}"
    }
    fput "incant set evoke 903" if Char.name =~ /Tysong|Sabotage/
}

UpstreamHook.add('tdusk_hook', tdusk_hook)

fput "store all" if UserVars.tdusk[:girdstore]
pause 1
put "open my #{Vars.lootsack}" if UserVars.tdusk[:open_lootsack]
fput "get my #{UserVars.tdusk[:token]} from my #{Vars.lootsack}"
pause 1
fput "go entrance" if !checkgrouped
sleep(1) until Room.current.id == 24550

loop {
    line = get
    if line =~ /An announcer shouts\, \"Introducing (?:.*)"/
        fput "put my #{UserVars.tdusk[:token]} in my #{Vars.lootsack}" if UserVars.tdusk[:token] =~ /jar|booklet|voucher/
        fput "gird" if UserVars.tdusk[:girdstore]
        UserVars.tdusk[:activescripts].each { |activescript|
            if Script.exists?("#{activescript}")
                Script.start("#{activescript}") if !(Script.running?("#{activescript}"))
                Script.unpause("#{activescript}") if Script.paused?("#{activescript}")
            end
        }
        _respond("#{fam_window_begin}DR-Starting Arena\r\n#{fam_window_end}")
        UserVars.tdusk[:praycurrent] = 0
        group_size = 3 if checkpcs.count == 2
        group_size = 2 if checkpcs.count == 1
        group_size = 1 if checkpcs.count == nil

        if Char.prof =~ /Wizard/ && UserVars.tdusk[:opener515]
            waitcastrt?
            Spell[515].cast if Spell[515].affordable? && !Spell[599].active? && !Spell[597].active?
        end
        if Char.prof =~ /Empath|Cleric/ && UserVars.tdusk[:opener240]
            waitcastrt?
            Spell[240].cast if Spell[240].affordable? && !Spell[240].active?
        end
        if Char.prof =~ /Bard/ && UserVars.tdusk[:bardnode]
            waitcastrt?
            Spell[1018].cast
        end
        if Char.prof =~ /Wizard|Sorcerer/ && UserVars.tdusk[:node]
            waitcastrt?
            Spell[418].cast
        end

        if Char.prof =~ /Wizard/ && UserVars.tdusk[:opener909]
            waitcastrt?
            fput "incant 909 channel" if Spell[909].affordable? && Spell[909].timeleft < 112
        end
        put "inventory enhancive on" if UserVars.tdusk[:enhancive_me]
        put "shout" if group_size == 1

    elsif line =~ /An announcer shouts\, \"(?:.*)\"  An iron portcullis is raised and .* (?:enter|enters) the arena\!/ || ((GameObj.targets.count { |npc| ( npc.status !~ /dead|gone/) } >= 1) && Room.current.id == 24550 && UserVars.tdusk[:wave_number] != 0 && !UserVars.tdusk[:attack_script] && !UserVars.tdusk[:using_bigshot])
        if (line =~ /An announcer shouts\, \"FIGHT\!\"  An iron portcullis is raised and .* (?:enter|enters) the arena\!/)
            (start_time = Time.now)
        elsif start_time == 0
            (start_time = Time.now)
        end
        (kill_time  = total_time) if total_time
        total_time = Time.now - start_time
        total_time = total_time.round(2)
        if kill_time
            kill_time = total_time - kill_time
        else
            kill_time = total_time
        end
        (avg_reg = avg_reg + kill_time) if !(Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
        (avg_champ = avg_champ + kill_time) if Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]
        _respond("#{fam_window_begin}#{group_size}v#{group_size} DR-Kills: #{UserVars.tdusk[:wave_number]}, Total Time #{Time.at(total_time).strftime("%M:%S")}, Kill Time: #{Time.at(kill_time).strftime("%M:%S")}\r\n#{fam_window_end}")
        UserVars.tdusk[:wave_number] += 1
        attack()

    elsif line =~ /An announcer boasts\, \"(?:.*) defeating all those that opposed .* The overwhelming sound of applauding echoes throughout the stands\!/
        (kill_time  = total_time) if total_time
        total_time = Time.now - start_time
        total_time = total_time.round(2)
        if kill_time
            kill_time = total_time - kill_time
        else
            kill_time = total_time
        end
        Script.kill("#{Char.name}-duskattack") if Script.running?("#{Char.name}-duskattack")
        put "STOP 1018" if Char.prof =~ /Bard/
        (avg_reg = avg_reg + kill_time) if !(Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number])
        (avg_champ = avg_champ + kill_time) if Array[5,10,15,20,25].include? UserVars.tdusk[:wave_number]
        avg_reg = avg_reg / 20
        avg_champ = avg_champ / 5
        _respond("#{fam_window_begin}#{group_size}v#{group_size} DR-Kills: #{UserVars.tdusk[:wave_number]}, Total Time #{Time.at(total_time).strftime("%M:%S")}, Kill Time: #{Time.at(kill_time).strftime("%M:%S")}\r\n#{fam_window_end}")
        _respond("#{fam_window_begin}DR-Winning Time: #{Time.at(total_time).strftime("%M:%S")} \r\n#{fam_window_end}")
        _respond("#{fam_window_begin}DR-Avg Reg Kill: #{Time.at(avg_reg).strftime("%M:%S")}, Avg Champ Kill: #{Time.at(avg_champ).strftime("%M:%S")} \r\n#{fam_window_end}")
        send_to_script(lnet_or_0net,"chat on DUSKRUIN #{group_size}v#{group_size} Finished: #{Time.at(total_time).strftime("%M:%S")}, Avg Reg Kill: #{Time.at(avg_reg).strftime("%M:%S")}, Avg Champ Kill: #{Time.at(avg_champ).strftime("%M:%S")}") if UserVars.tdusk[:broadcast]

    elsif line =~ /An arena guard escorts you from the dueling sands/
        Script.kill("#{Char.name}-duskattack") if Script.running?("#{Char.name}-duskattack")
        put "STOP 1018" if Char.prof =~ /Bard/
        UserVars.tdusk[:activescripts].each { |activescript|
            Script.pause("#{activescript}") if Script.running?("#{activescript}") && !Script.paused?("#{activescript}")
        }

    elsif line =~ /Here are your winnings, #{Char.name}./
        start_time = 0
        total_time = 0
        kill_time  = 0
        avg_reg    = 0
        avg_champ  = 0
        UserVars.tdusk[:wave_number] = 0
        loot(group_size, line)

    elsif line =~ /drags you out of the arena/ || dead?
        respond "dead!!!"
        fput "inventory enhancive off" if UserVars.tdusk[:enhancive_me]
        exit
    end

}
