=begin

  Perfume: use ;perfume setup to set your item.. be it perfume/cologne or something else. and the container you want to keep it in.
  If wearable, just check the checkbox and list what the item is in the top text entry box.
  Let me know how it works..

    author: elanthia-online
      game: Gemstone
      tags: cologne, perfume, utility, roleplay, rp
   version: 1.0.0

  changelog:
    1.0.0  (2025-03-07):
      - initial release
      - fork of Nomada's fragrance script
=end

$f_types = %w[cologne perfume]
settings = CharSettings.to_hash

setup = proc {
  gtk_globals = {}
  gtk_locals = {}

  window = window_action = nil

  Gtk.queue do
    gtk_globals['frag_type'] = Gtk::Entry.new.set_text(UserVars.frag_type || '')
    gtk_globals['frag_cont'] = Gtk::Entry.new.set_text(UserVars.frag_cont || '')
    gtk_locals['enable_wearable'] = Gtk::CheckButton.new('Wearable?').set_active(UserVars.frag_wearable || false)

    window = Gtk::Window.new(Gtk::WindowType::TOPLEVEL)
    window.set_title 'SMELLY GOOD!'
    window.border_width = 10
    window.signal_connect('delete_event') { Gtk.main_quit }

    vbox = if Gtk::Version::STRING.chr == '3'
             Gtk::Box.new(:vertical, 5)
           else
             Gtk::VBox.new(false, 5)
           end

    tbox = Gtk::Alignment.new(0, 0, 0, 0).add(Gtk::Label.new('Perfume Type:')).set_width_request(100)
    vbox.pack_start(tbox)
    vbox.pack_start(gtk_globals['frag_type'], :expand => true)

    tbox2 = Gtk::Alignment.new(0, 0, 0, 0).add(Gtk::Label.new('Perfume Container:')).set_width_request(100)
    vbox.pack_start(tbox2)
    vbox.pack_start(gtk_globals['frag_cont'], :expand => true)

    vbox.pack_start(Gtk::Alignment.new(0, 0, 0, 1).add(gtk_locals['enable_wearable'].set_width_request(150)), :expand => false)

    # vbox = Gtk::HBox.new(false,1)

    # Save/Close buttons
    hb_saveclose = Gtk::Box.new(:horizontal)
    save = Gtk::Button.new(:label => 'Save & Close')
    close = Gtk::Button.new(:label => 'Exit')

    save.signal_connect('clicked') { window_action = :save }
    close.signal_connect('clicked') { window_action = :done }

    hb_saveclose.pack_start(save, :expand => false)
    hb_saveclose.pack_start(close, :expand => false)
    vbox.pack_start(Gtk::Alignment.new(1, 0, 0, 0).add(hb_saveclose), :expand => false)
    window.add(vbox)
    window.show_all

    Gtk.main
  end

  before_dying { Gtk.queue { window.destroy } }
  wait_while { window_action.nil? }

  clean_entry = proc { |entry|
    entry.text = entry.text.strip
    entry.text = '' if entry.text.empty?
    entry.text
  }

  if window_action == :save
    gtk_globals.each_pair do |option, widget|
      if widget.instance_of?(Gtk::CheckButton)
        UserVars.change(option, widget.active?, :char)
      elsif widget.instance_of?(Gtk::Entry)
        UserVars.change(option, clean_entry.call(widget), :char)
      else
        echo "error: unknown global widget #{option} [#{widget.class}]"
      end
    end

    gtk_locals.each_pair do |option, widget|
      if widget.instance_of?(Gtk::CheckButton)
        settings[option] = widget.active?
      elsif widget.instance_of?(Gtk::Entry)
        settings[option] = clean_entry.call(widget)
      else
        echo "error: unknown local widget #{option} [#{widget.class}]"
      end
    end
    echo 'settings saved'
  else
    echo 'closed without saving'
  end
}

rub_set = proc {
  ts = UserVars.frag_type
  cont = UserVars.frag_cont

  line = dothistimeout "smell #{Char.name}", 2, /You quietly sniff at yourself.  You \*think\* you smell okay, but then, doesn't everybody\?/
  if line == "You quietly sniff at yourself.  You *think* you smell okay, but then, doesn't everybody?"
    echo 'YOU STINK'
    if UserVars.frag_wearable
      fput "pull my #{ts}"
    else
      sleep 1 until !(Script.running?('go2') || Script.running?('bigshot') || Script.running?('eloot') || Script.running?('eherbs')) && (checkleft.nil? || checkright.nil?)
      fput "open my #{cont}"
      fput "get my #{ts}"
      fput "pour #{ts} on #{Char.name}"
      fput "put #{ts} in my #{cont}"
      fput "close my #{cont}"
    end
  end

  line = waitfor 'The subtle scent which had been clinging to you dissipates.'
  rub_set.call if line =~ /The subtle scent which had been clinging to you dissipates./
}

if Script.current.vars.empty?
  rub_set.call
elsif Script.current.vars[1] =~ /setup/
  setup.call
elsif Script.current.vars[1] =~ /help/
  echo('Usage ;perfume or ;perfume setup')
else
  echo('You are doing it wrong. Type ;perfume help')
end
