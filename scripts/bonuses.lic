=begin

    Show's old-style bonuses from old infomon output

             author: Elanthia-Online
               game: Gemstone
               tags: magic, bonuses, spells
            version: 1.0.0

    2023-11-15 - v1.0.0
      initial release

=end

output = String.new
if Spell.active.empty?
  output.concat("\n(no active spells)\n")
else
  lastcircle = nil
  Spell.active.compact!
  total_boltAS, total_physicalAS, total_boltDS, total_physicalDS, total_elementalCS, total_mentalCS, total_spiritCS, total_sorcererCS, total_elementalTD, total_mentalTD, total_spiritTD, total_sorcererTD, total_strength, total_dodging, total_combatmaneuvers, total_damagefactor, total_block, total_constitution, total_health, total_uaf, total_asg, total_fof_offset = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
  Spell.active.sort_by { |spell| spell.num.to_i }.each { |spell|
    if (spell.circle != lastcircle) then output.concat("\r\n- #{spell.circlename}:\r\n") end
    bonus_string = ' - '
    if spell.bolt_as != 0
      bonus_string.concat "#{spell.bolt_as} bAS, "
      total_boltAS += spell.bolt_as
    end
    if spell.physical_as != 0
      bonus_string.concat "#{spell.physical_as} pAS, "
      total_physicalAS += spell.physical_as
    end
    if spell.bolt_ds != 0
      bonus_string.concat "#{spell.bolt_ds} bDS, "
      total_boltDS += spell.bolt_ds
    end
    if spell.physical_ds != 0
      bonus_string.concat "#{spell.physical_ds} pDS, "
      total_physicalDS += spell.physical_ds
    end
    if spell.elemental_cs != 0
      bonus_string.concat "#{spell.elemental_cs} elemCS, "
      total_elementalCS += spell.elemental_cs
    end
    if spell.mental_cs != 0
      bonus_string.concat "#{spell.mental_cs} mentCS, "
      total_mentalCS += spell.mental_cs
    end
    if spell.spirit_cs != 0
      bonus_string.concat "#{spell.spirit_cs} spirCS, "
      total_spiritCS += spell.spirit_cs
    end
    if spell.sorcerer_cs != 0
      bonus_string.concat "#{spell.sorcerer_cs} sorcCS, "
      total_sorcererCS += spell.sorcerer_cs
    end
    if spell.elemental_td != 0
      bonus_string.concat "#{spell.elemental_td} elemTD, "
      total_elementalTD += spell.elemental_td
    end
    if spell.mental_td != 0
      bonus_string.concat "#{spell.mental_td} mentTD, "
      total_mentalTD += spell.mental_td
    end
    if spell.spirit_td != 0
      bonus_string.concat "#{spell.spirit_td} spirTD, "
      total_spiritTD += spell.spirit_td
    end
    if spell.sorcerer_td != 0
      bonus_string.concat "#{spell.sorcerer_td} sorcTD, "
      total_sorcererTD += spell.sorcerer_td
    end
    if spell.strength.to_i != 0
      bonus_string.concat "#{spell.strength} str, "
      total_strength += spell.strength.to_i
    end
    if spell.dodging.to_i != 0
      bonus_string.concat "#{spell.dodging} dodge, "
      total_dodging += spell.dodging.to_i
    end
    if spell.combatmaneuvers.to_i != 0
      bonus_string.concat "#{spell.combatmaneuvers} CM, "
      total_combatmaneuvers += spell.combatmaneuvers.to_i
    end
    if spell.damagefactor.to_i != 0
      bonus_string.concat "#{spell.damagefactor}% DF, "
      total_damagefactor += spell.damagefactor.to_i
    end
    if spell.block.to_i != 0
      bonus_string.concat "#{spell.block}% block, "
      total_block += spell.block.to_i
    end
    if spell.constitution.to_i != 0
      bonus_string.concat "#{spell.constitution} con, "
      total_constitution += spell.constitution.to_i
    end
    if spell.health.to_i != 0
      bonus_string.concat "#{spell.health} health, "
      total_health += spell.health.to_i
    end
    if spell.unarmed_af.to_i != 0
      bonus_string.concat "#{spell.unarmed_af} UAF, "
      total_uaf += spell.unarmed_af.to_i
    end
    if spell.asg.to_i != 0
      bonus_string.concat "#{spell.asg} AsG, "
      total_asg += spell.asg.to_i
    end
    begin
      if spell.fof_offset.to_i != 0
        bonus_string.concat "#{spell.fof_offset} FoF offset, "
        total_fof_offset += spell.fof_offset.to_i
      end
    rescue
      nil
    end
    output.concat(sprintf("  %04s:  %-023s - %s%s\n", spell.num.to_s, spell.name, spell.remaining, bonus_string.chop.chop))
    lastcircle = spell.circle
  }
  output.concat("\n")
  total_offense_string = ''
  total_defense_string = ''
  total_stat_string    = ''
  total_skill_string   = ''

  total_offense_string = total_offense_string + total_boltAS.to_s + ' bAS, ' if total_boltAS != 0
  total_offense_string = total_offense_string + total_physicalAS.to_s + ' pAS, ' if total_physicalAS != 0
  total_offense_string = total_offense_string + total_elementalCS.to_s + ' elemCS, ' if total_elementalCS != 0
  total_offense_string = total_offense_string + total_mentalCS.to_s + ' mentCS, ' if total_mentalCS != 0
  total_offense_string = total_offense_string + total_spiritCS.to_s + ' spirCS, ' if total_spiritCS != 0
  total_offense_string = total_offense_string + total_sorcererCS.to_s + ' sorcCS, ' if total_sorcererCS != 0
  total_offense_string = total_offense_string + total_damagefactor.to_s + '% DF ' if total_damagefactor != 0
  total_offense_string = total_offense_string + total_uaf.to_s + ' UAF, ' if total_uaf != 0
  total_offense_string.chop!.chop!

  total_defense_string = total_defense_string + total_boltDS.to_s + ' bDS, ' if total_boltDS != 0
  total_defense_string = total_defense_string + total_physicalDS.to_s + ' pDS, ' if total_physicalDS != 0
  total_defense_string = total_defense_string + total_elementalTD.to_s + ' elemTD, ' if total_elementalTD != 0
  total_defense_string = total_defense_string + total_mentalTD.to_s + ' mentTD, ' if total_mentalTD != 0
  total_defense_string = total_defense_string + total_spiritTD.to_s + ' spirTD, ' if total_spiritTD != 0
  total_defense_string = total_defense_string + total_sorcererTD.to_s + ' sorcTD, ' if total_sorcererTD != 0
  total_defense_string = total_defense_string + total_block.to_s + '% block, ' if total_block != 0
  total_defense_string = total_defense_string + total_asg.to_s + ' AsG, ' if total_asg != 0
  total_defense_string = total_defense_string + total_fof_offset.to_s + ' FoF offset, ' if total_fof_offset != 0
  total_defense_string.chop!.chop!

  total_stat_string = total_stat_string + total_strength.to_s + ' str, ' if total_strength != 0
  total_stat_string = total_stat_string + total_constitution.to_s + ' con, ' if total_constitution != 0
  total_stat_string = total_stat_string + total_health.to_s + ' health, ' if total_health != 0
  total_stat_string.chop!.chop!

  total_skill_string = total_skill_string + total_dodging.to_s + ' dodge, ' if total_dodging != 0
  total_skill_string = total_skill_string + total_combatmaneuvers.to_s + ' CM, ' if total_combatmaneuvers != 0
  total_skill_string.chop!.chop!

  output.concat("- Totals:\n")
  output.concat("  Offense: #{total_offense_string}\n") if total_offense_string.length > 0
  output.concat("  Defense: #{total_defense_string}\n") if total_defense_string.length > 0
  output.concat("    Stats: #{total_stat_string}\n") if total_stat_string.length > 0
  output.concat("   Skills: #{total_skill_string}\n") if total_skill_string.length > 0
  output.concat("\n\n")
end

respond output
