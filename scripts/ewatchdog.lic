=begin
  ;ewatchdog

  This is a simple idle timeout script that will log you out after
  a specified amount of time even if scripts are actively sending
  commands. Only manually typing a command (should) reset the clock.

  You should not rely on this or any other script to protect you from
  purposefully or inadvertently scripting while away from the keyboard.
  This is meant as an additional safeguard.

  Based on ;watchdog by Cait but leveraging native lich idle tracking

  usage:
	;ewatchdog #
	set timer to # seconds

	;ewatchdog #m
	set timer to # minutes (number followed by the literal letter M)

	;ewatchdog
	default to a timer of 300 seconds (5 minutes)

	;ewatchdog help
	display usage information

  author: elanthia-online
  tags: idle, timeout, scripting
  version: 1.0

=end


if script.vars[1] =~ /(\d+)m/i
	seconds = $1.to_i * 60
elsif script.vars[1] =~ /^he/i
	_respond "usage is: ;#{script.name}"
	_respond "          set timer to 300 seconds (default)"
	_respond ""
	_respond "          ;#{script.name} #"
	_respond "          set timer to # seconds, i.e. ;#{script.name} 120"
	_respond ""
	_respond "          ;#{script.name} #m"
	_respond "          set timer to # minutes (number followed by a literal letter M, i.e. ;#{script.name} 7m"
	exit
else
	seconds = script.vars[1].to_i
end
seconds = 300 if seconds == 0

Lich::Messaging.msg("whisper", "#{script.name}: Setting idle timeout to #{seconds} seconds")

# handle autostart case where timestamp isn't set
wait_while { $_IDLETIMESTAMP_.nil? }

loop {
	if idle?(seconds)
		Lich::Messaging.msg("bold", "#{script.name}: IDLE THRESHOLD REACHED - GOODBYE")
		# do_client this in case people have upstream hooks, like for instance invdb on logout
		do_client("quit")
	elsif idle?(seconds - 60)
		remaining = $_IDLETIMESTAMP_.to_i + seconds - Time.now.to_i
		Lich::Messaging.msg("bold", "#{script.name}: IDLE THRESHOLD DETECTED - YOU WILL BE LOGGED OUT IN #{remaining} SECONDS")
	end
	sleep 5
}
