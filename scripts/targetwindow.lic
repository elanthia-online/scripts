=begin
  TargetWindow.lic
  Wrayth window that lists hostile creatures and their status with click to target.
  Only updates when a target enters/leaves or has a status change.

  ;targetwindow window    - Opens a Wrayth window to display targets with status.
  ;targetwindow quickbar     - Displays targets and their status on the quickbar at the bottom.
  ;targetwindow showarms  - Toggle displaying Grasp of the Grave arm count. Click to cast Grasp of the Grave.
  ;targetwindow flash     - Toggle flashing red box around current target. Quickbar only.

        author: Nisugi
  contributors: Dalzashel
          game: Gemstone
          tags: hunting, combat, status tracking, target tracking
       version: 1.4
      required: Wrayth

  Change Log:
  v1.4 (2023-09-23)
    - Additional information added to header.
  v1.3 (2023-09-21)
    - Add showarms setting to include a total count of the number of arms in the room (useful for Sorcerer's to see if they still have arms left)
  v1.2 (2023-09-19)
    - adjusted when flashing box occurs
  v1.1 (2023-09-18)
    - typos
  v1.0 (2023-09-16)
    - Initial Release
=end

module TargetWindow
  before_dying { puts("<closeDialog id='TargetWindow'/>") }
  @settings = CharSettings
  @grasp_arms = Regexp.new(/^(?:arm|appendage|claw|limb|pincer|tentacle)s?$|^(?:palpus|palpi)$/i)

  def self.status_fix(status)
    case status
    when /rather calm/
      status = "calmed"
    when /to be frozen in place/
      status = "frozen"
    when /held in place/
      status = "held"
    when /lying down/
      status = "prone"
    end
    return "(#{status})"
    # /calmed|sleeping|webbed|stunned|kneeling|sitting|^lying|prone|frozen|held in place/ bound?
  end

  def self.window
    puts("<closeDialog id='TargetWindow'/><openDialog type='dynamic' id='TargetWindow' title='Targets' target='TargetWindow' scroll='manual' location='main' justify='3' height='68' resident='true'><dialogData id='Targets'></dialogData></openDialog>")
    loop {
      old_targets = GameObj.targets
      targets = GameObj.targets.select { |t| !(t.noun =~ @grasp_arms || (t.name =~ /^animated / && t.name != "animated slush")) }
      if targets.length > 0
        output = "<dialogData id='TargetWindow' clear='t'>"
        output += "<link id='total' value='Total Targets: #{targets.length}' cmd='target next' echo='target next' justify='3' top='3' left='0' height='15' width='195'/>"
        targets.each { |t|
          target_status = TargetWindow.status_fix(t.status) unless t.status.nil?
          output += "<link id='#{t.id}' value='#{target_status} #{t.name.split.map(&:capitalize).join(' ')}' cmd='target ##{t.id}' echo='target ##{t.id}'  justify='3' left='0' height='15' width='195'/>"
        }
        if @settings['show_arms']
          arms = GameObj.targets.select { |t| t.noun =~ @grasp_arms }
          output += "<link id='armCount' value='Total arms: #{arms.length}' cmd='incant 709' echo='incant 709' top='#{15 * (targets.length + 2)}' justify='3' left='0' height='15' width='195'/>"
        end
        output += "</dialogData>"
      else
        output = "<dialogData id='TargetWindow' clear='t'><label id= 'none' value='No Targets' justify='3' top='5' left='0' align='center' width='187'/></dialogData>"
      end
      puts(output)
      wait_while { old_targets == GameObj.targets }
    }
  end

  def self.quickbar
    loop {
      old_targets = GameObj.targets
      targets = GameObj.targets.select { |t| !(t.noun =~ @grasp_arms || (t.name =~ /^animated / && t.name != "animated slush")) }
      if targets.length > 0
        output = "<dialogData id='quick' clear='t'>"
        if @settings['show_arms']
          arms = GameObj.targets.select { |t| t.noun =~ @grasp_arms }
          output += "<link id='twarms' value='Total Arms: #{arms.length}   - ' cmd='incant 709' echo='incant 709'/>"
        end
        output += "<link id='twtotal' value='Total Targets: #{targets.length}' cmd='target next' echo='target next'/>"
        targets.each { |t|
          target_status = TargetWindow.status_fix(t.status) unless t.status.nil?
          output += "<link id='#{t.id}' value='#{target_status} #{t.name.split.map(&:capitalize).join(' ')}  ' cmd='target ##{t.id}' echo='target ##{t.id}'/>"
        }
        output += "</dialogData>"
      else
        output = "<dialogData id='quick' clear='t'><label id= 'lblnone' value='No targets found.' top='0' left='0' align='center' width='187'/></dialogData>"
      end
      puts(output)
      if @settings['flash_target']
        blink = %Q[<annotate dialog="quick" control="#{XMLData.current_target_id}" seconds="5"/>]
        puts(blink) unless XMLData.current_target_id.nil?
      end
      curr_target = XMLData.current_target_id
      wait_while { old_targets == GameObj.targets && curr_target == XMLData.current_target_id }
    }
  end
end

if Script.current.vars[0].to_s =~ /^quick(?:bar)?$/
  TargetWindow.quickbar
elsif Script.current.vars[0].to_s =~ /^window$/
  TargetWindow.window
elsif Script.current.vars[0].to_s =~ /^flash$/
  CharSettings['flash_target'] = !CharSettings['flash_target']
  puts("Current target will #{CharSettings['flash_target'] == false ? "NOT " : ""}flash.")
elsif Script.current.vars[0].to_s =~ /^showarms$/
  CharSettings['show_arms'] = !CharSettings['show_arms']
  puts("Total arm count will #{CharSettings['show_arms'] == false ? "NOT " : ""}be shown.")
else
  puts("Please specify where the targets should be displayed.")
  puts(";#{Script.current.name} window")
  puts(";#{Script.current.name} quickbar")
  puts("")
  puts("You may also toggle the showing of a count of how many arms are in the room with:")
  puts(";#{Script.current.name} showarms")
  puts("")
  puts("Or have your current target flash when displaying to the quickbar with:")
  puts(";#{Script.current.name} flash")
  puts("")
end
exit
