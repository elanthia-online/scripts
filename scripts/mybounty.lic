=begin

MyBounty

Use a BOOST BOUNTY, then ;mybounty will help you be picky about what bounty you want to keep and which to ignore without risking carpal tunnel. Asks for a bounty at the Adventurer's Guild until you get the bounty/bounties you want. When the bounty matches, it'll run you to the NPC and ask what the bounty is.

You can use it anywhere and it will go to the Adventure Guild for you and start asking for bounties.

Please report any difficulties or bugs to Luxelle, this was a huge update or three.

    author: Luxelle
    game: Gemstone
    tags: bounty, gems, herbs, specific, lumnis, contest, boost bounty, bounty boost, exclude bounties, bounties, skins, limit
    version: 3.4
    Tested in: Ta'Illistim, Wehnimer's, Solhaven, Icemule

    Notes: to set the bounties you want, you need to first use:  ;mybounty setup

    Credits: GTK GUI pulled from Bigshot & Dreavening. All credit goes to Azanoth, SpiffyJr, Tillmen, and Dreaven for this great code!

    Thanks: Doug, Mice, Selandriel, Atanamir, Ondrein, and Pukk
            and a big thanks to Pukk for adding the GUI Setup <3

    Usage: ;mybounty
           ;mybounty setup

    Changelog:
      v3.4 - 2024 Jan 04 - Add support for HW's taskmaster name Halfwhistle
      v3.3 - 2021 Sep 13 - Intergrated Mister Doug's GTK 3 support
      v3.2 - 2021 Jul 28 - The big PSM 3 update fix
      v3.1 - 2021 Jul 05 - Should avoid asking a companion/familiar/spirit/etc for a bounty
      v3.0 - 2021 Apr 22 - added run to see what bounty is, it will go to the advguild
                           if you are not there when it starts
      v2.1 - 2017 Sep 21 - cleaned up testing errors from 2.0  oops!
=end

# TODO
#

def message(message)
  if $fake_stormfront then puts("\034GSL\r\n") else puts("<pushBold\/>") end
  puts("" + message)
  if $fake_stormfront then puts("\034GSM\r\n") else puts("<popBold\/>") end
end

gtk2_Active = (Gtk::Version::STRING.chr == '2')
gtk3_Active = (Gtk::Version::STRING.chr == '3')

setup = proc {
  Gtk.queue {
    $MB_WINDOW = Gtk::Window.new
    $MB_WINDOW.title = "Mybounty Setup"
    $MB_WINDOW.set_border_width(10)
    $MB_WINDOW.set_icon(@default_icon) if gtk3_Active
    $MB_BOX = Gtk::VBox.new(false, 0) if gtk2_Active
    $MB_BOX = Gtk::Box.new(:vertical) if gtk3_Active
    $MB_BOX.set_border_width(5)

    $MB_VERTICAL_BOX1 = Gtk::VBox.new(false, 0) if gtk2_Active
    $MB_VERTICAL_BOX1 = Gtk::Box.new(:vertical, 0) if gtk3_Active

    $MB_WINDOW.add($MB_BOX)
    $MB_NOTEBOOK = Gtk::Notebook.new
    $MB_NOTEBOOK.set_show_border(true)
    $MB_BOX.add($MB_NOTEBOOK)
    $MB_NOTEBOOK.append_page($MB_VERTICAL_BOX1, Gtk::Label.new('Bounties'))

    $MB_ENTRY = Hash.new
    $MB_TABLE_SIZE = Hash.new
  }

  Gtk.queue {
    $MB_TABLE1 = Gtk::Table.new(6, 3, false)
    $MB_TABLE1.row_spacings = 3
    $MB_TABLE1.column_spacings = 3
    $MB_VERTICAL_BOX1.pack_start($MB_TABLE1, :expand => false, :fill => false, :padding => 0)
  }

  def self.add_label_entry(table, label, variable)
    size = $MB_TABLE_SIZE[table] || 0

    label = Gtk::Label.new(label)
    align = Gtk::Alignment.new 1, 0, 0, 0
    align.set_padding(4, 0, 3, 4)
    align.add(label)
    table.attach(align, 0, 1, size, size + 1)

    entry = Gtk::Entry.new
    entry.text = UserVars.mybounty[variable].to_s
    entry.set_width_request(157)
    table.attach(entry, 1, 2, size, size + 1)

    $MB_ENTRY[variable] = entry
    $MB_TABLE_SIZE[table] += 1
  end

  Gtk.queue {
    $MB_ENTRY = Hash.new
    add_label_entry($MB_TABLE1, "Gems:", 'gems_setup')
    add_label_entry($MB_TABLE1, "Forage:", 'forage_setup')
    add_label_entry($MB_TABLE1, "Furrier:", 'furrier_setup')
    add_label_entry($MB_TABLE1, "Rescue Child:", 'kidrescue_setup')
    add_label_entry($MB_TABLE1, "creature Problem:", 'creature_setup')
    add_label_entry($MB_TABLE1, "Bandits:", 'bandit_setup')
    add_label_entry($MB_TABLE1, "Escorts:", 'escort_setup')
    add_label_entry($MB_TABLE1, "Heirloom:", 'heirloom_setup')
  }

  Gtk.queue {
    $MB_WINDOW.signal_connect("delete_event") {
      $MB_SETUP_COMPLETED = true
    }
  }

  Gtk.queue {
    $MB_TOOLTIPS = Gtk::Tooltips.new if gtk2_Active # I don't believe this is used
    $MB_TOOLTIPS.enable if gtk2_Active	# I don't believe this is either

    label = Gtk::Label.new
    label.set_markup("Leave blank if you don't want to do that bounty, otherwise enter <b>YES</b>")
    align = Gtk::Alignment.new(1, 0, 0, 0)
    align.set_padding(5, 0, 0, 25)
    align.add(label)
    $MB_TABLE1.attach(align, 1, 2, 9, 10)

    $MB_WINDOW.show_all
  }

  $MB_SETUP_COMPLETED = false
  until ($MB_SETUP_COMPLETED)
    sleep 1
  end

  UserVars.mybounty ||= Hash.new
  $MB_ENTRY.keys.each { |key|
    if ($MB_ENTRY[key].class.to_s =~ /CheckButton/)
      UserVars.mybounty[key] = $MB_ENTRY[key].active?
    else
      if (key == 'wounded_eval')
        UserVars.mybounty[key] = $MB_ENTRY[key].text
      else
        UserVars.mybounty[key] = $MB_ENTRY[key].text.strip.downcase
      end
    end
  }
  UserVars.save()

  Gtk.queue {
    $MB_WINDOW.destroy
  }
}

################
## Help
################################################

def usage
  respond ""
  respond "Use this script to find only the bounties you want. It works when you are using BOOST BOUNTY"
  respond "Remember to use BOUNTY BOOST for the script to continue. ;mybounty will remove your current bounty, no matter what it is, but not use a boost or move you."
  respond ""
  respond "Set your desired bounty/bounties first with: ;mybounty setup"
  respond ""
  # respond "If ;mybounty setup is not working (It's failing on GTK 2) then copy paste commands below to turn ON specific bounties with yes, use no in the quotes to turn them off:"
  #       respond ""
  #       respond "        ;e echo UserVars.mybounty[\"gems_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"forage_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"furrier_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"kidrescue_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"creature_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"bandit_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"escort_setup\"] = \"yes\""
  #       respond "        ;e echo UserVars.mybounty[\"heirloom_setup\"] = \"yes\""
  # respond ""
  respond "Usage from anywhere (it'll run you to the Adventurer's Guild) ;mybounty"
  respond ""
  exit
end

if script.vars[1] == "setup"
  setup.call
  exit
elsif script.vars[1] == "help"
  usage
elsif script.vars[1] == "?"
  usage
elsif script.vars[1] =~ /(.*)/
  message("Usage is:
;mybounty setup
;mybounty help
;mybounty ?")
  exit
end

if "#{LICH_VERSION}".chr == '4'
  respond "You are using Lich 4 and the MyBounty script cannot tell if you have a bounty boost active or not. If you do not have one active, it will ... get in a useless loop. Kill the script and activate a BOOST BOUNTY."
  respond "When you are able to upgrade to Lich 5, it will be able to tell."

else
  #	echo "On Lich 5!"
  if Effects::Buffs.active?("Bounty Boost")
    echo "Bounty Boost Active ... continuing..."
  else
    echo "Use a BOOST BOUNTY and call me back, kay?"
    exit
  end

end

unless Room.current.tags.include? 'advguild'
  echo "Taking you to the advguild."
  Script.run("go2", "advguild")
end

gems = false
forage = false
furrier = false
kidrescue = false
creature = false
bandit = false
escort = false
heirloom = false

if UserVars.mybounty["gems_setup"] =~ /yes/i
  gems = true
  message("Gems: Yes")
  setup = true
else
  gems = false
end

if UserVars.mybounty["forage_setup"] =~ /yes/i
  forage = true
  message("Forage: Yes")
  setup = true
else
  forage = false
end

if UserVars.mybounty["furrier_setup"] =~ /yes/i
  furrier = true
  message("Furrier: Yes")
  setup = true
else
  furrier = false
end

if UserVars.mybounty["kidrescue_setup"] =~ /yes/i
  kidrescue = true
  message("Kidrescue: Yes")
  setup = true
else
  kidrescue = false
end

if UserVars.mybounty["creature_setup"] =~ /yes/i
  creature = true
  message("Creature: Yes")
  setup = true
else
  creature = false
end

if UserVars.mybounty["bandit_setup"] =~ /yes/i
  bandit = true
  message("Bandit: Yes")
  setup = true
else
  bandit = false
end

if UserVars.mybounty["escort_setup"] =~ /yes/i
  escort = true
  message("Escort: Yes")
  setup = true
else
  escort = false
end

if UserVars.mybounty["heirloom_setup"] =~ /yes/i
  heirloom = true
  message("Heirloom: Yes")
  setup = true
else
  heirloom = false
end

if gems == false && forage == false && furrier == false && kidrescue == false && creature == false && bandit == false && escort == false && heirloom == false
  message("You have nothing setup! Exiting!")
  exit
end

##############
# HERE WE GO! Look for just the bounty/ties you want
# Check for current bounty and remove it if it is found, make sure Boost is going
################################################
current_area = "#{Room[Room.current.find_nearest_by_tag("town")].location}";
# echo "#{current_area}"
task_npc = Room.current.uid.first == 7503207 ? "Halfwhistle" : "Taskmaster"

if XMLData.bounty_task != "You are not currently assigned a task."
  fput "ask #{task_npc} for remov"
  fput "ask #{task_npc} for remov"
end

# Go report to
# within XMLData.bounty_task

# if XMLData.active_spells.count {|spell| spell[0] =~ /Bounty Boost/ } > 0

if "#{LICH_VERSION}".chr == '4'
  respond "You are using Lich 4 and the MyBounty script cannot tell if you have a bounty boost active or not. If you do not have one active, it will ... get in a useless loop. Kill the script and activate a BOOST BOUNTY."
  respond "When you are able to upgrade to Lich 5, it will be able to tell."

else
  echo "On Lich 5!"
  if Effects::Buffs.active?("Bounty Boost")
    echo "Bounty Boost Active ... continuing..."
  else
    echo "Use a BOOST BOUNTY and call me back, kay?"
    exit
  end

end

##############
# Get the right bounty here!
################################################

if setup == true
  fput "ask #{task_npc} for bounty"

  while (line = get)
    if line =~ /bandit/ and bandit == true
      echo "Got Your Bandits Right here!"
      Script.run("go2", "advguard")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin|aggressive/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1
      if XMLData.bounty_task =~ /Go report to/
        respond "Trying to find the guard at the other location for you."
        Script.run("go2", "advguard2")
        sleep 0.2

        GameObj.npcs.select { |npc|
          ((npc.type !~ /familiar|companion|passive|skin|aggressive/))
          fput "ask #{npc.noun} about bounty"
        }
        sleep 0.1

      end
      break
    elsif line =~ /bandit/ and bandit == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /creature problem/ and creature == true
      echo "Got Your Creatures Right here!"
      Script.run("go2", "advguard")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1
      if XMLData.bounty_task =~ /Go report to/
        respond "Trying to find the guard at the other location for you."
        Script.run("go2", "advguard2")
        sleep 0.2

        GameObj.npcs.select { |npc|
          ((npc.type !~ /familiar|companion|passive|skin/))
          fput "ask #{npc.noun} about bounty"
        }
        sleep 0.1
      end

      break
    elsif line =~ /creature problem/ and creature == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /urgently needs/ and kidrescue == true
      echo "Got your rescue right here!"
      Script.run("go2", "advguard")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1
      if XMLData.bounty_task =~ /Go report to/
        respond "Trying to find the guard at the other location for you."
        Script.run("go2", "advguard2")
        sleep 0.2

        GameObj.npcs.select { |npc|
          ((npc.type !~ /familiar|companion|passive|skin/))
          fput "ask #{npc.noun} about bounty"
        }
        sleep 0.1
      end

      break
    elsif line =~ /urgently needs/ and kidrescue == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /lost heirloom/ and heirloom == true
      echo "Got your heirloom right here!"
      Script.run("go2", "advguard")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1
      if XMLData.bounty_task =~ /Go report to/
        respond "Trying to find the guard at the other location for you."
        Script.run("go2", "advguard2")
        sleep 0.2

        GameObj.npcs.select { |npc|
          ((npc.type !~ /familiar|companion|passive|skin/))
          fput "ask #{npc.noun} about bounty"
        }
        sleep 0.1
      end

      break
    elsif line =~ /lost heirloom/ and heirloom == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /local herbalist|local healer|local alchemist/ and forage == true
      echo "Got your foraging task right here!"

      if current_area =~ /Icemule|Wehnimer/
        Script.run("go2", "npchealer")
      else
        # Rest go here?
        Script.run("go2", "herbalist")
      end
      sleep 0.4
      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }

      break
    elsif line =~ /local herbalist|local healer|local alchemist/ and forage == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /local furrier/ and furrier == true
      echo "Got your skinning task right here!"
      Script.run("go2", "furrier")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1
      if XMLData.bounty_task =~ /Go report to/
        respond "Trying to find the guard at the other location for you."
        Script.run("go2", "advguard2")
        sleep 0.2

        GameObj.npcs.select { |npc|
          ((npc.type !~ /familiar|companion|passive|skin/))
          fput "ask #{npc.noun} about bounty"
        }
        sleep 0.1
      end

      break
    elsif line =~ /local furrier/ and furrier == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /gem dealer/ and gems == true
      echo "Got your gem task right here!"
      Script.run("go2", "gemshop")
      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      break
    elsif line =~ /gem dealer/ and gems == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /protective escort/ and escort == true
      echo "Got your escort task right here!"
      Script.run("go2", "advpickup")
      sleep 0.2

      GameObj.npcs.select { |npc|
        ((npc.type !~ /familiar|companion|passive|skin/))
        fput "ask #{npc.noun} about bounty"
      }
      sleep 0.1

      break
    elsif line =~ /protective escort/ and escort == false
      echo "Refusing this bounty ..."
      sleep 0.2
      fput "ask #{task_npc} for remov"
      fput "ask #{task_npc} for remov"
      sleep 4
      fput "ask #{task_npc} for bounty"
    end

    if line =~ /annoyed and says/
      sleep 2
      fput "ask #{task_npc} for bounty"
    end

  end
else
  exit
end
