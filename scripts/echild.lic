=begin
Catrania's child.lic script, tweaked.  prefer this over the "childgoto" script bc it moves faster.

USAGE:  once you have a kid, type ;child2 or ;child2 roomnumber
You must also have the script "STEP2.lic."

    maintainer: elanthia-online
  contributers: Drafix, Catrania, Kaldonis, Kalros, Hazado, Tysong
          name: echild
          game: Gemstone
          tags: escort, child, advguild, adventurer guild, guild
       version: 1.15.0

  v1.15.0 (2022-05-27)
    - Updated to support KF rapids and guard and rebaselined as echild
    
=end

=begin
Old Changelog:
11/06/2010 - added disabling spells for when there are NPCs present (but no PCs)...can change by adding/removing/reordering numbers from list. (line 13)
12/16/2010 - and onward: bug fixes
02/19/2010 - added illistim and disabled automatic reward collection
03/07/2010 - disabling spells will now only be cast when targetable NPCs are in the room.  no more ewaving the Fleet Captain
03/28/2010 - i noticed sometimes it was prepping ewave when only the kid was present; these 'false positives' should be fixed now
06/04/2011 - you people never tell me when shit is broken....I tried to fix a few things...hope i didnt make it worse.  LET ME KNOW
           - should go to helgas for landing guard and back to gate if it just missed him again
           - added Teras
04/17/2012 - added Vaalor.
05/18/2012 - made it work in RR....wasn't seeing the purser properly.
12/10/2012 - made it cast 213 correctly as a disabling spell  (was trying to cast 213 AT critters before...I didn't know you couldnt!)  thanks to Velfi for pointing it out.
           - also fixed the purser bug.  sorry about that...it thought everyone was in RR when they weren't.
05/19/2015 - Drafix took over maintaining this piece of fail from Jeril's grubby paws
           - added recognizing of passive critters
           - added dropping off child to nearest guard
           - prevented script from using seeking
06/01/2015 - added pause back in
06/25/2015 - Fix alternate drop off spot
07/03/2015 - Rewrote parts of the script to simplify and make it work with Pinefar v1.3!
07/06/2015 - Rewrote some more parts of it to make it work with vaalor guards.
           - Fixed a loop problem for choosing the alternate rooms twice
11/04/2015 - Fixed purser in RR
02/19/2015 - Drafix removed as maintainer
           - Kalros added as maintainer
05/11/2016 - Hazado added specific child tracking, No more losing your child when someone elses child is there!
           - Kalros removed as maintainer
           - Kaldonis added as maintainer
05/17/2016 - will now deliver child to whatever guard is closest to room you specify, ;echild 228 for landing guards
09/18/2016 - I'm back bitches!

09/09/2017 - Added min mana setting and fixed the checking of untargettable npcs
           - To enable minimum mana setting use the command below:
             ;echild mana 50
10/05/2017 - Fix RR for being retarded and putting the npc in the room description
10/12/2017 - Fix min mana comparison issue
05/15/2020 - 1.8 Don't e-wave in town, use the cheapest spell mana-wise, and prefer 213/1011 as it works for all critters
05/20/2020 - 1.9 hide justice check - ugh you guys suck
05/20/2020 - 1.10 fix filtering of spells
05/21/2020 - 1.11 add monk spells, move sanctuary to multi-target section only, add lullabye
06/07/2020 - 1.12 filter 410 for specific critters, allow 504 to be multi-target if airlore > 20
06/08/2020 - 1.13 fix mult-target filtering bug
06/15/2020 - 1.14 filter ghosts from 501
=end

Settings['untargetable'] ||= Array.new
Settings['min_mana'] ||= 0

if script.vars[0] =~ /list/
  echo Settings['untargetable'].inspect
  exit
elsif script.vars[0] =~ /clear/
  Settings['untargetable'] = Array.new
  exit
elsif script.vars[0] =~ /remove/
  echo Settings['untargetable'].delete(script.vars[2..-1].join(' '))
  exit
elsif script.vars[0] =~ /mana/
  Settings['min_mana'] = script.vars[2].to_i
  echo "Minimum mana to reserve: #{Settings['min_mana']}"
  exit
end

seeking = $go2_use_seeking
$go2_use_seeking = false
before_dying{ $go2_use_seeking = seeking }

@check_justice = proc {
   justice = nil
   action = proc { |server_string|
      if server_string =~ /^You sense that your surroundings are calm|^There is no justice/
         justice = !(server_string =~ /You sense that your surroundings are calm/).nil?
         nil
      else
         server_string
      end
   }
   before_dying{DownstreamHook.remove("#{script.name}_check_justice")}
   DownstreamHook.add("#{script.name}_check_justice", action)
   $_SERVER_.puts 'justice status'
   
   wait_until { !justice.nil? }
   DownstreamHook.remove("#{script.name}_check_justice")
   justice
}

Watchfor.new ("You failed"){Script.self.kill}
@disablers = [ 
  {:num => 135, :town_safe => false, :single_target => false},
  {:num => 201, :town_safe => true, :single_target => true},
  {:num => 213, :town_safe => true, :single_target => false},
  {:num => 316, :town_safe => false, :single_target => false},
  {:num => 410, :town_safe => false, :single_target => false},
  {:num => 501, :town_safe => true, :single_target => true},
  {:num => 504, :town_safe => true, :single_target => Skills.elair >= 20 ? false : true},
  {:num => 505, :town_safe => true, :single_target => true},
  {:num => 519, :town_safe => true, :single_target => true},
  {:num => 619, :town_safe => false, :single_target => false},
  {:num => 706, :town_safe => true, :single_target => true},
  {:num => 709, :town_safe => false, :single_target => false},
  {:num => 912, :town_safe => true, :single_target => false},
  {:num => 1005, :town_safe => true, :single_target => true},
  {:num => 1011, :town_safe => true, :single_target => false},
  {:num => 1207, :town_safe => true, :single_target => true},
  {:num => 1219, :town_safe => false, :single_target => false},
  {:num => 1608, :town_safe => false, :single_target => false},
]

def find_best_disabler
  # find all eligible spells
  candidates = @disablers.find_all{|disabler| 
    spell = Spell[disabler[:num]]
    spell.known? && spell.affordable? && ((mana - spell.mana_cost) >= Settings['min_mana'].to_i)
  }
  # filter spells that are safe in town if you're in town
  if @check_justice.call
    candidates = candidates.find_all{|disabler|
      disabler[:town_safe] == true
    }
  end

  # filter out single target spells if more than 1 target
  npcs = GameObj.targets.find_all{ |npc| !Settings['untargetable'].include?(npc.name) && npc.status !~ /dead|prone|lying down|stunned|sleeping|webbed|calm|sitting|frozen/}
  if npcs.size > 1
    candidates = candidates.find_all{|i| !i[:single_target]}
    
    # multi target filtering section
    candidates = candidates.find_all{|i| i[:num] != 410} if GameObj.npcs.any?{|i| i.name =~ /glacei|wraith|elemental|cold guardian/}

    # pick the preferred sanctuary spells - regardless of cost
    preferred = candidates.find{|i| i[:num].to_s =~ /213|1011/}
    return preferred unless preferred.nil?
  else
    npc = npcs[0]
    # single target filtering section
    candidates = candidates.find_all{|i| i[:num] != 501} if npc.name =~ /glacei|corpse|wraith|elemental|ghost/
    candidates = candidates.find_all{|i| i[:num] != 505} if npc.name =~ /glacei|elemental|wraith/
    candidates = candidates.find_all{|i| i[:num] != 410} if npc.name =~ /glacei|griffin|grifflet|elemental/
    candidates = candidates.find_all{|i| i[:num] != 709} if npc.name =~ /glacei|griffin|grifflet|elemental/
    candidates = candidates.find_all{|i| i[:num] != 706} if npc.name =~ /glacei|construct|elemental/
    candidates = candidates.find_all{|i| i[:num] != 201} if npc.name =~ /grimswarm|construct/
  end
  
  # order spells with least mana cost
  candidates = candidates.sort{|a,b| 
    (a[:num] % 100) <=> (b[:num] % 100)
  }

  return candidates.first
end

child_no_wait = [30815]

dropoff_points = Room.current.find_all_nearest_by_tag("advguard") + Room.current.find_all_nearest_by_tag("advguard2") + [2777, 2778, 2782, 2779, 2780, 2781, 2783, 2784, 2785, 2786, 2787]
reportee = 'sergeant|guard|purser|Belle|Luthrek'
if !script.vars[0].nil?
  place = Room[script.vars[0]].find_nearest(dropoff_points)
else
  place = Room.current.find_nearest(dropoff_points)
end
dropoff_points.delete(place)
child = nil
GameObj.npcs.each{ |n| if n.noun =~ /child/i; child = n.id;break;end;}
can_cast_disabler = find_best_disabler != nil?
1.times{
  loop {
    if Room.current.id != place
      thatroom = Room.current.id
      waitrt?
      start_script 'step2', ["#{place}"]
      wait_while{running?('step2')}
      wait_until{ thatroom != Room.current.id }
      waitrt?
      if GameObj.npcs.size != nil && !checkpcs && GameObj.npcs.any?{ |npc| !npc.type =~ /passive npc/ || !Settings['untargetable'].include?(npc.name)} && !(GameObj.npcs.any?{ |npc| npc.name =~ /#{reportee}/i} || GameObj.room_desc.any?{|i| i.name =~ /purser/})
        unless GameObj.npcs.size == 1 && GameObj.npcs.find{ |npc| npc.noun == 'child' }
          if can_cast_disabler
            found = false
            put "target random"
            while line = get
              if line =~ /Could not find a valid target\./
                unless GameObj.npcs.nil?
                  Settings['untargetable'].push(*GameObj.npcs.map{|i| i.name})
                  Settings['untargetable'] = Settings['untargetable'].uniq
                end
                break
              elsif line =~/You are now targeting/
                found = true
                break
              end
            end
            if found
              candidate_spell = find_best_disabler
              unless candidate_spell.nil?
                spell = Spell[candidate_spell[:num]]
                if spell.num == 1011
                  fput "spell active"
                  if spell.active?
                    fput "renew 1011"
                  else
                    spell.cast
                  end
                else 
                  spell.cast
                end
              end
            end
          end 
        end
      end
      
        
      wait_until{ GameObj.npcs.find{ |npc| npc.id == child } } unless child_no_wait.include?(Room.current.id)
      if Room.current.id != place
        waitrt?
        redo
      else
        waitrt?
        break
      end
    else
      break
    end
  }

  if Room.current.id == place && !npc=[GameObj.npcs.find{ |npc| npc.name =~ /#{reportee}/i }, GameObj.room_desc.find{|i| i.name =~ /#{reportee}/}].find{|i| i}
    place = Room.current.find_nearest(dropoff_points)
    dropoff_points.delete(place)
    redo
  else
    fput "ask ##{npc.id} about bounty"
  end
}

echo ";unpause to turn in task, ;kill to terminate the script"
pause_script if Char.name != 'Drafix'
waitfor "Adventurer's Guild"
Script.run('go2',  'advguild')
fput "ask taskmaster about bounty"
Script.run('go2', 'home') if Char.name == 'Drafix'