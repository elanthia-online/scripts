=begin
  Automated locker moving. 
  If you aren't premie you must give it a speed, as the default is immediate
  
  example: ;uhaul landing teras immediate
  
  Required: Lich 4.6.4
  Tags: lockers, movers, move
  Author: Ondreian
  version: 2.0.1
  
  Xanlin:
    Added Kraken's Fall and Cysaegir.
    No longer requires trust.
=end

=begin
  It reads:
  Standard Adventurers:

    Standard Shipping  -  1,000 silvers for delivery in 2 hours.
    Express Shipping   -  10,000 silvers for delivery in 30 minutes.

  Premium Adventurers:

    Standard Shipping  -  1,000 silvers for delivery in 2 hours.
    Express Shipping   -  2,500 silvers for delivery in 30 minutes.
    Immediate Shipping -  5,000 silvers for delivery in 1 minute.
=end

class Movers

  SPEEDS = {
    "immediate" => 5000,
    "express"   => 10000, #if you aren't using immediate, then you're probably not premium, using standard prices
    "standard"  => 1000, 
  }

  ROOMS = {
    "landing"     => 8896,
    "icemule"     => 3373,
    "fwi"         => 16146,
    "teras"       => 12539,
    "vaalor"      => 10439,
    "illistim"    => 13250,
    "solhaven"    => 5601,
    "riversrest"  => 10954,
    "krakensfall" => 28977,
    #cysaegir: #don't know the room for this mover yet
  }

  LOOKUP = {
    "wehnimer's landing" => /landing|wehn|wl/,
    "solhaven"           => /sol/,
    "teras"              => /ter/,
    "ta'vaalor"          => /vaalor/,
    "four winds"         => /mist|fwi|four|ifw/,
    "ta'illistim"        => /illi/,
    "river's rest"       => /rr|rest|river/,
    "icemule"            => /mule|imt/,
    "zul logoth"         => /zul|logoth/,
    "cysaegir"           => /cysaegir|cys?/,
    "kraken's fall"      => /kraken|fall|kf/
  }
  
  def self.lookup(arg)
    LOOKUP.each_pair.find { |town, pattern| arg =~ pattern }.shift || arg
  end

  def self.closest_mover
    return Room.current.find_nearest(ROOMS.values)
  end
  
  def self.wealth();
    wealth_pattern = /^You have (no|[,\d]+|but one) silver with you/;
    wealth = dothistimeout 'wealth quiet',2, wealth_pattern;
    coins = 0;
    if wealth.gsub('but one','1') =~ wealth_pattern;
      coins = $1.gsub(',','').to_i;
    end;
    return coins;
  end;
    
  def self.swap(from, to, speed="immediate")
    starting_room = Room.current.id;
    cost = SPEEDS[speed.downcase]
    if !cost
      error "unrecognized speed: #{speed}\n  valid speeds: #{SPEEDS.to_h.keys.join(', ')}"
      exit
    end

    fput "unhide" if hidden
    #skip bank if we already have the coins
    coins = self.wealth
    if coins < cost
      #TODO: check bank account first
      #TODO: jump to fwi if we don't have cash local and are premium, use movers there
      Script.run('go2','bank')
      fput "withdraw #{cost-coins}"
    end
    Script.run('go2',"#{closest_mover}")
    sleep 0.2
    #TODO: verify npc exists
    if Room.current.id == closest_mover
      fput "ask ##{GameObj.npcs.first.id} for move"
      fput "say yes"
      fput "say #{from}"
      fput "say #{to}"
      fput "say #{speed}"
    end
    #TODO: verify locker move messaging
    #The young clerk nods and jots something down.  "Okay, it's done!  Immediate rate locker shipping from Kharag 'doth Dzulthu to Kraken's Fall."
    #You hand the young clerk 5000 silvers.
    
    Script.run('go2',"#{starting_room}") if starting_room != Room.current.id
  end

  def self.help
    respond %{
      help:
        ;uhaul <from> <to> <speed=immediate>
    }
    exit
  end

  def self.error(msg)
    respond "\n\n  <<error>>\n\n  #{msg}\n\n"
    help
  end
end

args = script.vars[1..-1].map { |str| str.downcase } || []

Movers.help                                         if args.include?("help")
Movers.error "at most 3 arguments are allowed"      if args.size > 3
Movers.error "<from> and <to> are required options" if args.size < 1
Movers.swap *args.map {|arg| Movers.lookup arg }

